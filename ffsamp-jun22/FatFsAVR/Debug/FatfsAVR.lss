
FatfsAVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002acc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00002acc  00002b60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000053a  0080007a  0080007a  00002b7a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002b7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002bac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  00002be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003c5c  00000000  00000000  00002e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088b  00000000  00000000  00006a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002782  00000000  00000000  000072e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b28  00000000  00000000  00009a6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000799  00000000  00000000  0000a594  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006674  00000000  00000000  0000ad2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000290  00000000  00000000  000113a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 39 00 	jmp	0x72	; 0x72 <__ctors_end>
       4:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
       8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
       c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      28:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__vector_10>
      2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      34:	0c 94 3f 14 	jmp	0x287e	; 0x287e <__vector_13>
      38:	0c 94 71 14 	jmp	0x28e2	; 0x28e2 <__vector_14>
      3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      54:	78 12       	cpse	r7, r24
      56:	80 12       	cpse	r8, r16
      58:	d6 13       	cpse	r29, r22
      5a:	f2 12       	cpse	r15, r18
      5c:	d6 13       	cpse	r29, r22
      5e:	d6 13       	cpse	r29, r22
      60:	d6 13       	cpse	r29, r22
      62:	d6 13       	cpse	r29, r22
      64:	d6 13       	cpse	r29, r22
      66:	d6 13       	cpse	r29, r22
      68:	7e 13       	cpse	r23, r30
      6a:	84 13       	cpse	r24, r20
      6c:	97 13       	cpse	r25, r23
      6e:	aa 13       	cpse	r26, r26
      70:	c1 13       	cpse	r28, r17

00000072 <__ctors_end>:
      72:	11 24       	eor	r1, r1
      74:	1f be       	out	0x3f, r1	; 63
      76:	cf e5       	ldi	r28, 0x5F	; 95
      78:	d8 e0       	ldi	r29, 0x08	; 8
      7a:	de bf       	out	0x3e, r29	; 62
      7c:	cd bf       	out	0x3d, r28	; 61

0000007e <__do_copy_data>:
      7e:	10 e0       	ldi	r17, 0x00	; 0
      80:	a0 e6       	ldi	r26, 0x60	; 96
      82:	b0 e0       	ldi	r27, 0x00	; 0
      84:	ec ec       	ldi	r30, 0xCC	; 204
      86:	fa e2       	ldi	r31, 0x2A	; 42
      88:	02 c0       	rjmp	.+4      	; 0x8e <__do_copy_data+0x10>
      8a:	05 90       	lpm	r0, Z+
      8c:	0d 92       	st	X+, r0
      8e:	aa 37       	cpi	r26, 0x7A	; 122
      90:	b1 07       	cpc	r27, r17
      92:	d9 f7       	brne	.-10     	; 0x8a <__do_copy_data+0xc>

00000094 <__do_clear_bss>:
      94:	25 e0       	ldi	r18, 0x05	; 5
      96:	aa e7       	ldi	r26, 0x7A	; 122
      98:	b0 e0       	ldi	r27, 0x00	; 0
      9a:	01 c0       	rjmp	.+2      	; 0x9e <.do_clear_bss_start>

0000009c <.do_clear_bss_loop>:
      9c:	1d 92       	st	X+, r1

0000009e <.do_clear_bss_start>:
      9e:	a4 3b       	cpi	r26, 0xB4	; 180
      a0:	b2 07       	cpc	r27, r18
      a2:	e1 f7       	brne	.-8      	; 0x9c <.do_clear_bss_loop>
      a4:	0e 94 de 14 	call	0x29bc	; 0x29bc <main>
      a8:	0c 94 64 15 	jmp	0x2ac8	; 0x2ac8 <_exit>

000000ac <__bad_interrupt>:
      ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <mem_cpy>:
			FREE_BUF();
		}
	}

	LEAVE_FF(dj->fs, res);
}
      b0:	cf 93       	push	r28
      b2:	df 93       	push	r29
      b4:	42 30       	cpi	r20, 0x02	; 2
      b6:	51 05       	cpc	r21, r1
      b8:	c0 f0       	brcs	.+48     	; 0xea <mem_cpy+0x3a>
      ba:	db 01       	movw	r26, r22
      bc:	fc 01       	movw	r30, r24
      be:	9a 01       	movw	r18, r20
      c0:	cd 91       	ld	r28, X+
      c2:	dd 91       	ld	r29, X+
      c4:	c1 93       	st	Z+, r28
      c6:	d1 93       	st	Z+, r29
      c8:	22 50       	subi	r18, 0x02	; 2
      ca:	31 09       	sbc	r19, r1
      cc:	22 30       	cpi	r18, 0x02	; 2
      ce:	31 05       	cpc	r19, r1
      d0:	b8 f7       	brcc	.-18     	; 0xc0 <mem_cpy+0x10>
      d2:	9a 01       	movw	r18, r20
      d4:	22 50       	subi	r18, 0x02	; 2
      d6:	31 09       	sbc	r19, r1
      d8:	2e 7f       	andi	r18, 0xFE	; 254
      da:	2e 5f       	subi	r18, 0xFE	; 254
      dc:	3f 4f       	sbci	r19, 0xFF	; 255
      de:	82 0f       	add	r24, r18
      e0:	93 1f       	adc	r25, r19
      e2:	62 0f       	add	r22, r18
      e4:	73 1f       	adc	r23, r19
      e6:	41 70       	andi	r20, 0x01	; 1
      e8:	55 27       	eor	r21, r21
      ea:	41 15       	cp	r20, r1
      ec:	51 05       	cpc	r21, r1
      ee:	49 f0       	breq	.+18     	; 0x102 <mem_cpy+0x52>
      f0:	db 01       	movw	r26, r22
      f2:	fc 01       	movw	r30, r24
      f4:	48 0f       	add	r20, r24
      f6:	59 1f       	adc	r21, r25
      f8:	9d 91       	ld	r25, X+
      fa:	91 93       	st	Z+, r25
      fc:	e4 17       	cp	r30, r20
      fe:	f5 07       	cpc	r31, r21
     100:	d9 f7       	brne	.-10     	; 0xf8 <mem_cpy+0x48>
     102:	df 91       	pop	r29
     104:	cf 91       	pop	r28
     106:	08 95       	ret

00000108 <ld_clust>:
     108:	0f 93       	push	r16
     10a:	1f 93       	push	r17
     10c:	dc 01       	movw	r26, r24
     10e:	fb 01       	movw	r30, r22
     110:	62 8d       	ldd	r22, Z+26	; 0x1a
     112:	73 8d       	ldd	r23, Z+27	; 0x1b
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	2c 91       	ld	r18, X
     11a:	23 30       	cpi	r18, 0x03	; 3
     11c:	59 f4       	brne	.+22     	; 0x134 <ld_clust+0x2c>
     11e:	04 89       	ldd	r16, Z+20	; 0x14
     120:	15 89       	ldd	r17, Z+21	; 0x15
     122:	20 e0       	ldi	r18, 0x00	; 0
     124:	30 e0       	ldi	r19, 0x00	; 0
     126:	98 01       	movw	r18, r16
     128:	11 27       	eor	r17, r17
     12a:	00 27       	eor	r16, r16
     12c:	60 2b       	or	r22, r16
     12e:	71 2b       	or	r23, r17
     130:	82 2b       	or	r24, r18
     132:	93 2b       	or	r25, r19
     134:	1f 91       	pop	r17
     136:	0f 91       	pop	r16
     138:	08 95       	ret

0000013a <check_fs>:
     13a:	0f 93       	push	r16
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ec 01       	movw	r28, r24
     142:	9a 01       	movw	r18, r20
     144:	ab 01       	movw	r20, r22
     146:	bc 01       	movw	r22, r24
     148:	6a 5c       	subi	r22, 0xCA	; 202
     14a:	7f 4f       	sbci	r23, 0xFF	; 255
     14c:	01 e0       	ldi	r16, 0x01	; 1
     14e:	89 81       	ldd	r24, Y+1	; 0x01
     150:	0e 94 87 11 	call	0x230e	; 0x230e <disk_read>
     154:	81 11       	cpse	r24, r1
     156:	23 c0       	rjmp	.+70     	; 0x19e <check_fs+0x64>
     158:	fe 01       	movw	r30, r28
     15a:	ec 5c       	subi	r30, 0xCC	; 204
     15c:	fd 4f       	sbci	r31, 0xFD	; 253
     15e:	80 81       	ld	r24, Z
     160:	91 81       	ldd	r25, Z+1	; 0x01
     162:	85 35       	cpi	r24, 0x55	; 85
     164:	9a 4a       	sbci	r25, 0xAA	; 170
     166:	e9 f4       	brne	.+58     	; 0x1a2 <check_fs+0x68>
     168:	e8 5c       	subi	r30, 0xC8	; 200
     16a:	f1 40       	sbci	r31, 0x01	; 1
     16c:	80 81       	ld	r24, Z
     16e:	91 81       	ldd	r25, Z+1	; 0x01
     170:	a2 81       	ldd	r26, Z+2	; 0x02
     172:	b3 81       	ldd	r27, Z+3	; 0x03
     174:	bb 27       	eor	r27, r27
     176:	86 34       	cpi	r24, 0x46	; 70
     178:	91 44       	sbci	r25, 0x41	; 65
     17a:	a4 45       	sbci	r26, 0x54	; 84
     17c:	b1 05       	cpc	r27, r1
     17e:	99 f0       	breq	.+38     	; 0x1a6 <check_fs+0x6c>
     180:	c8 57       	subi	r28, 0x78	; 120
     182:	df 4f       	sbci	r29, 0xFF	; 255
     184:	48 81       	ld	r20, Y
     186:	59 81       	ldd	r21, Y+1	; 0x01
     188:	6a 81       	ldd	r22, Y+2	; 0x02
     18a:	7b 81       	ldd	r23, Y+3	; 0x03
     18c:	77 27       	eor	r23, r23
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	46 34       	cpi	r20, 0x46	; 70
     192:	51 44       	sbci	r21, 0x41	; 65
     194:	64 45       	sbci	r22, 0x54	; 84
     196:	71 05       	cpc	r23, r1
     198:	39 f4       	brne	.+14     	; 0x1a8 <check_fs+0x6e>
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	05 c0       	rjmp	.+10     	; 0x1a8 <check_fs+0x6e>
     19e:	83 e0       	ldi	r24, 0x03	; 3
     1a0:	03 c0       	rjmp	.+6      	; 0x1a8 <check_fs+0x6e>
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	01 c0       	rjmp	.+2      	; 0x1a8 <check_fs+0x6e>
     1a6:	80 e0       	ldi	r24, 0x00	; 0
     1a8:	df 91       	pop	r29
     1aa:	cf 91       	pop	r28
     1ac:	0f 91       	pop	r16
     1ae:	08 95       	ret

000001b0 <sync_window>:
     1b0:	8f 92       	push	r8
     1b2:	9f 92       	push	r9
     1b4:	af 92       	push	r10
     1b6:	bf 92       	push	r11
     1b8:	cf 92       	push	r12
     1ba:	df 92       	push	r13
     1bc:	ef 92       	push	r14
     1be:	ff 92       	push	r15
     1c0:	0f 93       	push	r16
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	fc 01       	movw	r30, r24
     1c8:	24 81       	ldd	r18, Z+4	; 0x04
     1ca:	22 23       	and	r18, r18
     1cc:	09 f4       	brne	.+2      	; 0x1d0 <sync_window+0x20>
     1ce:	47 c0       	rjmp	.+142    	; 0x25e <sync_window+0xae>
     1d0:	ec 01       	movw	r28, r24
     1d2:	c2 a8       	ldd	r12, Z+50	; 0x32
     1d4:	d3 a8       	ldd	r13, Z+51	; 0x33
     1d6:	e4 a8       	ldd	r14, Z+52	; 0x34
     1d8:	f5 a8       	ldd	r15, Z+53	; 0x35
     1da:	4c 01       	movw	r8, r24
     1dc:	f6 e3       	ldi	r31, 0x36	; 54
     1de:	8f 0e       	add	r8, r31
     1e0:	91 1c       	adc	r9, r1
     1e2:	01 e0       	ldi	r16, 0x01	; 1
     1e4:	a7 01       	movw	r20, r14
     1e6:	96 01       	movw	r18, r12
     1e8:	b4 01       	movw	r22, r8
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	0e 94 da 11 	call	0x23b4	; 0x23b4 <disk_write>
     1f0:	81 11       	cpse	r24, r1
     1f2:	37 c0       	rjmp	.+110    	; 0x262 <sync_window+0xb2>
     1f4:	1c 82       	std	Y+4, r1	; 0x04
     1f6:	8e a1       	ldd	r24, Y+38	; 0x26
     1f8:	9f a1       	ldd	r25, Y+39	; 0x27
     1fa:	a8 a5       	ldd	r26, Y+40	; 0x28
     1fc:	b9 a5       	ldd	r27, Y+41	; 0x29
     1fe:	c8 16       	cp	r12, r24
     200:	d9 06       	cpc	r13, r25
     202:	ea 06       	cpc	r14, r26
     204:	fb 06       	cpc	r15, r27
     206:	78 f1       	brcs	.+94     	; 0x266 <sync_window+0xb6>
     208:	4e 8d       	ldd	r20, Y+30	; 0x1e
     20a:	5f 8d       	ldd	r21, Y+31	; 0x1f
     20c:	68 a1       	ldd	r22, Y+32	; 0x20
     20e:	79 a1       	ldd	r23, Y+33	; 0x21
     210:	84 0f       	add	r24, r20
     212:	95 1f       	adc	r25, r21
     214:	a6 1f       	adc	r26, r22
     216:	b7 1f       	adc	r27, r23
     218:	c8 16       	cp	r12, r24
     21a:	d9 06       	cpc	r13, r25
     21c:	ea 06       	cpc	r14, r26
     21e:	fb 06       	cpc	r15, r27
     220:	20 f5       	brcc	.+72     	; 0x26a <sync_window+0xba>
     222:	ab 80       	ldd	r10, Y+3	; 0x03
     224:	b1 2c       	mov	r11, r1
     226:	82 e0       	ldi	r24, 0x02	; 2
     228:	a8 16       	cp	r10, r24
     22a:	b1 04       	cpc	r11, r1
     22c:	00 f1       	brcs	.+64     	; 0x26e <sync_window+0xbe>
     22e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     230:	9f 8d       	ldd	r25, Y+31	; 0x1f
     232:	a8 a1       	ldd	r26, Y+32	; 0x20
     234:	b9 a1       	ldd	r27, Y+33	; 0x21
     236:	c8 0e       	add	r12, r24
     238:	d9 1e       	adc	r13, r25
     23a:	ea 1e       	adc	r14, r26
     23c:	fb 1e       	adc	r15, r27
     23e:	01 e0       	ldi	r16, 0x01	; 1
     240:	a7 01       	movw	r20, r14
     242:	96 01       	movw	r18, r12
     244:	b4 01       	movw	r22, r8
     246:	89 81       	ldd	r24, Y+1	; 0x01
     248:	0e 94 da 11 	call	0x23b4	; 0x23b4 <disk_write>
     24c:	e1 e0       	ldi	r30, 0x01	; 1
     24e:	ae 1a       	sub	r10, r30
     250:	b1 08       	sbc	r11, r1
     252:	f1 e0       	ldi	r31, 0x01	; 1
     254:	af 16       	cp	r10, r31
     256:	b1 04       	cpc	r11, r1
     258:	51 f7       	brne	.-44     	; 0x22e <sync_window+0x7e>
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	09 c0       	rjmp	.+18     	; 0x270 <sync_window+0xc0>
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	07 c0       	rjmp	.+14     	; 0x270 <sync_window+0xc0>
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	05 c0       	rjmp	.+10     	; 0x270 <sync_window+0xc0>
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	03 c0       	rjmp	.+6      	; 0x270 <sync_window+0xc0>
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	01 c0       	rjmp	.+2      	; 0x270 <sync_window+0xc0>
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	0f 91       	pop	r16
     276:	ff 90       	pop	r15
     278:	ef 90       	pop	r14
     27a:	df 90       	pop	r13
     27c:	cf 90       	pop	r12
     27e:	bf 90       	pop	r11
     280:	af 90       	pop	r10
     282:	9f 90       	pop	r9
     284:	8f 90       	pop	r8
     286:	08 95       	ret

00000288 <move_window>:
     288:	cf 92       	push	r12
     28a:	df 92       	push	r13
     28c:	ef 92       	push	r14
     28e:	ff 92       	push	r15
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	fc 01       	movw	r30, r24
     29a:	c2 a8       	ldd	r12, Z+50	; 0x32
     29c:	d3 a8       	ldd	r13, Z+51	; 0x33
     29e:	e4 a8       	ldd	r14, Z+52	; 0x34
     2a0:	f5 a8       	ldd	r15, Z+53	; 0x35
     2a2:	c4 16       	cp	r12, r20
     2a4:	d5 06       	cpc	r13, r21
     2a6:	e6 06       	cpc	r14, r22
     2a8:	f7 06       	cpc	r15, r23
     2aa:	c1 f0       	breq	.+48     	; 0x2dc <move_window+0x54>
     2ac:	6a 01       	movw	r12, r20
     2ae:	7b 01       	movw	r14, r22
     2b0:	ec 01       	movw	r28, r24
     2b2:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <sync_window>
     2b6:	18 2f       	mov	r17, r24
     2b8:	81 11       	cpse	r24, r1
     2ba:	12 c0       	rjmp	.+36     	; 0x2e0 <move_window+0x58>
     2bc:	01 e0       	ldi	r16, 0x01	; 1
     2be:	a7 01       	movw	r20, r14
     2c0:	96 01       	movw	r18, r12
     2c2:	be 01       	movw	r22, r28
     2c4:	6a 5c       	subi	r22, 0xCA	; 202
     2c6:	7f 4f       	sbci	r23, 0xFF	; 255
     2c8:	89 81       	ldd	r24, Y+1	; 0x01
     2ca:	0e 94 87 11 	call	0x230e	; 0x230e <disk_read>
     2ce:	81 11       	cpse	r24, r1
     2d0:	09 c0       	rjmp	.+18     	; 0x2e4 <move_window+0x5c>
     2d2:	ca aa       	std	Y+50, r12	; 0x32
     2d4:	db aa       	std	Y+51, r13	; 0x33
     2d6:	ec aa       	std	Y+52, r14	; 0x34
     2d8:	fd aa       	std	Y+53, r15	; 0x35
     2da:	05 c0       	rjmp	.+10     	; 0x2e6 <move_window+0x5e>
     2dc:	10 e0       	ldi	r17, 0x00	; 0
     2de:	03 c0       	rjmp	.+6      	; 0x2e6 <move_window+0x5e>
     2e0:	11 e0       	ldi	r17, 0x01	; 1
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <move_window+0x5e>
     2e4:	11 e0       	ldi	r17, 0x01	; 1
     2e6:	81 2f       	mov	r24, r17
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	1f 91       	pop	r17
     2ee:	0f 91       	pop	r16
     2f0:	ff 90       	pop	r15
     2f2:	ef 90       	pop	r14
     2f4:	df 90       	pop	r13
     2f6:	cf 90       	pop	r12
     2f8:	08 95       	ret

000002fa <validate>:
     2fa:	00 97       	sbiw	r24, 0x00	; 0
     2fc:	c9 f0       	breq	.+50     	; 0x330 <validate+0x36>
     2fe:	dc 01       	movw	r26, r24
     300:	ed 91       	ld	r30, X+
     302:	fc 91       	ld	r31, X
     304:	11 97       	sbiw	r26, 0x01	; 1
     306:	30 97       	sbiw	r30, 0x00	; 0
     308:	a9 f0       	breq	.+42     	; 0x334 <validate+0x3a>
     30a:	20 81       	ld	r18, Z
     30c:	22 23       	and	r18, r18
     30e:	a1 f0       	breq	.+40     	; 0x338 <validate+0x3e>
     310:	26 81       	ldd	r18, Z+6	; 0x06
     312:	37 81       	ldd	r19, Z+7	; 0x07
     314:	12 96       	adiw	r26, 0x02	; 2
     316:	8d 91       	ld	r24, X+
     318:	9c 91       	ld	r25, X
     31a:	13 97       	sbiw	r26, 0x03	; 3
     31c:	28 17       	cp	r18, r24
     31e:	39 07       	cpc	r19, r25
     320:	69 f4       	brne	.+26     	; 0x33c <validate+0x42>
     322:	81 81       	ldd	r24, Z+1	; 0x01
     324:	0e 94 80 11 	call	0x2300	; 0x2300 <disk_status>
     328:	80 fd       	sbrc	r24, 0
     32a:	0a c0       	rjmp	.+20     	; 0x340 <validate+0x46>
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	08 95       	ret
     330:	89 e0       	ldi	r24, 0x09	; 9
     332:	08 95       	ret
     334:	89 e0       	ldi	r24, 0x09	; 9
     336:	08 95       	ret
     338:	89 e0       	ldi	r24, 0x09	; 9
     33a:	08 95       	ret
     33c:	89 e0       	ldi	r24, 0x09	; 9
     33e:	08 95       	ret
     340:	83 e0       	ldi	r24, 0x03	; 3
     342:	08 95       	ret

00000344 <chk_mounted>:
     344:	2f 92       	push	r2
     346:	3f 92       	push	r3
     348:	4f 92       	push	r4
     34a:	5f 92       	push	r5
     34c:	6f 92       	push	r6
     34e:	7f 92       	push	r7
     350:	8f 92       	push	r8
     352:	9f 92       	push	r9
     354:	af 92       	push	r10
     356:	bf 92       	push	r11
     358:	cf 92       	push	r12
     35a:	df 92       	push	r13
     35c:	ef 92       	push	r14
     35e:	ff 92       	push	r15
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	2e 97       	sbiw	r28, 0x0e	; 14
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	de bf       	out	0x3e, r29	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	cd bf       	out	0x3d, r28	; 61
     378:	dc 01       	movw	r26, r24
     37a:	ed 91       	ld	r30, X+
     37c:	fc 91       	ld	r31, X
     37e:	11 97       	sbiw	r26, 0x01	; 1
     380:	20 81       	ld	r18, Z
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	20 53       	subi	r18, 0x30	; 48
     386:	31 09       	sbc	r19, r1
     388:	2a 30       	cpi	r18, 0x0A	; 10
     38a:	31 05       	cpc	r19, r1
     38c:	38 f4       	brcc	.+14     	; 0x39c <chk_mounted+0x58>
     38e:	51 81       	ldd	r21, Z+1	; 0x01
     390:	5a 33       	cpi	r21, 0x3A	; 58
     392:	21 f4       	brne	.+8      	; 0x39c <chk_mounted+0x58>
     394:	32 96       	adiw	r30, 0x02	; 2
     396:	ed 93       	st	X+, r30
     398:	fc 93       	st	X, r31
     39a:	03 c0       	rjmp	.+6      	; 0x3a2 <chk_mounted+0x5e>
     39c:	20 91 7a 00 	lds	r18, 0x007A
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	fb 01       	movw	r30, r22
     3a4:	11 82       	std	Z+1, r1	; 0x01
     3a6:	10 82       	st	Z, r1
     3a8:	23 2b       	or	r18, r19
     3aa:	09 f0       	breq	.+2      	; 0x3ae <chk_mounted+0x6a>
     3ac:	0a c2       	rjmp	.+1044   	; 0x7c2 <__FUSE_REGION_LENGTH__+0x3c2>
     3ae:	20 91 7d 00 	lds	r18, 0x007D
     3b2:	30 91 7e 00 	lds	r19, 0x007E
     3b6:	3e 87       	std	Y+14, r19	; 0x0e
     3b8:	2d 87       	std	Y+13, r18	; 0x0d
     3ba:	21 15       	cp	r18, r1
     3bc:	31 05       	cpc	r19, r1
     3be:	09 f4       	brne	.+2      	; 0x3c2 <chk_mounted+0x7e>
     3c0:	02 c2       	rjmp	.+1028   	; 0x7c6 <__FUSE_REGION_LENGTH__+0x3c6>
     3c2:	14 2f       	mov	r17, r20
     3c4:	31 83       	std	Z+1, r19	; 0x01
     3c6:	20 83       	st	Z, r18
     3c8:	d9 01       	movw	r26, r18
     3ca:	8c 91       	ld	r24, X
     3cc:	88 23       	and	r24, r24
     3ce:	69 f0       	breq	.+26     	; 0x3ea <chk_mounted+0xa6>
     3d0:	11 96       	adiw	r26, 0x01	; 1
     3d2:	8c 91       	ld	r24, X
     3d4:	0e 94 80 11 	call	0x2300	; 0x2300 <disk_status>
     3d8:	80 fd       	sbrc	r24, 0
     3da:	07 c0       	rjmp	.+14     	; 0x3ea <chk_mounted+0xa6>
     3dc:	11 23       	and	r17, r17
     3de:	09 f4       	brne	.+2      	; 0x3e2 <chk_mounted+0x9e>
     3e0:	f4 c1       	rjmp	.+1000   	; 0x7ca <__FUSE_REGION_LENGTH__+0x3ca>
     3e2:	82 ff       	sbrs	r24, 2
     3e4:	f4 c1       	rjmp	.+1000   	; 0x7ce <__FUSE_REGION_LENGTH__+0x3ce>
     3e6:	8a e0       	ldi	r24, 0x0A	; 10
     3e8:	8e c2       	rjmp	.+1308   	; 0x906 <__stack+0xa7>
     3ea:	ed 85       	ldd	r30, Y+13	; 0x0d
     3ec:	fe 85       	ldd	r31, Y+14	; 0x0e
     3ee:	10 82       	st	Z, r1
     3f0:	11 82       	std	Z+1, r1	; 0x01
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	0e 94 ac 10 	call	0x2158	; 0x2158 <disk_initialize>
     3f8:	80 fd       	sbrc	r24, 0
     3fa:	eb c1       	rjmp	.+982    	; 0x7d2 <__FUSE_REGION_LENGTH__+0x3d2>
     3fc:	11 23       	and	r17, r17
     3fe:	11 f0       	breq	.+4      	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
     400:	82 fd       	sbrc	r24, 2
     402:	e9 c1       	rjmp	.+978    	; 0x7d6 <__FUSE_REGION_LENGTH__+0x3d6>
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	ba 01       	movw	r22, r20
     40a:	8d 85       	ldd	r24, Y+13	; 0x0d
     40c:	9e 85       	ldd	r25, Y+14	; 0x0e
     40e:	0e 94 9d 00 	call	0x13a	; 0x13a <check_fs>
     412:	81 30       	cpi	r24, 0x01	; 1
     414:	b9 f4       	brne	.+46     	; 0x444 <__FUSE_REGION_LENGTH__+0x44>
     416:	ed 85       	ldd	r30, Y+13	; 0x0d
     418:	fe 85       	ldd	r31, Y+14	; 0x0e
     41a:	e8 50       	subi	r30, 0x08	; 8
     41c:	fe 4f       	sbci	r31, 0xFE	; 254
     41e:	80 81       	ld	r24, Z
     420:	88 23       	and	r24, r24
     422:	09 f4       	brne	.+2      	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
     424:	da c1       	rjmp	.+948    	; 0x7da <__FUSE_REGION_LENGTH__+0x3da>
     426:	ed 85       	ldd	r30, Y+13	; 0x0d
     428:	fe 85       	ldd	r31, Y+14	; 0x0e
     42a:	e4 50       	subi	r30, 0x04	; 4
     42c:	fe 4f       	sbci	r31, 0xFE	; 254
     42e:	c0 80       	ld	r12, Z
     430:	d1 80       	ldd	r13, Z+1	; 0x01
     432:	e2 80       	ldd	r14, Z+2	; 0x02
     434:	f3 80       	ldd	r15, Z+3	; 0x03
     436:	b7 01       	movw	r22, r14
     438:	a6 01       	movw	r20, r12
     43a:	8d 85       	ldd	r24, Y+13	; 0x0d
     43c:	9e 85       	ldd	r25, Y+14	; 0x0e
     43e:	0e 94 9d 00 	call	0x13a	; 0x13a <check_fs>
     442:	03 c0       	rjmp	.+6      	; 0x44a <__FUSE_REGION_LENGTH__+0x4a>
     444:	c1 2c       	mov	r12, r1
     446:	d1 2c       	mov	r13, r1
     448:	76 01       	movw	r14, r12
     44a:	83 30       	cpi	r24, 0x03	; 3
     44c:	09 f4       	brne	.+2      	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
     44e:	c7 c1       	rjmp	.+910    	; 0x7de <__FUSE_REGION_LENGTH__+0x3de>
     450:	81 11       	cpse	r24, r1
     452:	c7 c1       	rjmp	.+910    	; 0x7e2 <__FUSE_REGION_LENGTH__+0x3e2>
     454:	ed 85       	ldd	r30, Y+13	; 0x0d
     456:	fe 85       	ldd	r31, Y+14	; 0x0e
     458:	ef 5b       	subi	r30, 0xBF	; 191
     45a:	ff 4f       	sbci	r31, 0xFF	; 255
     45c:	80 81       	ld	r24, Z
     45e:	91 81       	ldd	r25, Z+1	; 0x01
     460:	81 15       	cp	r24, r1
     462:	92 40       	sbci	r25, 0x02	; 2
     464:	09 f0       	breq	.+2      	; 0x468 <__FUSE_REGION_LENGTH__+0x68>
     466:	bf c1       	rjmp	.+894    	; 0x7e6 <__FUSE_REGION_LENGTH__+0x3e6>
     468:	ed 85       	ldd	r30, Y+13	; 0x0d
     46a:	fe 85       	ldd	r31, Y+14	; 0x0e
     46c:	e4 5b       	subi	r30, 0xB4	; 180
     46e:	ff 4f       	sbci	r31, 0xFF	; 255
     470:	40 80       	ld	r4, Z
     472:	51 80       	ldd	r5, Z+1	; 0x01
     474:	61 2c       	mov	r6, r1
     476:	71 2c       	mov	r7, r1
     478:	41 14       	cp	r4, r1
     47a:	51 04       	cpc	r5, r1
     47c:	61 04       	cpc	r6, r1
     47e:	71 04       	cpc	r7, r1
     480:	41 f4       	brne	.+16     	; 0x492 <__FUSE_REGION_LENGTH__+0x92>
     482:	ed 85       	ldd	r30, Y+13	; 0x0d
     484:	fe 85       	ldd	r31, Y+14	; 0x0e
     486:	e6 5a       	subi	r30, 0xA6	; 166
     488:	ff 4f       	sbci	r31, 0xFF	; 255
     48a:	40 80       	ld	r4, Z
     48c:	51 80       	ldd	r5, Z+1	; 0x01
     48e:	62 80       	ldd	r6, Z+2	; 0x02
     490:	73 80       	ldd	r7, Z+3	; 0x03
     492:	ad 85       	ldd	r26, Y+13	; 0x0d
     494:	be 85       	ldd	r27, Y+14	; 0x0e
     496:	5e 96       	adiw	r26, 0x1e	; 30
     498:	4d 92       	st	X+, r4
     49a:	5d 92       	st	X+, r5
     49c:	6d 92       	st	X+, r6
     49e:	7c 92       	st	X, r7
     4a0:	91 97       	sbiw	r26, 0x21	; 33
     4a2:	fd 01       	movw	r30, r26
     4a4:	ea 5b       	subi	r30, 0xBA	; 186
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	a0 81       	ld	r26, Z
     4aa:	ed 85       	ldd	r30, Y+13	; 0x0d
     4ac:	fe 85       	ldd	r31, Y+14	; 0x0e
     4ae:	a3 83       	std	Z+3, r26	; 0x03
     4b0:	8f ef       	ldi	r24, 0xFF	; 255
     4b2:	8a 0f       	add	r24, r26
     4b4:	82 30       	cpi	r24, 0x02	; 2
     4b6:	08 f0       	brcs	.+2      	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
     4b8:	98 c1       	rjmp	.+816    	; 0x7ea <__FUSE_REGION_LENGTH__+0x3ea>
     4ba:	ed 5b       	subi	r30, 0xBD	; 189
     4bc:	ff 4f       	sbci	r31, 0xFF	; 255
     4be:	10 81       	ld	r17, Z
     4c0:	ed 85       	ldd	r30, Y+13	; 0x0d
     4c2:	fe 85       	ldd	r31, Y+14	; 0x0e
     4c4:	12 83       	std	Z+2, r17	; 0x02
     4c6:	11 23       	and	r17, r17
     4c8:	09 f4       	brne	.+2      	; 0x4cc <__FUSE_REGION_LENGTH__+0xcc>
     4ca:	91 c1       	rjmp	.+802    	; 0x7ee <__FUSE_REGION_LENGTH__+0x3ee>
     4cc:	81 2f       	mov	r24, r17
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9c 01       	movw	r18, r24
     4d2:	21 50       	subi	r18, 0x01	; 1
     4d4:	31 09       	sbc	r19, r1
     4d6:	82 23       	and	r24, r18
     4d8:	93 23       	and	r25, r19
     4da:	89 2b       	or	r24, r25
     4dc:	09 f0       	breq	.+2      	; 0x4e0 <__FUSE_REGION_LENGTH__+0xe0>
     4de:	89 c1       	rjmp	.+786    	; 0x7f2 <__FUSE_REGION_LENGTH__+0x3f2>
     4e0:	e9 5b       	subi	r30, 0xB9	; 185
     4e2:	ff 4f       	sbci	r31, 0xFF	; 255
     4e4:	20 80       	ld	r2, Z
     4e6:	31 80       	ldd	r3, Z+1	; 0x01
     4e8:	ed 85       	ldd	r30, Y+13	; 0x0d
     4ea:	fe 85       	ldd	r31, Y+14	; 0x0e
     4ec:	31 86       	std	Z+9, r3	; 0x09
     4ee:	20 86       	std	Z+8, r2	; 0x08
     4f0:	c1 01       	movw	r24, r2
     4f2:	8f 70       	andi	r24, 0x0F	; 15
     4f4:	99 27       	eor	r25, r25
     4f6:	89 2b       	or	r24, r25
     4f8:	09 f0       	breq	.+2      	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
     4fa:	7d c1       	rjmp	.+762    	; 0x7f6 <__FUSE_REGION_LENGTH__+0x3f6>
     4fc:	e7 5b       	subi	r30, 0xB7	; 183
     4fe:	ff 4f       	sbci	r31, 0xFF	; 255
     500:	80 80       	ld	r8, Z
     502:	91 80       	ldd	r9, Z+1	; 0x01
     504:	a1 2c       	mov	r10, r1
     506:	b1 2c       	mov	r11, r1
     508:	81 14       	cp	r8, r1
     50a:	91 04       	cpc	r9, r1
     50c:	a1 04       	cpc	r10, r1
     50e:	b1 04       	cpc	r11, r1
     510:	41 f4       	brne	.+16     	; 0x522 <__FUSE_REGION_LENGTH__+0x122>
     512:	ed 85       	ldd	r30, Y+13	; 0x0d
     514:	fe 85       	ldd	r31, Y+14	; 0x0e
     516:	ea 5a       	subi	r30, 0xAA	; 170
     518:	ff 4f       	sbci	r31, 0xFF	; 255
     51a:	80 80       	ld	r8, Z
     51c:	91 80       	ldd	r9, Z+1	; 0x01
     51e:	a2 80       	ldd	r10, Z+2	; 0x02
     520:	b3 80       	ldd	r11, Z+3	; 0x03
     522:	ed 85       	ldd	r30, Y+13	; 0x0d
     524:	fe 85       	ldd	r31, Y+14	; 0x0e
     526:	ec 5b       	subi	r30, 0xBC	; 188
     528:	ff 4f       	sbci	r31, 0xFF	; 255
     52a:	20 81       	ld	r18, Z
     52c:	31 81       	ldd	r19, Z+1	; 0x01
     52e:	3a 83       	std	Y+2, r19	; 0x02
     530:	29 83       	std	Y+1, r18	; 0x01
     532:	23 2b       	or	r18, r19
     534:	09 f4       	brne	.+2      	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
     536:	61 c1       	rjmp	.+706    	; 0x7fa <__FUSE_REGION_LENGTH__+0x3fa>
     538:	b0 e0       	ldi	r27, 0x00	; 0
     53a:	a3 01       	movw	r20, r6
     53c:	92 01       	movw	r18, r4
     53e:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <__muluhisi3>
     542:	69 87       	std	Y+9, r22	; 0x09
     544:	7a 87       	std	Y+10, r23	; 0x0a
     546:	8b 87       	std	Y+11, r24	; 0x0b
     548:	9c 87       	std	Y+12, r25	; 0x0c
     54a:	a9 81       	ldd	r26, Y+1	; 0x01
     54c:	ba 81       	ldd	r27, Y+2	; 0x02
     54e:	cd 01       	movw	r24, r26
     550:	a0 e0       	ldi	r26, 0x00	; 0
     552:	b0 e0       	ldi	r27, 0x00	; 0
     554:	8d 83       	std	Y+5, r24	; 0x05
     556:	9e 83       	std	Y+6, r25	; 0x06
     558:	af 83       	std	Y+7, r26	; 0x07
     55a:	b8 87       	std	Y+8, r27	; 0x08
     55c:	c1 01       	movw	r24, r2
     55e:	92 95       	swap	r25
     560:	82 95       	swap	r24
     562:	8f 70       	andi	r24, 0x0F	; 15
     564:	89 27       	eor	r24, r25
     566:	9f 70       	andi	r25, 0x0F	; 15
     568:	89 27       	eor	r24, r25
     56a:	4d 81       	ldd	r20, Y+5	; 0x05
     56c:	5e 81       	ldd	r21, Y+6	; 0x06
     56e:	6f 81       	ldd	r22, Y+7	; 0x07
     570:	78 85       	ldd	r23, Y+8	; 0x08
     572:	48 0f       	add	r20, r24
     574:	59 1f       	adc	r21, r25
     576:	61 1d       	adc	r22, r1
     578:	71 1d       	adc	r23, r1
     57a:	89 85       	ldd	r24, Y+9	; 0x09
     57c:	9a 85       	ldd	r25, Y+10	; 0x0a
     57e:	ab 85       	ldd	r26, Y+11	; 0x0b
     580:	bc 85       	ldd	r27, Y+12	; 0x0c
     582:	84 0f       	add	r24, r20
     584:	95 1f       	adc	r25, r21
     586:	a6 1f       	adc	r26, r22
     588:	b7 1f       	adc	r27, r23
     58a:	89 83       	std	Y+1, r24	; 0x01
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	ab 83       	std	Y+3, r26	; 0x03
     590:	bc 83       	std	Y+4, r27	; 0x04
     592:	88 16       	cp	r8, r24
     594:	99 06       	cpc	r9, r25
     596:	aa 06       	cpc	r10, r26
     598:	bb 06       	cpc	r11, r27
     59a:	08 f4       	brcc	.+2      	; 0x59e <__FUSE_REGION_LENGTH__+0x19e>
     59c:	30 c1       	rjmp	.+608    	; 0x7fe <__FUSE_REGION_LENGTH__+0x3fe>
     59e:	c5 01       	movw	r24, r10
     5a0:	b4 01       	movw	r22, r8
     5a2:	29 81       	ldd	r18, Y+1	; 0x01
     5a4:	3a 81       	ldd	r19, Y+2	; 0x02
     5a6:	4b 81       	ldd	r20, Y+3	; 0x03
     5a8:	5c 81       	ldd	r21, Y+4	; 0x04
     5aa:	62 1b       	sub	r22, r18
     5ac:	73 0b       	sbc	r23, r19
     5ae:	84 0b       	sbc	r24, r20
     5b0:	95 0b       	sbc	r25, r21
     5b2:	21 2f       	mov	r18, r17
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	40 e0       	ldi	r20, 0x00	; 0
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	0e 94 22 15 	call	0x2a44	; 0x2a44 <__udivmodsi4>
     5be:	da 01       	movw	r26, r20
     5c0:	c9 01       	movw	r24, r18
     5c2:	21 15       	cp	r18, r1
     5c4:	31 05       	cpc	r19, r1
     5c6:	41 05       	cpc	r20, r1
     5c8:	51 05       	cpc	r21, r1
     5ca:	09 f4       	brne	.+2      	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
     5cc:	1a c1       	rjmp	.+564    	; 0x802 <__FUSE_REGION_LENGTH__+0x402>
     5ce:	26 3f       	cpi	r18, 0xF6	; 246
     5d0:	6f e0       	ldi	r22, 0x0F	; 15
     5d2:	36 07       	cpc	r19, r22
     5d4:	41 05       	cpc	r20, r1
     5d6:	51 05       	cpc	r21, r1
     5d8:	10 f0       	brcs	.+4      	; 0x5de <__FUSE_REGION_LENGTH__+0x1de>
     5da:	12 e0       	ldi	r17, 0x02	; 2
     5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
     5de:	11 e0       	ldi	r17, 0x01	; 1
     5e0:	86 3f       	cpi	r24, 0xF6	; 246
     5e2:	9f 4f       	sbci	r25, 0xFF	; 255
     5e4:	a1 05       	cpc	r26, r1
     5e6:	b1 05       	cpc	r27, r1
     5e8:	08 f0       	brcs	.+2      	; 0x5ec <__FUSE_REGION_LENGTH__+0x1ec>
     5ea:	15 c1       	rjmp	.+554    	; 0x816 <__FUSE_REGION_LENGTH__+0x416>
     5ec:	49 01       	movw	r8, r18
     5ee:	5a 01       	movw	r10, r20
     5f0:	f2 e0       	ldi	r31, 0x02	; 2
     5f2:	8f 0e       	add	r8, r31
     5f4:	91 1c       	adc	r9, r1
     5f6:	a1 1c       	adc	r10, r1
     5f8:	b1 1c       	adc	r11, r1
     5fa:	ad 85       	ldd	r26, Y+13	; 0x0d
     5fc:	be 85       	ldd	r27, Y+14	; 0x0e
     5fe:	5a 96       	adiw	r26, 0x1a	; 26
     600:	8d 92       	st	X+, r8
     602:	9d 92       	st	X+, r9
     604:	ad 92       	st	X+, r10
     606:	bc 92       	st	X, r11
     608:	5d 97       	sbiw	r26, 0x1d	; 29
     60a:	fd 01       	movw	r30, r26
     60c:	c2 a2       	std	Z+34, r12	; 0x22
     60e:	d3 a2       	std	Z+35, r13	; 0x23
     610:	e4 a2       	std	Z+36, r14	; 0x24
     612:	f5 a2       	std	Z+37, r15	; 0x25
     614:	8d 81       	ldd	r24, Y+5	; 0x05
     616:	9e 81       	ldd	r25, Y+6	; 0x06
     618:	af 81       	ldd	r26, Y+7	; 0x07
     61a:	b8 85       	ldd	r27, Y+8	; 0x08
     61c:	8c 0d       	add	r24, r12
     61e:	9d 1d       	adc	r25, r13
     620:	ae 1d       	adc	r26, r14
     622:	bf 1d       	adc	r27, r15
     624:	86 a3       	std	Z+38, r24	; 0x26
     626:	97 a3       	std	Z+39, r25	; 0x27
     628:	a0 a7       	std	Z+40, r26	; 0x28
     62a:	b1 a7       	std	Z+41, r27	; 0x29
     62c:	49 81       	ldd	r20, Y+1	; 0x01
     62e:	5a 81       	ldd	r21, Y+2	; 0x02
     630:	6b 81       	ldd	r22, Y+3	; 0x03
     632:	7c 81       	ldd	r23, Y+4	; 0x04
     634:	4c 0d       	add	r20, r12
     636:	5d 1d       	adc	r21, r13
     638:	6e 1d       	adc	r22, r14
     63a:	7f 1d       	adc	r23, r15
     63c:	46 a7       	std	Z+46, r20	; 0x2e
     63e:	57 a7       	std	Z+47, r21	; 0x2f
     640:	60 ab       	std	Z+48, r22	; 0x30
     642:	71 ab       	std	Z+49, r23	; 0x31
     644:	13 30       	cpi	r17, 0x03	; 3
     646:	79 f5       	brne	.+94     	; 0x6a6 <__FUSE_REGION_LENGTH__+0x2a6>
     648:	23 28       	or	r2, r3
     64a:	09 f0       	breq	.+2      	; 0x64e <__FUSE_REGION_LENGTH__+0x24e>
     64c:	dc c0       	rjmp	.+440    	; 0x806 <__FUSE_REGION_LENGTH__+0x406>
     64e:	ed 85       	ldd	r30, Y+13	; 0x0d
     650:	fe 85       	ldd	r31, Y+14	; 0x0e
     652:	ee 59       	subi	r30, 0x9E	; 158
     654:	ff 4f       	sbci	r31, 0xFF	; 255
     656:	80 81       	ld	r24, Z
     658:	91 81       	ldd	r25, Z+1	; 0x01
     65a:	a2 81       	ldd	r26, Z+2	; 0x02
     65c:	b3 81       	ldd	r27, Z+3	; 0x03
     65e:	ed 85       	ldd	r30, Y+13	; 0x0d
     660:	fe 85       	ldd	r31, Y+14	; 0x0e
     662:	82 a7       	std	Z+42, r24	; 0x2a
     664:	93 a7       	std	Z+43, r25	; 0x2b
     666:	a4 a7       	std	Z+44, r26	; 0x2c
     668:	b5 a7       	std	Z+45, r27	; 0x2d
     66a:	88 0c       	add	r8, r8
     66c:	99 1c       	adc	r9, r9
     66e:	aa 1c       	adc	r10, r10
     670:	bb 1c       	adc	r11, r11
     672:	88 0c       	add	r8, r8
     674:	99 1c       	adc	r9, r9
     676:	aa 1c       	adc	r10, r10
     678:	bb 1c       	adc	r11, r11
     67a:	ff ef       	ldi	r31, 0xFF	; 255
     67c:	8f 0e       	add	r8, r31
     67e:	f1 e0       	ldi	r31, 0x01	; 1
     680:	9f 1e       	adc	r9, r31
     682:	a1 1c       	adc	r10, r1
     684:	b1 1c       	adc	r11, r1
     686:	07 2e       	mov	r0, r23
     688:	79 e0       	ldi	r23, 0x09	; 9
     68a:	b6 94       	lsr	r11
     68c:	a7 94       	ror	r10
     68e:	97 94       	ror	r9
     690:	87 94       	ror	r8
     692:	7a 95       	dec	r23
     694:	d1 f7       	brne	.-12     	; 0x68a <__FUSE_REGION_LENGTH__+0x28a>
     696:	70 2d       	mov	r23, r0
     698:	48 14       	cp	r4, r8
     69a:	59 04       	cpc	r5, r9
     69c:	6a 04       	cpc	r6, r10
     69e:	7b 04       	cpc	r7, r11
     6a0:	08 f4       	brcc	.+2      	; 0x6a4 <__FUSE_REGION_LENGTH__+0x2a4>
     6a2:	b3 c0       	rjmp	.+358    	; 0x80a <__FUSE_REGION_LENGTH__+0x40a>
     6a4:	06 c1       	rjmp	.+524    	; 0x8b2 <__stack+0x53>
     6a6:	23 28       	or	r2, r3
     6a8:	09 f4       	brne	.+2      	; 0x6ac <__FUSE_REGION_LENGTH__+0x2ac>
     6aa:	b1 c0       	rjmp	.+354    	; 0x80e <__FUSE_REGION_LENGTH__+0x40e>
     6ac:	29 85       	ldd	r18, Y+9	; 0x09
     6ae:	3a 85       	ldd	r19, Y+10	; 0x0a
     6b0:	4b 85       	ldd	r20, Y+11	; 0x0b
     6b2:	5c 85       	ldd	r21, Y+12	; 0x0c
     6b4:	82 0f       	add	r24, r18
     6b6:	93 1f       	adc	r25, r19
     6b8:	a4 1f       	adc	r26, r20
     6ba:	b5 1f       	adc	r27, r21
     6bc:	ed 85       	ldd	r30, Y+13	; 0x0d
     6be:	fe 85       	ldd	r31, Y+14	; 0x0e
     6c0:	82 a7       	std	Z+42, r24	; 0x2a
     6c2:	93 a7       	std	Z+43, r25	; 0x2b
     6c4:	a4 a7       	std	Z+44, r26	; 0x2c
     6c6:	b5 a7       	std	Z+45, r27	; 0x2d
     6c8:	12 30       	cpi	r17, 0x02	; 2
     6ca:	29 f4       	brne	.+10     	; 0x6d6 <__FUSE_REGION_LENGTH__+0x2d6>
     6cc:	88 0c       	add	r8, r8
     6ce:	99 1c       	adc	r9, r9
     6d0:	aa 1c       	adc	r10, r10
     6d2:	bb 1c       	adc	r11, r11
     6d4:	d8 c0       	rjmp	.+432    	; 0x886 <__stack+0x27>
     6d6:	a3 e0       	ldi	r26, 0x03	; 3
     6d8:	b0 e0       	ldi	r27, 0x00	; 0
     6da:	a5 01       	movw	r20, r10
     6dc:	94 01       	movw	r18, r8
     6de:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <__muluhisi3>
     6e2:	dc 01       	movw	r26, r24
     6e4:	cb 01       	movw	r24, r22
     6e6:	b6 95       	lsr	r27
     6e8:	a7 95       	ror	r26
     6ea:	97 95       	ror	r25
     6ec:	87 95       	ror	r24
     6ee:	f1 e0       	ldi	r31, 0x01	; 1
     6f0:	8f 22       	and	r8, r31
     6f2:	99 24       	eor	r9, r9
     6f4:	aa 24       	eor	r10, r10
     6f6:	bb 24       	eor	r11, r11
     6f8:	88 0e       	add	r8, r24
     6fa:	99 1e       	adc	r9, r25
     6fc:	aa 1e       	adc	r10, r26
     6fe:	bb 1e       	adc	r11, r27
     700:	c2 c0       	rjmp	.+388    	; 0x886 <__stack+0x27>
     702:	ed 85       	ldd	r30, Y+13	; 0x0d
     704:	fe 85       	ldd	r31, Y+14	; 0x0e
     706:	ec 5c       	subi	r30, 0xCC	; 204
     708:	fd 4f       	sbci	r31, 0xFD	; 253
     70a:	80 81       	ld	r24, Z
     70c:	91 81       	ldd	r25, Z+1	; 0x01
     70e:	85 35       	cpi	r24, 0x55	; 85
     710:	9a 4a       	sbci	r25, 0xAA	; 170
     712:	a1 f5       	brne	.+104    	; 0x77c <__FUSE_REGION_LENGTH__+0x37c>
     714:	ed 85       	ldd	r30, Y+13	; 0x0d
     716:	fe 85       	ldd	r31, Y+14	; 0x0e
     718:	86 a9       	ldd	r24, Z+54	; 0x36
     71a:	97 a9       	ldd	r25, Z+55	; 0x37
     71c:	a0 ad       	ldd	r26, Z+56	; 0x38
     71e:	b1 ad       	ldd	r27, Z+57	; 0x39
     720:	82 35       	cpi	r24, 0x52	; 82
     722:	92 45       	sbci	r25, 0x52	; 82
     724:	a1 46       	sbci	r26, 0x61	; 97
     726:	b1 44       	sbci	r27, 0x41	; 65
     728:	59 f5       	brne	.+86     	; 0x780 <__FUSE_REGION_LENGTH__+0x380>
     72a:	ed 85       	ldd	r30, Y+13	; 0x0d
     72c:	fe 85       	ldd	r31, Y+14	; 0x0e
     72e:	e6 5e       	subi	r30, 0xE6	; 230
     730:	fd 4f       	sbci	r31, 0xFD	; 253
     732:	80 81       	ld	r24, Z
     734:	91 81       	ldd	r25, Z+1	; 0x01
     736:	a2 81       	ldd	r26, Z+2	; 0x02
     738:	b3 81       	ldd	r27, Z+3	; 0x03
     73a:	82 37       	cpi	r24, 0x72	; 114
     73c:	92 47       	sbci	r25, 0x72	; 114
     73e:	a1 44       	sbci	r26, 0x41	; 65
     740:	b1 46       	sbci	r27, 0x61	; 97
     742:	01 f5       	brne	.+64     	; 0x784 <__FUSE_REGION_LENGTH__+0x384>
     744:	ed 85       	ldd	r30, Y+13	; 0x0d
     746:	fe 85       	ldd	r31, Y+14	; 0x0e
     748:	ee 5d       	subi	r30, 0xDE	; 222
     74a:	fd 4f       	sbci	r31, 0xFD	; 253
     74c:	80 81       	ld	r24, Z
     74e:	91 81       	ldd	r25, Z+1	; 0x01
     750:	a2 81       	ldd	r26, Z+2	; 0x02
     752:	b3 81       	ldd	r27, Z+3	; 0x03
     754:	ed 85       	ldd	r30, Y+13	; 0x0d
     756:	fe 85       	ldd	r31, Y+14	; 0x0e
     758:	82 87       	std	Z+10, r24	; 0x0a
     75a:	93 87       	std	Z+11, r25	; 0x0b
     75c:	a4 87       	std	Z+12, r26	; 0x0c
     75e:	b5 87       	std	Z+13, r27	; 0x0d
     760:	e2 5e       	subi	r30, 0xE2	; 226
     762:	fd 4f       	sbci	r31, 0xFD	; 253
     764:	80 81       	ld	r24, Z
     766:	91 81       	ldd	r25, Z+1	; 0x01
     768:	a2 81       	ldd	r26, Z+2	; 0x02
     76a:	b3 81       	ldd	r27, Z+3	; 0x03
     76c:	ed 85       	ldd	r30, Y+13	; 0x0d
     76e:	fe 85       	ldd	r31, Y+14	; 0x0e
     770:	86 87       	std	Z+14, r24	; 0x0e
     772:	97 87       	std	Z+15, r25	; 0x0f
     774:	a0 8b       	std	Z+16, r26	; 0x10
     776:	b1 8b       	std	Z+17, r27	; 0x11
     778:	13 e0       	ldi	r17, 0x03	; 3
     77a:	05 c0       	rjmp	.+10     	; 0x786 <__FUSE_REGION_LENGTH__+0x386>
     77c:	13 e0       	ldi	r17, 0x03	; 3
     77e:	03 c0       	rjmp	.+6      	; 0x786 <__FUSE_REGION_LENGTH__+0x386>
     780:	13 e0       	ldi	r17, 0x03	; 3
     782:	01 c0       	rjmp	.+2      	; 0x786 <__FUSE_REGION_LENGTH__+0x386>
     784:	13 e0       	ldi	r17, 0x03	; 3
     786:	ad 85       	ldd	r26, Y+13	; 0x0d
     788:	be 85       	ldd	r27, Y+14	; 0x0e
     78a:	1c 93       	st	X, r17
     78c:	80 91 7b 00 	lds	r24, 0x007B
     790:	90 91 7c 00 	lds	r25, 0x007C
     794:	01 96       	adiw	r24, 0x01	; 1
     796:	90 93 7c 00 	sts	0x007C, r25
     79a:	80 93 7b 00 	sts	0x007B, r24
     79e:	17 96       	adiw	r26, 0x07	; 7
     7a0:	9c 93       	st	X, r25
     7a2:	8e 93       	st	-X, r24
     7a4:	16 97       	sbiw	r26, 0x06	; 6
     7a6:	fd 01       	movw	r30, r26
     7a8:	12 aa       	std	Z+50, r1	; 0x32
     7aa:	13 aa       	std	Z+51, r1	; 0x33
     7ac:	14 aa       	std	Z+52, r1	; 0x34
     7ae:	15 aa       	std	Z+53, r1	; 0x35
     7b0:	14 82       	std	Z+4, r1	; 0x04
     7b2:	56 96       	adiw	r26, 0x16	; 22
     7b4:	1d 92       	st	X+, r1
     7b6:	1d 92       	st	X+, r1
     7b8:	1d 92       	st	X+, r1
     7ba:	1c 92       	st	X, r1
     7bc:	59 97       	sbiw	r26, 0x19	; 25
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	a2 c0       	rjmp	.+324    	; 0x906 <__stack+0xa7>
     7c2:	8b e0       	ldi	r24, 0x0B	; 11
     7c4:	a0 c0       	rjmp	.+320    	; 0x906 <__stack+0xa7>
     7c6:	8c e0       	ldi	r24, 0x0C	; 12
     7c8:	9e c0       	rjmp	.+316    	; 0x906 <__stack+0xa7>
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	9c c0       	rjmp	.+312    	; 0x906 <__stack+0xa7>
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	9a c0       	rjmp	.+308    	; 0x906 <__stack+0xa7>
     7d2:	83 e0       	ldi	r24, 0x03	; 3
     7d4:	98 c0       	rjmp	.+304    	; 0x906 <__stack+0xa7>
     7d6:	8a e0       	ldi	r24, 0x0A	; 10
     7d8:	96 c0       	rjmp	.+300    	; 0x906 <__stack+0xa7>
     7da:	8d e0       	ldi	r24, 0x0D	; 13
     7dc:	94 c0       	rjmp	.+296    	; 0x906 <__stack+0xa7>
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	92 c0       	rjmp	.+292    	; 0x906 <__stack+0xa7>
     7e2:	8d e0       	ldi	r24, 0x0D	; 13
     7e4:	90 c0       	rjmp	.+288    	; 0x906 <__stack+0xa7>
     7e6:	8d e0       	ldi	r24, 0x0D	; 13
     7e8:	8e c0       	rjmp	.+284    	; 0x906 <__stack+0xa7>
     7ea:	8d e0       	ldi	r24, 0x0D	; 13
     7ec:	8c c0       	rjmp	.+280    	; 0x906 <__stack+0xa7>
     7ee:	8d e0       	ldi	r24, 0x0D	; 13
     7f0:	8a c0       	rjmp	.+276    	; 0x906 <__stack+0xa7>
     7f2:	8d e0       	ldi	r24, 0x0D	; 13
     7f4:	88 c0       	rjmp	.+272    	; 0x906 <__stack+0xa7>
     7f6:	8d e0       	ldi	r24, 0x0D	; 13
     7f8:	86 c0       	rjmp	.+268    	; 0x906 <__stack+0xa7>
     7fa:	8d e0       	ldi	r24, 0x0D	; 13
     7fc:	84 c0       	rjmp	.+264    	; 0x906 <__stack+0xa7>
     7fe:	8d e0       	ldi	r24, 0x0D	; 13
     800:	82 c0       	rjmp	.+260    	; 0x906 <__stack+0xa7>
     802:	8d e0       	ldi	r24, 0x0D	; 13
     804:	80 c0       	rjmp	.+256    	; 0x906 <__stack+0xa7>
     806:	8d e0       	ldi	r24, 0x0D	; 13
     808:	7e c0       	rjmp	.+252    	; 0x906 <__stack+0xa7>
     80a:	8d e0       	ldi	r24, 0x0D	; 13
     80c:	7c c0       	rjmp	.+248    	; 0x906 <__stack+0xa7>
     80e:	8d e0       	ldi	r24, 0x0D	; 13
     810:	7a c0       	rjmp	.+244    	; 0x906 <__stack+0xa7>
     812:	8d e0       	ldi	r24, 0x0D	; 13
     814:	78 c0       	rjmp	.+240    	; 0x906 <__stack+0xa7>
     816:	49 01       	movw	r8, r18
     818:	5a 01       	movw	r10, r20
     81a:	b2 e0       	ldi	r27, 0x02	; 2
     81c:	8b 0e       	add	r8, r27
     81e:	91 1c       	adc	r9, r1
     820:	a1 1c       	adc	r10, r1
     822:	b1 1c       	adc	r11, r1
     824:	ed 85       	ldd	r30, Y+13	; 0x0d
     826:	fe 85       	ldd	r31, Y+14	; 0x0e
     828:	82 8e       	std	Z+26, r8	; 0x1a
     82a:	93 8e       	std	Z+27, r9	; 0x1b
     82c:	a4 8e       	std	Z+28, r10	; 0x1c
     82e:	b5 8e       	std	Z+29, r11	; 0x1d
     830:	c2 a2       	std	Z+34, r12	; 0x22
     832:	d3 a2       	std	Z+35, r13	; 0x23
     834:	e4 a2       	std	Z+36, r14	; 0x24
     836:	f5 a2       	std	Z+37, r15	; 0x25
     838:	8d 81       	ldd	r24, Y+5	; 0x05
     83a:	9e 81       	ldd	r25, Y+6	; 0x06
     83c:	af 81       	ldd	r26, Y+7	; 0x07
     83e:	b8 85       	ldd	r27, Y+8	; 0x08
     840:	8c 0d       	add	r24, r12
     842:	9d 1d       	adc	r25, r13
     844:	ae 1d       	adc	r26, r14
     846:	bf 1d       	adc	r27, r15
     848:	86 a3       	std	Z+38, r24	; 0x26
     84a:	97 a3       	std	Z+39, r25	; 0x27
     84c:	a0 a7       	std	Z+40, r26	; 0x28
     84e:	b1 a7       	std	Z+41, r27	; 0x29
     850:	49 81       	ldd	r20, Y+1	; 0x01
     852:	5a 81       	ldd	r21, Y+2	; 0x02
     854:	6b 81       	ldd	r22, Y+3	; 0x03
     856:	7c 81       	ldd	r23, Y+4	; 0x04
     858:	4c 0d       	add	r20, r12
     85a:	5d 1d       	adc	r21, r13
     85c:	6e 1d       	adc	r22, r14
     85e:	7f 1d       	adc	r23, r15
     860:	46 a7       	std	Z+46, r20	; 0x2e
     862:	57 a7       	std	Z+47, r21	; 0x2f
     864:	60 ab       	std	Z+48, r22	; 0x30
     866:	71 ab       	std	Z+49, r23	; 0x31
     868:	ef ce       	rjmp	.-546    	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	9f ef       	ldi	r25, 0xFF	; 255
     86e:	dc 01       	movw	r26, r24
     870:	ed 85       	ldd	r30, Y+13	; 0x0d
     872:	fe 85       	ldd	r31, Y+14	; 0x0e
     874:	86 87       	std	Z+14, r24	; 0x0e
     876:	97 87       	std	Z+15, r25	; 0x0f
     878:	a0 8b       	std	Z+16, r26	; 0x10
     87a:	b1 8b       	std	Z+17, r27	; 0x11
     87c:	12 86       	std	Z+10, r1	; 0x0a
     87e:	13 86       	std	Z+11, r1	; 0x0b
     880:	14 86       	std	Z+12, r1	; 0x0c
     882:	15 86       	std	Z+13, r1	; 0x0d
     884:	80 cf       	rjmp	.-256    	; 0x786 <__FUSE_REGION_LENGTH__+0x386>
     886:	bf ef       	ldi	r27, 0xFF	; 255
     888:	8b 0e       	add	r8, r27
     88a:	b1 e0       	ldi	r27, 0x01	; 1
     88c:	9b 1e       	adc	r9, r27
     88e:	a1 1c       	adc	r10, r1
     890:	b1 1c       	adc	r11, r1
     892:	07 2e       	mov	r0, r23
     894:	79 e0       	ldi	r23, 0x09	; 9
     896:	b6 94       	lsr	r11
     898:	a7 94       	ror	r10
     89a:	97 94       	ror	r9
     89c:	87 94       	ror	r8
     89e:	7a 95       	dec	r23
     8a0:	d1 f7       	brne	.-12     	; 0x896 <__stack+0x37>
     8a2:	70 2d       	mov	r23, r0
     8a4:	48 14       	cp	r4, r8
     8a6:	59 04       	cpc	r5, r9
     8a8:	6a 04       	cpc	r6, r10
     8aa:	7b 04       	cpc	r7, r11
     8ac:	08 f4       	brcc	.+2      	; 0x8b0 <__stack+0x51>
     8ae:	b1 cf       	rjmp	.-158    	; 0x812 <__FUSE_REGION_LENGTH__+0x412>
     8b0:	dc cf       	rjmp	.-72     	; 0x86a <__stack+0xb>
     8b2:	8f ef       	ldi	r24, 0xFF	; 255
     8b4:	9f ef       	ldi	r25, 0xFF	; 255
     8b6:	dc 01       	movw	r26, r24
     8b8:	ed 85       	ldd	r30, Y+13	; 0x0d
     8ba:	fe 85       	ldd	r31, Y+14	; 0x0e
     8bc:	86 87       	std	Z+14, r24	; 0x0e
     8be:	97 87       	std	Z+15, r25	; 0x0f
     8c0:	a0 8b       	std	Z+16, r26	; 0x10
     8c2:	b1 8b       	std	Z+17, r27	; 0x11
     8c4:	df 01       	movw	r26, r30
     8c6:	12 86       	std	Z+10, r1	; 0x0a
     8c8:	13 86       	std	Z+11, r1	; 0x0b
     8ca:	14 86       	std	Z+12, r1	; 0x0c
     8cc:	15 86       	std	Z+13, r1	; 0x0d
     8ce:	15 82       	std	Z+5, r1	; 0x05
     8d0:	ea 59       	subi	r30, 0x9A	; 154
     8d2:	ff 4f       	sbci	r31, 0xFF	; 255
     8d4:	80 81       	ld	r24, Z
     8d6:	91 81       	ldd	r25, Z+1	; 0x01
     8d8:	a7 01       	movw	r20, r14
     8da:	96 01       	movw	r18, r12
     8dc:	28 0f       	add	r18, r24
     8de:	39 1f       	adc	r19, r25
     8e0:	41 1d       	adc	r20, r1
     8e2:	51 1d       	adc	r21, r1
     8e4:	fd 01       	movw	r30, r26
     8e6:	22 8b       	std	Z+18, r18	; 0x12
     8e8:	33 8b       	std	Z+19, r19	; 0x13
     8ea:	44 8b       	std	Z+20, r20	; 0x14
     8ec:	55 8b       	std	Z+21, r21	; 0x15
     8ee:	01 e0       	ldi	r16, 0x01	; 1
     8f0:	bd 01       	movw	r22, r26
     8f2:	6a 5c       	subi	r22, 0xCA	; 202
     8f4:	7f 4f       	sbci	r23, 0xFF	; 255
     8f6:	81 81       	ldd	r24, Z+1	; 0x01
     8f8:	0e 94 87 11 	call	0x230e	; 0x230e <disk_read>
     8fc:	88 23       	and	r24, r24
     8fe:	09 f4       	brne	.+2      	; 0x902 <__stack+0xa3>
     900:	00 cf       	rjmp	.-512    	; 0x702 <__FUSE_REGION_LENGTH__+0x302>
     902:	13 e0       	ldi	r17, 0x03	; 3
     904:	40 cf       	rjmp	.-384    	; 0x786 <__FUSE_REGION_LENGTH__+0x386>
     906:	2e 96       	adiw	r28, 0x0e	; 14
     908:	0f b6       	in	r0, 0x3f	; 63
     90a:	f8 94       	cli
     90c:	de bf       	out	0x3e, r29	; 62
     90e:	0f be       	out	0x3f, r0	; 63
     910:	cd bf       	out	0x3d, r28	; 61
     912:	df 91       	pop	r29
     914:	cf 91       	pop	r28
     916:	1f 91       	pop	r17
     918:	0f 91       	pop	r16
     91a:	ff 90       	pop	r15
     91c:	ef 90       	pop	r14
     91e:	df 90       	pop	r13
     920:	cf 90       	pop	r12
     922:	bf 90       	pop	r11
     924:	af 90       	pop	r10
     926:	9f 90       	pop	r9
     928:	8f 90       	pop	r8
     92a:	7f 90       	pop	r7
     92c:	6f 90       	pop	r6
     92e:	5f 90       	pop	r5
     930:	4f 90       	pop	r4
     932:	3f 90       	pop	r3
     934:	2f 90       	pop	r2
     936:	08 95       	ret

00000938 <clust2sect>:
     938:	cf 92       	push	r12
     93a:	df 92       	push	r13
     93c:	ef 92       	push	r14
     93e:	ff 92       	push	r15
     940:	fc 01       	movw	r30, r24
     942:	9a 01       	movw	r18, r20
     944:	ab 01       	movw	r20, r22
     946:	22 50       	subi	r18, 0x02	; 2
     948:	31 09       	sbc	r19, r1
     94a:	41 09       	sbc	r20, r1
     94c:	51 09       	sbc	r21, r1
     94e:	c2 8c       	ldd	r12, Z+26	; 0x1a
     950:	d3 8c       	ldd	r13, Z+27	; 0x1b
     952:	e4 8c       	ldd	r14, Z+28	; 0x1c
     954:	f5 8c       	ldd	r15, Z+29	; 0x1d
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	c8 1a       	sub	r12, r24
     95a:	d1 08       	sbc	r13, r1
     95c:	e1 08       	sbc	r14, r1
     95e:	f1 08       	sbc	r15, r1
     960:	2c 15       	cp	r18, r12
     962:	3d 05       	cpc	r19, r13
     964:	4e 05       	cpc	r20, r14
     966:	5f 05       	cpc	r21, r15
     968:	68 f4       	brcc	.+26     	; 0x984 <clust2sect+0x4c>
     96a:	a2 81       	ldd	r26, Z+2	; 0x02
     96c:	b0 e0       	ldi	r27, 0x00	; 0
     96e:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <__muluhisi3>
     972:	c6 a4       	ldd	r12, Z+46	; 0x2e
     974:	d7 a4       	ldd	r13, Z+47	; 0x2f
     976:	e0 a8       	ldd	r14, Z+48	; 0x30
     978:	f1 a8       	ldd	r15, Z+49	; 0x31
     97a:	6c 0d       	add	r22, r12
     97c:	7d 1d       	adc	r23, r13
     97e:	8e 1d       	adc	r24, r14
     980:	9f 1d       	adc	r25, r15
     982:	03 c0       	rjmp	.+6      	; 0x98a <clust2sect+0x52>
     984:	60 e0       	ldi	r22, 0x00	; 0
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	cb 01       	movw	r24, r22
     98a:	ff 90       	pop	r15
     98c:	ef 90       	pop	r14
     98e:	df 90       	pop	r13
     990:	cf 90       	pop	r12
     992:	08 95       	ret

00000994 <get_fat>:
     994:	af 92       	push	r10
     996:	bf 92       	push	r11
     998:	cf 92       	push	r12
     99a:	df 92       	push	r13
     99c:	ef 92       	push	r14
     99e:	ff 92       	push	r15
     9a0:	1f 93       	push	r17
     9a2:	cf 93       	push	r28
     9a4:	df 93       	push	r29
     9a6:	ec 01       	movw	r28, r24
     9a8:	6a 01       	movw	r12, r20
     9aa:	7b 01       	movw	r14, r22
     9ac:	42 30       	cpi	r20, 0x02	; 2
     9ae:	51 05       	cpc	r21, r1
     9b0:	61 05       	cpc	r22, r1
     9b2:	71 05       	cpc	r23, r1
     9b4:	08 f4       	brcc	.+2      	; 0x9b8 <get_fat+0x24>
     9b6:	aa c0       	rjmp	.+340    	; 0xb0c <get_fat+0x178>
     9b8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9ba:	9b 8d       	ldd	r25, Y+27	; 0x1b
     9bc:	ac 8d       	ldd	r26, Y+28	; 0x1c
     9be:	bd 8d       	ldd	r27, Y+29	; 0x1d
     9c0:	48 17       	cp	r20, r24
     9c2:	59 07       	cpc	r21, r25
     9c4:	6a 07       	cpc	r22, r26
     9c6:	7b 07       	cpc	r23, r27
     9c8:	08 f0       	brcs	.+2      	; 0x9cc <get_fat+0x38>
     9ca:	a5 c0       	rjmp	.+330    	; 0xb16 <get_fat+0x182>
     9cc:	88 81       	ld	r24, Y
     9ce:	82 30       	cpi	r24, 0x02	; 2
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <get_fat+0x40>
     9d2:	4c c0       	rjmp	.+152    	; 0xa6c <get_fat+0xd8>
     9d4:	83 30       	cpi	r24, 0x03	; 3
     9d6:	09 f4       	brne	.+2      	; 0x9da <get_fat+0x46>
     9d8:	6b c0       	rjmp	.+214    	; 0xab0 <get_fat+0x11c>
     9da:	81 30       	cpi	r24, 0x01	; 1
     9dc:	09 f0       	breq	.+2      	; 0x9e0 <get_fat+0x4c>
     9de:	a0 c0       	rjmp	.+320    	; 0xb20 <get_fat+0x18c>
     9e0:	5a 01       	movw	r10, r20
     9e2:	b6 94       	lsr	r11
     9e4:	a7 94       	ror	r10
     9e6:	a4 0e       	add	r10, r20
     9e8:	b5 1e       	adc	r11, r21
     9ea:	c5 01       	movw	r24, r10
     9ec:	89 2f       	mov	r24, r25
     9ee:	99 27       	eor	r25, r25
     9f0:	86 95       	lsr	r24
     9f2:	4e a1       	ldd	r20, Y+38	; 0x26
     9f4:	5f a1       	ldd	r21, Y+39	; 0x27
     9f6:	68 a5       	ldd	r22, Y+40	; 0x28
     9f8:	79 a5       	ldd	r23, Y+41	; 0x29
     9fa:	48 0f       	add	r20, r24
     9fc:	59 1f       	adc	r21, r25
     9fe:	61 1d       	adc	r22, r1
     a00:	71 1d       	adc	r23, r1
     a02:	ce 01       	movw	r24, r28
     a04:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     a08:	81 11       	cpse	r24, r1
     a0a:	8e c0       	rjmp	.+284    	; 0xb28 <get_fat+0x194>
     a0c:	f5 01       	movw	r30, r10
     a0e:	f1 70       	andi	r31, 0x01	; 1
     a10:	ec 0f       	add	r30, r28
     a12:	fd 1f       	adc	r31, r29
     a14:	16 a9       	ldd	r17, Z+54	; 0x36
     a16:	8f ef       	ldi	r24, 0xFF	; 255
     a18:	a8 1a       	sub	r10, r24
     a1a:	b8 0a       	sbc	r11, r24
     a1c:	c5 01       	movw	r24, r10
     a1e:	89 2f       	mov	r24, r25
     a20:	99 27       	eor	r25, r25
     a22:	86 95       	lsr	r24
     a24:	4e a1       	ldd	r20, Y+38	; 0x26
     a26:	5f a1       	ldd	r21, Y+39	; 0x27
     a28:	68 a5       	ldd	r22, Y+40	; 0x28
     a2a:	79 a5       	ldd	r23, Y+41	; 0x29
     a2c:	48 0f       	add	r20, r24
     a2e:	59 1f       	adc	r21, r25
     a30:	61 1d       	adc	r22, r1
     a32:	71 1d       	adc	r23, r1
     a34:	ce 01       	movw	r24, r28
     a36:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     a3a:	81 11       	cpse	r24, r1
     a3c:	79 c0       	rjmp	.+242    	; 0xb30 <get_fat+0x19c>
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	b8 22       	and	r11, r24
     a42:	ca 0d       	add	r28, r10
     a44:	db 1d       	adc	r29, r11
     a46:	8e a9       	ldd	r24, Y+54	; 0x36
     a48:	61 2f       	mov	r22, r17
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	78 2b       	or	r23, r24
     a4e:	c0 fe       	sbrs	r12, 0
     a50:	09 c0       	rjmp	.+18     	; 0xa64 <get_fat+0xd0>
     a52:	72 95       	swap	r23
     a54:	62 95       	swap	r22
     a56:	6f 70       	andi	r22, 0x0F	; 15
     a58:	67 27       	eor	r22, r23
     a5a:	7f 70       	andi	r23, 0x0F	; 15
     a5c:	67 27       	eor	r22, r23
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	71 c0       	rjmp	.+226    	; 0xb46 <get_fat+0x1b2>
     a64:	7f 70       	andi	r23, 0x0F	; 15
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	6d c0       	rjmp	.+218    	; 0xb46 <get_fat+0x1b2>
     a6c:	45 2f       	mov	r20, r21
     a6e:	56 2f       	mov	r21, r22
     a70:	67 2f       	mov	r22, r23
     a72:	77 27       	eor	r23, r23
     a74:	8e a1       	ldd	r24, Y+38	; 0x26
     a76:	9f a1       	ldd	r25, Y+39	; 0x27
     a78:	a8 a5       	ldd	r26, Y+40	; 0x28
     a7a:	b9 a5       	ldd	r27, Y+41	; 0x29
     a7c:	48 0f       	add	r20, r24
     a7e:	59 1f       	adc	r21, r25
     a80:	6a 1f       	adc	r22, r26
     a82:	7b 1f       	adc	r23, r27
     a84:	ce 01       	movw	r24, r28
     a86:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     a8a:	81 11       	cpse	r24, r1
     a8c:	55 c0       	rjmp	.+170    	; 0xb38 <get_fat+0x1a4>
     a8e:	cc 0c       	add	r12, r12
     a90:	dd 1c       	adc	r13, r13
     a92:	ee 1c       	adc	r14, r14
     a94:	ff 1c       	adc	r15, r15
     a96:	e8 94       	clt
     a98:	c0 f8       	bld	r12, 0
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	d8 22       	and	r13, r24
     a9e:	ee 24       	eor	r14, r14
     aa0:	ff 24       	eor	r15, r15
     aa2:	cc 0d       	add	r28, r12
     aa4:	dd 1d       	adc	r29, r13
     aa6:	6e a9       	ldd	r22, Y+54	; 0x36
     aa8:	7f a9       	ldd	r23, Y+55	; 0x37
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	4b c0       	rjmp	.+150    	; 0xb46 <get_fat+0x1b2>
     ab0:	8e a1       	ldd	r24, Y+38	; 0x26
     ab2:	9f a1       	ldd	r25, Y+39	; 0x27
     ab4:	a8 a5       	ldd	r26, Y+40	; 0x28
     ab6:	b9 a5       	ldd	r27, Y+41	; 0x29
     ab8:	68 94       	set
     aba:	16 f8       	bld	r1, 6
     abc:	76 95       	lsr	r23
     abe:	67 95       	ror	r22
     ac0:	57 95       	ror	r21
     ac2:	47 95       	ror	r20
     ac4:	16 94       	lsr	r1
     ac6:	d1 f7       	brne	.-12     	; 0xabc <get_fat+0x128>
     ac8:	48 0f       	add	r20, r24
     aca:	59 1f       	adc	r21, r25
     acc:	6a 1f       	adc	r22, r26
     ace:	7b 1f       	adc	r23, r27
     ad0:	ce 01       	movw	r24, r28
     ad2:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     ad6:	81 11       	cpse	r24, r1
     ad8:	33 c0       	rjmp	.+102    	; 0xb40 <get_fat+0x1ac>
     ada:	cc 0c       	add	r12, r12
     adc:	dd 1c       	adc	r13, r13
     ade:	ee 1c       	adc	r14, r14
     ae0:	ff 1c       	adc	r15, r15
     ae2:	cc 0c       	add	r12, r12
     ae4:	dd 1c       	adc	r13, r13
     ae6:	ee 1c       	adc	r14, r14
     ae8:	ff 1c       	adc	r15, r15
     aea:	8c ef       	ldi	r24, 0xFC	; 252
     aec:	c8 22       	and	r12, r24
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	d8 22       	and	r13, r24
     af2:	ee 24       	eor	r14, r14
     af4:	ff 24       	eor	r15, r15
     af6:	fe 01       	movw	r30, r28
     af8:	ec 0d       	add	r30, r12
     afa:	fd 1d       	adc	r31, r13
     afc:	86 a9       	ldd	r24, Z+54	; 0x36
     afe:	97 a9       	ldd	r25, Z+55	; 0x37
     b00:	a0 ad       	ldd	r26, Z+56	; 0x38
     b02:	b1 ad       	ldd	r27, Z+57	; 0x39
     b04:	bc 01       	movw	r22, r24
     b06:	cd 01       	movw	r24, r26
     b08:	9f 70       	andi	r25, 0x0F	; 15
     b0a:	1d c0       	rjmp	.+58     	; 0xb46 <get_fat+0x1b2>
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	18 c0       	rjmp	.+48     	; 0xb46 <get_fat+0x1b2>
     b16:	61 e0       	ldi	r22, 0x01	; 1
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	13 c0       	rjmp	.+38     	; 0xb46 <get_fat+0x1b2>
     b20:	6f ef       	ldi	r22, 0xFF	; 255
     b22:	7f ef       	ldi	r23, 0xFF	; 255
     b24:	cb 01       	movw	r24, r22
     b26:	0f c0       	rjmp	.+30     	; 0xb46 <get_fat+0x1b2>
     b28:	6f ef       	ldi	r22, 0xFF	; 255
     b2a:	7f ef       	ldi	r23, 0xFF	; 255
     b2c:	cb 01       	movw	r24, r22
     b2e:	0b c0       	rjmp	.+22     	; 0xb46 <get_fat+0x1b2>
     b30:	6f ef       	ldi	r22, 0xFF	; 255
     b32:	7f ef       	ldi	r23, 0xFF	; 255
     b34:	cb 01       	movw	r24, r22
     b36:	07 c0       	rjmp	.+14     	; 0xb46 <get_fat+0x1b2>
     b38:	6f ef       	ldi	r22, 0xFF	; 255
     b3a:	7f ef       	ldi	r23, 0xFF	; 255
     b3c:	cb 01       	movw	r24, r22
     b3e:	03 c0       	rjmp	.+6      	; 0xb46 <get_fat+0x1b2>
     b40:	6f ef       	ldi	r22, 0xFF	; 255
     b42:	7f ef       	ldi	r23, 0xFF	; 255
     b44:	cb 01       	movw	r24, r22
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	1f 91       	pop	r17
     b4c:	ff 90       	pop	r15
     b4e:	ef 90       	pop	r14
     b50:	df 90       	pop	r13
     b52:	cf 90       	pop	r12
     b54:	bf 90       	pop	r11
     b56:	af 90       	pop	r10
     b58:	08 95       	ret

00000b5a <dir_sdi>:
     b5a:	ef 92       	push	r14
     b5c:	ff 92       	push	r15
     b5e:	0f 93       	push	r16
     b60:	1f 93       	push	r17
     b62:	cf 93       	push	r28
     b64:	df 93       	push	r29
     b66:	ec 01       	movw	r28, r24
     b68:	8b 01       	movw	r16, r22
     b6a:	7d 83       	std	Y+5, r23	; 0x05
     b6c:	6c 83       	std	Y+4, r22	; 0x04
     b6e:	4e 81       	ldd	r20, Y+6	; 0x06
     b70:	5f 81       	ldd	r21, Y+7	; 0x07
     b72:	68 85       	ldd	r22, Y+8	; 0x08
     b74:	79 85       	ldd	r23, Y+9	; 0x09
     b76:	41 30       	cpi	r20, 0x01	; 1
     b78:	51 05       	cpc	r21, r1
     b7a:	61 05       	cpc	r22, r1
     b7c:	71 05       	cpc	r23, r1
     b7e:	09 f4       	brne	.+2      	; 0xb82 <dir_sdi+0x28>
     b80:	93 c0       	rjmp	.+294    	; 0xca8 <dir_sdi+0x14e>
     b82:	e8 81       	ld	r30, Y
     b84:	f9 81       	ldd	r31, Y+1	; 0x01
     b86:	82 8d       	ldd	r24, Z+26	; 0x1a
     b88:	93 8d       	ldd	r25, Z+27	; 0x1b
     b8a:	a4 8d       	ldd	r26, Z+28	; 0x1c
     b8c:	b5 8d       	ldd	r27, Z+29	; 0x1d
     b8e:	48 17       	cp	r20, r24
     b90:	59 07       	cpc	r21, r25
     b92:	6a 07       	cpc	r22, r26
     b94:	7b 07       	cpc	r23, r27
     b96:	08 f0       	brcs	.+2      	; 0xb9a <dir_sdi+0x40>
     b98:	89 c0       	rjmp	.+274    	; 0xcac <dir_sdi+0x152>
     b9a:	41 15       	cp	r20, r1
     b9c:	51 05       	cpc	r21, r1
     b9e:	61 05       	cpc	r22, r1
     ba0:	71 05       	cpc	r23, r1
     ba2:	51 f5       	brne	.+84     	; 0xbf8 <dir_sdi+0x9e>
     ba4:	80 81       	ld	r24, Z
     ba6:	83 30       	cpi	r24, 0x03	; 3
     ba8:	49 f4       	brne	.+18     	; 0xbbc <dir_sdi+0x62>
     baa:	42 a5       	ldd	r20, Z+42	; 0x2a
     bac:	53 a5       	ldd	r21, Z+43	; 0x2b
     bae:	64 a5       	ldd	r22, Z+44	; 0x2c
     bb0:	75 a5       	ldd	r23, Z+45	; 0x2d
     bb2:	41 15       	cp	r20, r1
     bb4:	51 05       	cpc	r21, r1
     bb6:	61 05       	cpc	r22, r1
     bb8:	71 05       	cpc	r23, r1
     bba:	f1 f4       	brne	.+60     	; 0xbf8 <dir_sdi+0x9e>
     bbc:	1a 86       	std	Y+10, r1	; 0x0a
     bbe:	1b 86       	std	Y+11, r1	; 0x0b
     bc0:	1c 86       	std	Y+12, r1	; 0x0c
     bc2:	1d 86       	std	Y+13, r1	; 0x0d
     bc4:	80 85       	ldd	r24, Z+8	; 0x08
     bc6:	91 85       	ldd	r25, Z+9	; 0x09
     bc8:	08 17       	cp	r16, r24
     bca:	19 07       	cpc	r17, r25
     bcc:	08 f0       	brcs	.+2      	; 0xbd0 <dir_sdi+0x76>
     bce:	70 c0       	rjmp	.+224    	; 0xcb0 <dir_sdi+0x156>
     bd0:	82 a5       	ldd	r24, Z+42	; 0x2a
     bd2:	93 a5       	ldd	r25, Z+43	; 0x2b
     bd4:	a4 a5       	ldd	r26, Z+44	; 0x2c
     bd6:	b5 a5       	ldd	r27, Z+45	; 0x2d
     bd8:	98 01       	movw	r18, r16
     bda:	32 95       	swap	r19
     bdc:	22 95       	swap	r18
     bde:	2f 70       	andi	r18, 0x0F	; 15
     be0:	23 27       	eor	r18, r19
     be2:	3f 70       	andi	r19, 0x0F	; 15
     be4:	23 27       	eor	r18, r19
     be6:	82 0f       	add	r24, r18
     be8:	93 1f       	adc	r25, r19
     bea:	a1 1d       	adc	r26, r1
     bec:	b1 1d       	adc	r27, r1
     bee:	8e 87       	std	Y+14, r24	; 0x0e
     bf0:	9f 87       	std	Y+15, r25	; 0x0f
     bf2:	a8 8b       	std	Y+16, r26	; 0x10
     bf4:	b9 8b       	std	Y+17, r27	; 0x11
     bf6:	44 c0       	rjmp	.+136    	; 0xc80 <dir_sdi+0x126>
     bf8:	e2 80       	ldd	r14, Z+2	; 0x02
     bfa:	80 e1       	ldi	r24, 0x10	; 16
     bfc:	e8 9e       	mul	r14, r24
     bfe:	70 01       	movw	r14, r0
     c00:	11 24       	eor	r1, r1
     c02:	0e 15       	cp	r16, r14
     c04:	1f 05       	cpc	r17, r15
     c06:	18 f1       	brcs	.+70     	; 0xc4e <dir_sdi+0xf4>
     c08:	88 81       	ld	r24, Y
     c0a:	99 81       	ldd	r25, Y+1	; 0x01
     c0c:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
     c10:	ab 01       	movw	r20, r22
     c12:	bc 01       	movw	r22, r24
     c14:	4f 3f       	cpi	r20, 0xFF	; 255
     c16:	8f ef       	ldi	r24, 0xFF	; 255
     c18:	58 07       	cpc	r21, r24
     c1a:	68 07       	cpc	r22, r24
     c1c:	78 07       	cpc	r23, r24
     c1e:	09 f4       	brne	.+2      	; 0xc22 <dir_sdi+0xc8>
     c20:	49 c0       	rjmp	.+146    	; 0xcb4 <dir_sdi+0x15a>
     c22:	42 30       	cpi	r20, 0x02	; 2
     c24:	51 05       	cpc	r21, r1
     c26:	61 05       	cpc	r22, r1
     c28:	71 05       	cpc	r23, r1
     c2a:	08 f4       	brcc	.+2      	; 0xc2e <dir_sdi+0xd4>
     c2c:	45 c0       	rjmp	.+138    	; 0xcb8 <dir_sdi+0x15e>
     c2e:	e8 81       	ld	r30, Y
     c30:	f9 81       	ldd	r31, Y+1	; 0x01
     c32:	82 8d       	ldd	r24, Z+26	; 0x1a
     c34:	93 8d       	ldd	r25, Z+27	; 0x1b
     c36:	a4 8d       	ldd	r26, Z+28	; 0x1c
     c38:	b5 8d       	ldd	r27, Z+29	; 0x1d
     c3a:	48 17       	cp	r20, r24
     c3c:	59 07       	cpc	r21, r25
     c3e:	6a 07       	cpc	r22, r26
     c40:	7b 07       	cpc	r23, r27
     c42:	e0 f5       	brcc	.+120    	; 0xcbc <dir_sdi+0x162>
     c44:	0e 19       	sub	r16, r14
     c46:	1f 09       	sbc	r17, r15
     c48:	0e 15       	cp	r16, r14
     c4a:	1f 05       	cpc	r17, r15
     c4c:	e8 f6       	brcc	.-70     	; 0xc08 <dir_sdi+0xae>
     c4e:	4a 87       	std	Y+10, r20	; 0x0a
     c50:	5b 87       	std	Y+11, r21	; 0x0b
     c52:	6c 87       	std	Y+12, r22	; 0x0c
     c54:	7d 87       	std	Y+13, r23	; 0x0d
     c56:	88 81       	ld	r24, Y
     c58:	99 81       	ldd	r25, Y+1	; 0x01
     c5a:	0e 94 9c 04 	call	0x938	; 0x938 <clust2sect>
     c5e:	98 01       	movw	r18, r16
     c60:	32 95       	swap	r19
     c62:	22 95       	swap	r18
     c64:	2f 70       	andi	r18, 0x0F	; 15
     c66:	23 27       	eor	r18, r19
     c68:	3f 70       	andi	r19, 0x0F	; 15
     c6a:	23 27       	eor	r18, r19
     c6c:	dc 01       	movw	r26, r24
     c6e:	cb 01       	movw	r24, r22
     c70:	82 0f       	add	r24, r18
     c72:	93 1f       	adc	r25, r19
     c74:	a1 1d       	adc	r26, r1
     c76:	b1 1d       	adc	r27, r1
     c78:	8e 87       	std	Y+14, r24	; 0x0e
     c7a:	9f 87       	std	Y+15, r25	; 0x0f
     c7c:	a8 8b       	std	Y+16, r26	; 0x10
     c7e:	b9 8b       	std	Y+17, r27	; 0x11
     c80:	0f 70       	andi	r16, 0x0F	; 15
     c82:	11 27       	eor	r17, r17
     c84:	00 0f       	add	r16, r16
     c86:	11 1f       	adc	r17, r17
     c88:	02 95       	swap	r16
     c8a:	12 95       	swap	r17
     c8c:	10 7f       	andi	r17, 0xF0	; 240
     c8e:	10 27       	eor	r17, r16
     c90:	00 7f       	andi	r16, 0xF0	; 240
     c92:	10 27       	eor	r17, r16
     c94:	0a 5c       	subi	r16, 0xCA	; 202
     c96:	1f 4f       	sbci	r17, 0xFF	; 255
     c98:	88 81       	ld	r24, Y
     c9a:	99 81       	ldd	r25, Y+1	; 0x01
     c9c:	08 0f       	add	r16, r24
     c9e:	19 1f       	adc	r17, r25
     ca0:	1b 8b       	std	Y+19, r17	; 0x13
     ca2:	0a 8b       	std	Y+18, r16	; 0x12
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	0b c0       	rjmp	.+22     	; 0xcbe <dir_sdi+0x164>
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	09 c0       	rjmp	.+18     	; 0xcbe <dir_sdi+0x164>
     cac:	82 e0       	ldi	r24, 0x02	; 2
     cae:	07 c0       	rjmp	.+14     	; 0xcbe <dir_sdi+0x164>
     cb0:	82 e0       	ldi	r24, 0x02	; 2
     cb2:	05 c0       	rjmp	.+10     	; 0xcbe <dir_sdi+0x164>
     cb4:	81 e0       	ldi	r24, 0x01	; 1
     cb6:	03 c0       	rjmp	.+6      	; 0xcbe <dir_sdi+0x164>
     cb8:	82 e0       	ldi	r24, 0x02	; 2
     cba:	01 c0       	rjmp	.+2      	; 0xcbe <dir_sdi+0x164>
     cbc:	82 e0       	ldi	r24, 0x02	; 2
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	1f 91       	pop	r17
     cc4:	0f 91       	pop	r16
     cc6:	ff 90       	pop	r15
     cc8:	ef 90       	pop	r14
     cca:	08 95       	ret

00000ccc <put_fat>:
     ccc:	4f 92       	push	r4
     cce:	5f 92       	push	r5
     cd0:	6f 92       	push	r6
     cd2:	7f 92       	push	r7
     cd4:	af 92       	push	r10
     cd6:	bf 92       	push	r11
     cd8:	cf 92       	push	r12
     cda:	df 92       	push	r13
     cdc:	ef 92       	push	r14
     cde:	ff 92       	push	r15
     ce0:	0f 93       	push	r16
     ce2:	1f 93       	push	r17
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	ec 01       	movw	r28, r24
     cea:	6a 01       	movw	r12, r20
     cec:	7b 01       	movw	r14, r22
     cee:	28 01       	movw	r4, r16
     cf0:	39 01       	movw	r6, r18
     cf2:	42 30       	cpi	r20, 0x02	; 2
     cf4:	51 05       	cpc	r21, r1
     cf6:	61 05       	cpc	r22, r1
     cf8:	71 05       	cpc	r23, r1
     cfa:	08 f4       	brcc	.+2      	; 0xcfe <put_fat+0x32>
     cfc:	d9 c0       	rjmp	.+434    	; 0xeb0 <put_fat+0x1e4>
     cfe:	8a 8d       	ldd	r24, Y+26	; 0x1a
     d00:	9b 8d       	ldd	r25, Y+27	; 0x1b
     d02:	ac 8d       	ldd	r26, Y+28	; 0x1c
     d04:	bd 8d       	ldd	r27, Y+29	; 0x1d
     d06:	48 17       	cp	r20, r24
     d08:	59 07       	cpc	r21, r25
     d0a:	6a 07       	cpc	r22, r26
     d0c:	7b 07       	cpc	r23, r27
     d0e:	08 f0       	brcs	.+2      	; 0xd12 <put_fat+0x46>
     d10:	d1 c0       	rjmp	.+418    	; 0xeb4 <put_fat+0x1e8>
     d12:	88 81       	ld	r24, Y
     d14:	82 30       	cpi	r24, 0x02	; 2
     d16:	09 f4       	brne	.+2      	; 0xd1a <put_fat+0x4e>
     d18:	63 c0       	rjmp	.+198    	; 0xde0 <put_fat+0x114>
     d1a:	83 30       	cpi	r24, 0x03	; 3
     d1c:	09 f4       	brne	.+2      	; 0xd20 <put_fat+0x54>
     d1e:	85 c0       	rjmp	.+266    	; 0xe2a <put_fat+0x15e>
     d20:	81 30       	cpi	r24, 0x01	; 1
     d22:	09 f0       	breq	.+2      	; 0xd26 <put_fat+0x5a>
     d24:	bd c0       	rjmp	.+378    	; 0xea0 <put_fat+0x1d4>
     d26:	5a 01       	movw	r10, r20
     d28:	b6 94       	lsr	r11
     d2a:	a7 94       	ror	r10
     d2c:	a4 0e       	add	r10, r20
     d2e:	b5 1e       	adc	r11, r21
     d30:	c5 01       	movw	r24, r10
     d32:	89 2f       	mov	r24, r25
     d34:	99 27       	eor	r25, r25
     d36:	86 95       	lsr	r24
     d38:	4e a1       	ldd	r20, Y+38	; 0x26
     d3a:	5f a1       	ldd	r21, Y+39	; 0x27
     d3c:	68 a5       	ldd	r22, Y+40	; 0x28
     d3e:	79 a5       	ldd	r23, Y+41	; 0x29
     d40:	48 0f       	add	r20, r24
     d42:	59 1f       	adc	r21, r25
     d44:	61 1d       	adc	r22, r1
     d46:	71 1d       	adc	r23, r1
     d48:	ce 01       	movw	r24, r28
     d4a:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     d4e:	18 2f       	mov	r17, r24
     d50:	81 11       	cpse	r24, r1
     d52:	ab c0       	rjmp	.+342    	; 0xeaa <put_fat+0x1de>
     d54:	c5 01       	movw	r24, r10
     d56:	91 70       	andi	r25, 0x01	; 1
     d58:	c0 fe       	sbrs	r12, 0
     d5a:	23 c0       	rjmp	.+70     	; 0xda2 <put_fat+0xd6>
     d5c:	fe 01       	movw	r30, r28
     d5e:	e8 0f       	add	r30, r24
     d60:	f9 1f       	adc	r31, r25
     d62:	86 a9       	ldd	r24, Z+54	; 0x36
     d64:	28 2f       	mov	r18, r24
     d66:	2f 70       	andi	r18, 0x0F	; 15
     d68:	30 e1       	ldi	r19, 0x10	; 16
     d6a:	43 9e       	mul	r4, r19
     d6c:	c0 01       	movw	r24, r0
     d6e:	11 24       	eor	r1, r1
     d70:	82 2b       	or	r24, r18
     d72:	86 ab       	std	Z+54, r24	; 0x36
     d74:	8f ef       	ldi	r24, 0xFF	; 255
     d76:	a8 1a       	sub	r10, r24
     d78:	b8 0a       	sbc	r11, r24
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	8c 83       	std	Y+4, r24	; 0x04
     d7e:	c5 01       	movw	r24, r10
     d80:	89 2f       	mov	r24, r25
     d82:	99 27       	eor	r25, r25
     d84:	86 95       	lsr	r24
     d86:	4e a1       	ldd	r20, Y+38	; 0x26
     d88:	5f a1       	ldd	r21, Y+39	; 0x27
     d8a:	68 a5       	ldd	r22, Y+40	; 0x28
     d8c:	79 a5       	ldd	r23, Y+41	; 0x29
     d8e:	48 0f       	add	r20, r24
     d90:	59 1f       	adc	r21, r25
     d92:	61 1d       	adc	r22, r1
     d94:	71 1d       	adc	r23, r1
     d96:	ce 01       	movw	r24, r28
     d98:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     d9c:	81 11       	cpse	r24, r1
     d9e:	82 c0       	rjmp	.+260    	; 0xea4 <put_fat+0x1d8>
     da0:	8b c0       	rjmp	.+278    	; 0xeb8 <put_fat+0x1ec>
     da2:	fe 01       	movw	r30, r28
     da4:	e8 0f       	add	r30, r24
     da6:	f9 1f       	adc	r31, r25
     da8:	46 aa       	std	Z+54, r4	; 0x36
     daa:	3f ef       	ldi	r19, 0xFF	; 255
     dac:	a3 1a       	sub	r10, r19
     dae:	b3 0a       	sbc	r11, r19
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	8c 83       	std	Y+4, r24	; 0x04
     db4:	c5 01       	movw	r24, r10
     db6:	89 2f       	mov	r24, r25
     db8:	99 27       	eor	r25, r25
     dba:	86 95       	lsr	r24
     dbc:	4e a1       	ldd	r20, Y+38	; 0x26
     dbe:	5f a1       	ldd	r21, Y+39	; 0x27
     dc0:	68 a5       	ldd	r22, Y+40	; 0x28
     dc2:	79 a5       	ldd	r23, Y+41	; 0x29
     dc4:	48 0f       	add	r20, r24
     dc6:	59 1f       	adc	r21, r25
     dc8:	61 1d       	adc	r22, r1
     dca:	71 1d       	adc	r23, r1
     dcc:	ce 01       	movw	r24, r28
     dce:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     dd2:	81 11       	cpse	r24, r1
     dd4:	69 c0       	rjmp	.+210    	; 0xea8 <put_fat+0x1dc>
     dd6:	7b c0       	rjmp	.+246    	; 0xece <put_fat+0x202>
     dd8:	ec 0f       	add	r30, r28
     dda:	fd 1f       	adc	r31, r29
     ddc:	46 aa       	std	Z+54, r4	; 0x36
     dde:	65 c0       	rjmp	.+202    	; 0xeaa <put_fat+0x1de>
     de0:	45 2f       	mov	r20, r21
     de2:	56 2f       	mov	r21, r22
     de4:	67 2f       	mov	r22, r23
     de6:	77 27       	eor	r23, r23
     de8:	8e a1       	ldd	r24, Y+38	; 0x26
     dea:	9f a1       	ldd	r25, Y+39	; 0x27
     dec:	a8 a5       	ldd	r26, Y+40	; 0x28
     dee:	b9 a5       	ldd	r27, Y+41	; 0x29
     df0:	48 0f       	add	r20, r24
     df2:	59 1f       	adc	r21, r25
     df4:	6a 1f       	adc	r22, r26
     df6:	7b 1f       	adc	r23, r27
     df8:	ce 01       	movw	r24, r28
     dfa:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     dfe:	18 2f       	mov	r17, r24
     e00:	81 11       	cpse	r24, r1
     e02:	53 c0       	rjmp	.+166    	; 0xeaa <put_fat+0x1de>
     e04:	cc 0c       	add	r12, r12
     e06:	dd 1c       	adc	r13, r13
     e08:	ee 1c       	adc	r14, r14
     e0a:	ff 1c       	adc	r15, r15
     e0c:	e8 94       	clt
     e0e:	c0 f8       	bld	r12, 0
     e10:	81 e0       	ldi	r24, 0x01	; 1
     e12:	d8 22       	and	r13, r24
     e14:	ee 24       	eor	r14, r14
     e16:	ff 24       	eor	r15, r15
     e18:	36 e3       	ldi	r19, 0x36	; 54
     e1a:	c3 0e       	add	r12, r19
     e1c:	d1 1c       	adc	r13, r1
     e1e:	fe 01       	movw	r30, r28
     e20:	ec 0d       	add	r30, r12
     e22:	fd 1d       	adc	r31, r13
     e24:	51 82       	std	Z+1, r5	; 0x01
     e26:	40 82       	st	Z, r4
     e28:	40 c0       	rjmp	.+128    	; 0xeaa <put_fat+0x1de>
     e2a:	8e a1       	ldd	r24, Y+38	; 0x26
     e2c:	9f a1       	ldd	r25, Y+39	; 0x27
     e2e:	a8 a5       	ldd	r26, Y+40	; 0x28
     e30:	b9 a5       	ldd	r27, Y+41	; 0x29
     e32:	68 94       	set
     e34:	16 f8       	bld	r1, 6
     e36:	76 95       	lsr	r23
     e38:	67 95       	ror	r22
     e3a:	57 95       	ror	r21
     e3c:	47 95       	ror	r20
     e3e:	16 94       	lsr	r1
     e40:	d1 f7       	brne	.-12     	; 0xe36 <put_fat+0x16a>
     e42:	48 0f       	add	r20, r24
     e44:	59 1f       	adc	r21, r25
     e46:	6a 1f       	adc	r22, r26
     e48:	7b 1f       	adc	r23, r27
     e4a:	ce 01       	movw	r24, r28
     e4c:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
     e50:	18 2f       	mov	r17, r24
     e52:	81 11       	cpse	r24, r1
     e54:	2a c0       	rjmp	.+84     	; 0xeaa <put_fat+0x1de>
     e56:	cc 0c       	add	r12, r12
     e58:	dd 1c       	adc	r13, r13
     e5a:	ee 1c       	adc	r14, r14
     e5c:	ff 1c       	adc	r15, r15
     e5e:	cc 0c       	add	r12, r12
     e60:	dd 1c       	adc	r13, r13
     e62:	ee 1c       	adc	r14, r14
     e64:	ff 1c       	adc	r15, r15
     e66:	8c ef       	ldi	r24, 0xFC	; 252
     e68:	c8 22       	and	r12, r24
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	d8 22       	and	r13, r24
     e6e:	ee 24       	eor	r14, r14
     e70:	ff 24       	eor	r15, r15
     e72:	36 e3       	ldi	r19, 0x36	; 54
     e74:	c3 0e       	add	r12, r19
     e76:	d1 1c       	adc	r13, r1
     e78:	fe 01       	movw	r30, r28
     e7a:	ec 0d       	add	r30, r12
     e7c:	fd 1d       	adc	r31, r13
     e7e:	80 81       	ld	r24, Z
     e80:	91 81       	ldd	r25, Z+1	; 0x01
     e82:	a2 81       	ldd	r26, Z+2	; 0x02
     e84:	b3 81       	ldd	r27, Z+3	; 0x03
     e86:	88 27       	eor	r24, r24
     e88:	99 27       	eor	r25, r25
     e8a:	aa 27       	eor	r26, r26
     e8c:	b0 7f       	andi	r27, 0xF0	; 240
     e8e:	48 2a       	or	r4, r24
     e90:	59 2a       	or	r5, r25
     e92:	6a 2a       	or	r6, r26
     e94:	7b 2a       	or	r7, r27
     e96:	40 82       	st	Z, r4
     e98:	51 82       	std	Z+1, r5	; 0x01
     e9a:	62 82       	std	Z+2, r6	; 0x02
     e9c:	73 82       	std	Z+3, r7	; 0x03
     e9e:	05 c0       	rjmp	.+10     	; 0xeaa <put_fat+0x1de>
     ea0:	12 e0       	ldi	r17, 0x02	; 2
     ea2:	03 c0       	rjmp	.+6      	; 0xeaa <put_fat+0x1de>
     ea4:	18 2f       	mov	r17, r24
     ea6:	01 c0       	rjmp	.+2      	; 0xeaa <put_fat+0x1de>
     ea8:	18 2f       	mov	r17, r24
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	8c 83       	std	Y+4, r24	; 0x04
     eae:	1c c0       	rjmp	.+56     	; 0xee8 <put_fat+0x21c>
     eb0:	12 e0       	ldi	r17, 0x02	; 2
     eb2:	1a c0       	rjmp	.+52     	; 0xee8 <put_fat+0x21c>
     eb4:	12 e0       	ldi	r17, 0x02	; 2
     eb6:	18 c0       	rjmp	.+48     	; 0xee8 <put_fat+0x21c>
     eb8:	f5 01       	movw	r30, r10
     eba:	f1 70       	andi	r31, 0x01	; 1
     ebc:	68 94       	set
     ebe:	13 f8       	bld	r1, 3
     ec0:	76 94       	lsr	r7
     ec2:	67 94       	ror	r6
     ec4:	57 94       	ror	r5
     ec6:	47 94       	ror	r4
     ec8:	16 94       	lsr	r1
     eca:	d1 f7       	brne	.-12     	; 0xec0 <put_fat+0x1f4>
     ecc:	85 cf       	rjmp	.-246    	; 0xdd8 <put_fat+0x10c>
     ece:	f5 01       	movw	r30, r10
     ed0:	f1 70       	andi	r31, 0x01	; 1
     ed2:	de 01       	movw	r26, r28
     ed4:	ae 0f       	add	r26, r30
     ed6:	bf 1f       	adc	r27, r31
     ed8:	d6 96       	adiw	r26, 0x36	; 54
     eda:	9c 91       	ld	r25, X
     edc:	90 7f       	andi	r25, 0xF0	; 240
     ede:	85 2d       	mov	r24, r5
     ee0:	8f 70       	andi	r24, 0x0F	; 15
     ee2:	49 2e       	mov	r4, r25
     ee4:	48 2a       	or	r4, r24
     ee6:	78 cf       	rjmp	.-272    	; 0xdd8 <put_fat+0x10c>
     ee8:	81 2f       	mov	r24, r17
     eea:	df 91       	pop	r29
     eec:	cf 91       	pop	r28
     eee:	1f 91       	pop	r17
     ef0:	0f 91       	pop	r16
     ef2:	ff 90       	pop	r15
     ef4:	ef 90       	pop	r14
     ef6:	df 90       	pop	r13
     ef8:	cf 90       	pop	r12
     efa:	bf 90       	pop	r11
     efc:	af 90       	pop	r10
     efe:	7f 90       	pop	r7
     f00:	6f 90       	pop	r6
     f02:	5f 90       	pop	r5
     f04:	4f 90       	pop	r4
     f06:	08 95       	ret

00000f08 <create_chain>:
     f08:	2f 92       	push	r2
     f0a:	3f 92       	push	r3
     f0c:	4f 92       	push	r4
     f0e:	5f 92       	push	r5
     f10:	6f 92       	push	r6
     f12:	7f 92       	push	r7
     f14:	8f 92       	push	r8
     f16:	9f 92       	push	r9
     f18:	af 92       	push	r10
     f1a:	bf 92       	push	r11
     f1c:	cf 92       	push	r12
     f1e:	df 92       	push	r13
     f20:	ef 92       	push	r14
     f22:	ff 92       	push	r15
     f24:	0f 93       	push	r16
     f26:	1f 93       	push	r17
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	ec 01       	movw	r28, r24
     f2e:	2a 01       	movw	r4, r20
     f30:	3b 01       	movw	r6, r22
     f32:	41 15       	cp	r20, r1
     f34:	51 05       	cpc	r21, r1
     f36:	61 05       	cpc	r22, r1
     f38:	71 05       	cpc	r23, r1
     f3a:	b9 f4       	brne	.+46     	; 0xf6a <create_chain+0x62>
     f3c:	8a 84       	ldd	r8, Y+10	; 0x0a
     f3e:	9b 84       	ldd	r9, Y+11	; 0x0b
     f40:	ac 84       	ldd	r10, Y+12	; 0x0c
     f42:	bd 84       	ldd	r11, Y+13	; 0x0d
     f44:	81 14       	cp	r8, r1
     f46:	91 04       	cpc	r9, r1
     f48:	a1 04       	cpc	r10, r1
     f4a:	b1 04       	cpc	r11, r1
     f4c:	29 f1       	breq	.+74     	; 0xf98 <create_chain+0x90>
     f4e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f50:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f52:	ac 8d       	ldd	r26, Y+28	; 0x1c
     f54:	bd 8d       	ldd	r27, Y+29	; 0x1d
     f56:	88 16       	cp	r8, r24
     f58:	99 06       	cpc	r9, r25
     f5a:	aa 06       	cpc	r10, r26
     f5c:	bb 06       	cpc	r11, r27
     f5e:	00 f1       	brcs	.+64     	; 0xfa0 <create_chain+0x98>
     f60:	81 2c       	mov	r8, r1
     f62:	91 2c       	mov	r9, r1
     f64:	54 01       	movw	r10, r8
     f66:	83 94       	inc	r8
     f68:	1b c0       	rjmp	.+54     	; 0xfa0 <create_chain+0x98>
     f6a:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
     f6e:	6b 01       	movw	r12, r22
     f70:	7c 01       	movw	r14, r24
     f72:	62 30       	cpi	r22, 0x02	; 2
     f74:	71 05       	cpc	r23, r1
     f76:	81 05       	cpc	r24, r1
     f78:	91 05       	cpc	r25, r1
     f7a:	08 f4       	brcc	.+2      	; 0xf7e <create_chain+0x76>
     f7c:	91 c0       	rjmp	.+290    	; 0x10a0 <create_chain+0x198>
     f7e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f80:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f82:	ac 8d       	ldd	r26, Y+28	; 0x1c
     f84:	bd 8d       	ldd	r27, Y+29	; 0x1d
     f86:	c8 16       	cp	r12, r24
     f88:	d9 06       	cpc	r13, r25
     f8a:	ea 06       	cpc	r14, r26
     f8c:	fb 06       	cpc	r15, r27
     f8e:	08 f4       	brcc	.+2      	; 0xf92 <create_chain+0x8a>
     f90:	8c c0       	rjmp	.+280    	; 0x10aa <create_chain+0x1a2>
     f92:	53 01       	movw	r10, r6
     f94:	42 01       	movw	r8, r4
     f96:	04 c0       	rjmp	.+8      	; 0xfa0 <create_chain+0x98>
     f98:	81 2c       	mov	r8, r1
     f9a:	91 2c       	mov	r9, r1
     f9c:	54 01       	movw	r10, r8
     f9e:	83 94       	inc	r8
     fa0:	75 01       	movw	r14, r10
     fa2:	64 01       	movw	r12, r8
     fa4:	68 94       	set
     fa6:	22 24       	eor	r2, r2
     fa8:	21 f8       	bld	r2, 1
     faa:	31 2c       	mov	r3, r1
     fac:	00 e0       	ldi	r16, 0x00	; 0
     fae:	10 e0       	ldi	r17, 0x00	; 0
     fb0:	8f ef       	ldi	r24, 0xFF	; 255
     fb2:	c8 1a       	sub	r12, r24
     fb4:	d8 0a       	sbc	r13, r24
     fb6:	e8 0a       	sbc	r14, r24
     fb8:	f8 0a       	sbc	r15, r24
     fba:	8a 8d       	ldd	r24, Y+26	; 0x1a
     fbc:	9b 8d       	ldd	r25, Y+27	; 0x1b
     fbe:	ac 8d       	ldd	r26, Y+28	; 0x1c
     fc0:	bd 8d       	ldd	r27, Y+29	; 0x1d
     fc2:	c8 16       	cp	r12, r24
     fc4:	d9 06       	cpc	r13, r25
     fc6:	ea 06       	cpc	r14, r26
     fc8:	fb 06       	cpc	r15, r27
     fca:	58 f0       	brcs	.+22     	; 0xfe2 <create_chain+0xda>
     fcc:	22 e0       	ldi	r18, 0x02	; 2
     fce:	82 16       	cp	r8, r18
     fd0:	91 04       	cpc	r9, r1
     fd2:	a1 04       	cpc	r10, r1
     fd4:	b1 04       	cpc	r11, r1
     fd6:	08 f4       	brcc	.+2      	; 0xfda <create_chain+0xd2>
     fd8:	6d c0       	rjmp	.+218    	; 0x10b4 <create_chain+0x1ac>
     fda:	c2 2c       	mov	r12, r2
     fdc:	d3 2c       	mov	r13, r3
     fde:	e0 2e       	mov	r14, r16
     fe0:	f1 2e       	mov	r15, r17
     fe2:	b7 01       	movw	r22, r14
     fe4:	a6 01       	movw	r20, r12
     fe6:	ce 01       	movw	r24, r28
     fe8:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
     fec:	61 15       	cp	r22, r1
     fee:	71 05       	cpc	r23, r1
     ff0:	81 05       	cpc	r24, r1
     ff2:	91 05       	cpc	r25, r1
     ff4:	99 f0       	breq	.+38     	; 0x101c <create_chain+0x114>
     ff6:	6f 3f       	cpi	r22, 0xFF	; 255
     ff8:	2f ef       	ldi	r18, 0xFF	; 255
     ffa:	72 07       	cpc	r23, r18
     ffc:	82 07       	cpc	r24, r18
     ffe:	92 07       	cpc	r25, r18
    1000:	09 f4       	brne	.+2      	; 0x1004 <create_chain+0xfc>
    1002:	5d c0       	rjmp	.+186    	; 0x10be <create_chain+0x1b6>
    1004:	61 30       	cpi	r22, 0x01	; 1
    1006:	71 05       	cpc	r23, r1
    1008:	81 05       	cpc	r24, r1
    100a:	91 05       	cpc	r25, r1
    100c:	09 f4       	brne	.+2      	; 0x1010 <create_chain+0x108>
    100e:	5c c0       	rjmp	.+184    	; 0x10c8 <create_chain+0x1c0>
    1010:	c8 14       	cp	r12, r8
    1012:	d9 04       	cpc	r13, r9
    1014:	ea 04       	cpc	r14, r10
    1016:	fb 04       	cpc	r15, r11
    1018:	59 f6       	brne	.-106    	; 0xfb0 <create_chain+0xa8>
    101a:	5b c0       	rjmp	.+182    	; 0x10d2 <create_chain+0x1ca>
    101c:	8c 2c       	mov	r8, r12
    101e:	9d 2c       	mov	r9, r13
    1020:	ae 2c       	mov	r10, r14
    1022:	bf 2c       	mov	r11, r15
    1024:	0f ef       	ldi	r16, 0xFF	; 255
    1026:	1f ef       	ldi	r17, 0xFF	; 255
    1028:	2f ef       	ldi	r18, 0xFF	; 255
    102a:	3f e0       	ldi	r19, 0x0F	; 15
    102c:	b7 01       	movw	r22, r14
    102e:	a6 01       	movw	r20, r12
    1030:	ce 01       	movw	r24, r28
    1032:	0e 94 66 06 	call	0xccc	; 0xccc <put_fat>
    1036:	81 11       	cpse	r24, r1
    1038:	2c c0       	rjmp	.+88     	; 0x1092 <create_chain+0x18a>
    103a:	41 14       	cp	r4, r1
    103c:	51 04       	cpc	r5, r1
    103e:	61 04       	cpc	r6, r1
    1040:	71 04       	cpc	r7, r1
    1042:	59 f0       	breq	.+22     	; 0x105a <create_chain+0x152>
    1044:	0c 2d       	mov	r16, r12
    1046:	1d 2d       	mov	r17, r13
    1048:	2e 2d       	mov	r18, r14
    104a:	3f 2d       	mov	r19, r15
    104c:	b3 01       	movw	r22, r6
    104e:	a2 01       	movw	r20, r4
    1050:	ce 01       	movw	r24, r28
    1052:	0e 94 66 06 	call	0xccc	; 0xccc <put_fat>
    1056:	81 11       	cpse	r24, r1
    1058:	1c c0       	rjmp	.+56     	; 0x1092 <create_chain+0x18a>
    105a:	8a 86       	std	Y+10, r8	; 0x0a
    105c:	9b 86       	std	Y+11, r9	; 0x0b
    105e:	ac 86       	std	Y+12, r10	; 0x0c
    1060:	bd 86       	std	Y+13, r11	; 0x0d
    1062:	8e 85       	ldd	r24, Y+14	; 0x0e
    1064:	9f 85       	ldd	r25, Y+15	; 0x0f
    1066:	a8 89       	ldd	r26, Y+16	; 0x10
    1068:	b9 89       	ldd	r27, Y+17	; 0x11
    106a:	8f 3f       	cpi	r24, 0xFF	; 255
    106c:	2f ef       	ldi	r18, 0xFF	; 255
    106e:	92 07       	cpc	r25, r18
    1070:	a2 07       	cpc	r26, r18
    1072:	b2 07       	cpc	r27, r18
    1074:	99 f1       	breq	.+102    	; 0x10dc <create_chain+0x1d4>
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	a1 09       	sbc	r26, r1
    107a:	b1 09       	sbc	r27, r1
    107c:	8e 87       	std	Y+14, r24	; 0x0e
    107e:	9f 87       	std	Y+15, r25	; 0x0f
    1080:	a8 8b       	std	Y+16, r26	; 0x10
    1082:	b9 8b       	std	Y+17, r27	; 0x11
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	8d 83       	std	Y+5, r24	; 0x05
    1088:	6c 2d       	mov	r22, r12
    108a:	7d 2d       	mov	r23, r13
    108c:	8e 2d       	mov	r24, r14
    108e:	9f 2d       	mov	r25, r15
    1090:	2e c0       	rjmp	.+92     	; 0x10ee <create_chain+0x1e6>
    1092:	81 30       	cpi	r24, 0x01	; 1
    1094:	41 f1       	breq	.+80     	; 0x10e6 <create_chain+0x1de>
    1096:	61 e0       	ldi	r22, 0x01	; 1
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	27 c0       	rjmp	.+78     	; 0x10ee <create_chain+0x1e6>
    10a0:	61 e0       	ldi	r22, 0x01	; 1
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	22 c0       	rjmp	.+68     	; 0x10ee <create_chain+0x1e6>
    10aa:	6c 2d       	mov	r22, r12
    10ac:	7d 2d       	mov	r23, r13
    10ae:	8e 2d       	mov	r24, r14
    10b0:	9f 2d       	mov	r25, r15
    10b2:	1d c0       	rjmp	.+58     	; 0x10ee <create_chain+0x1e6>
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	18 c0       	rjmp	.+48     	; 0x10ee <create_chain+0x1e6>
    10be:	6f ef       	ldi	r22, 0xFF	; 255
    10c0:	7f ef       	ldi	r23, 0xFF	; 255
    10c2:	8f ef       	ldi	r24, 0xFF	; 255
    10c4:	9f ef       	ldi	r25, 0xFF	; 255
    10c6:	13 c0       	rjmp	.+38     	; 0x10ee <create_chain+0x1e6>
    10c8:	61 e0       	ldi	r22, 0x01	; 1
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e c0       	rjmp	.+28     	; 0x10ee <create_chain+0x1e6>
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	80 e0       	ldi	r24, 0x00	; 0
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	09 c0       	rjmp	.+18     	; 0x10ee <create_chain+0x1e6>
    10dc:	6c 2d       	mov	r22, r12
    10de:	7d 2d       	mov	r23, r13
    10e0:	8e 2d       	mov	r24, r14
    10e2:	9f 2d       	mov	r25, r15
    10e4:	04 c0       	rjmp	.+8      	; 0x10ee <create_chain+0x1e6>
    10e6:	6f ef       	ldi	r22, 0xFF	; 255
    10e8:	7f ef       	ldi	r23, 0xFF	; 255
    10ea:	8f ef       	ldi	r24, 0xFF	; 255
    10ec:	9f ef       	ldi	r25, 0xFF	; 255
    10ee:	df 91       	pop	r29
    10f0:	cf 91       	pop	r28
    10f2:	1f 91       	pop	r17
    10f4:	0f 91       	pop	r16
    10f6:	ff 90       	pop	r15
    10f8:	ef 90       	pop	r14
    10fa:	df 90       	pop	r13
    10fc:	cf 90       	pop	r12
    10fe:	bf 90       	pop	r11
    1100:	af 90       	pop	r10
    1102:	9f 90       	pop	r9
    1104:	8f 90       	pop	r8
    1106:	7f 90       	pop	r7
    1108:	6f 90       	pop	r6
    110a:	5f 90       	pop	r5
    110c:	4f 90       	pop	r4
    110e:	3f 90       	pop	r3
    1110:	2f 90       	pop	r2
    1112:	08 95       	ret

00001114 <dir_next>:
    1114:	8f 92       	push	r8
    1116:	9f 92       	push	r9
    1118:	af 92       	push	r10
    111a:	bf 92       	push	r11
    111c:	cf 92       	push	r12
    111e:	df 92       	push	r13
    1120:	ef 92       	push	r14
    1122:	ff 92       	push	r15
    1124:	0f 93       	push	r16
    1126:	1f 93       	push	r17
    1128:	cf 93       	push	r28
    112a:	df 93       	push	r29
    112c:	dc 01       	movw	r26, r24
    112e:	14 96       	adiw	r26, 0x04	; 4
    1130:	cd 91       	ld	r28, X+
    1132:	dc 91       	ld	r29, X
    1134:	15 97       	sbiw	r26, 0x05	; 5
    1136:	21 96       	adiw	r28, 0x01	; 1
    1138:	09 f4       	brne	.+2      	; 0x113c <dir_next+0x28>
    113a:	02 c1       	rjmp	.+516    	; 0x1340 <dir_next+0x22c>
    113c:	1e 96       	adiw	r26, 0x0e	; 14
    113e:	8d 90       	ld	r8, X+
    1140:	9d 90       	ld	r9, X+
    1142:	ad 90       	ld	r10, X+
    1144:	bc 90       	ld	r11, X
    1146:	51 97       	sbiw	r26, 0x11	; 17
    1148:	81 14       	cp	r8, r1
    114a:	91 04       	cpc	r9, r1
    114c:	a1 04       	cpc	r10, r1
    114e:	b1 04       	cpc	r11, r1
    1150:	09 f4       	brne	.+2      	; 0x1154 <dir_next+0x40>
    1152:	f8 c0       	rjmp	.+496    	; 0x1344 <dir_next+0x230>
    1154:	7b 01       	movw	r14, r22
    1156:	8c 01       	movw	r16, r24
    1158:	6e 01       	movw	r12, r28
    115a:	bf e0       	ldi	r27, 0x0F	; 15
    115c:	cb 22       	and	r12, r27
    115e:	dd 24       	eor	r13, r13
    1160:	c1 14       	cp	r12, r1
    1162:	d1 04       	cpc	r13, r1
    1164:	09 f0       	breq	.+2      	; 0x1168 <dir_next+0x54>
    1166:	d0 c0       	rjmp	.+416    	; 0x1308 <dir_next+0x1f4>
    1168:	ef ef       	ldi	r30, 0xFF	; 255
    116a:	8e 1a       	sub	r8, r30
    116c:	9e 0a       	sbc	r9, r30
    116e:	ae 0a       	sbc	r10, r30
    1170:	be 0a       	sbc	r11, r30
    1172:	dc 01       	movw	r26, r24
    1174:	1e 96       	adiw	r26, 0x0e	; 14
    1176:	8d 92       	st	X+, r8
    1178:	9d 92       	st	X+, r9
    117a:	ad 92       	st	X+, r10
    117c:	bc 92       	st	X, r11
    117e:	51 97       	sbiw	r26, 0x11	; 17
    1180:	1a 96       	adiw	r26, 0x0a	; 10
    1182:	4d 91       	ld	r20, X+
    1184:	5d 91       	ld	r21, X+
    1186:	6d 91       	ld	r22, X+
    1188:	7c 91       	ld	r23, X
    118a:	1d 97       	sbiw	r26, 0x0d	; 13
    118c:	41 15       	cp	r20, r1
    118e:	51 05       	cpc	r21, r1
    1190:	61 05       	cpc	r22, r1
    1192:	71 05       	cpc	r23, r1
    1194:	49 f4       	brne	.+18     	; 0x11a8 <dir_next+0x94>
    1196:	ed 91       	ld	r30, X+
    1198:	fc 91       	ld	r31, X
    119a:	80 85       	ldd	r24, Z+8	; 0x08
    119c:	91 85       	ldd	r25, Z+9	; 0x09
    119e:	c8 17       	cp	r28, r24
    11a0:	d9 07       	cpc	r29, r25
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <dir_next+0x92>
    11a4:	d1 c0       	rjmp	.+418    	; 0x1348 <dir_next+0x234>
    11a6:	b0 c0       	rjmp	.+352    	; 0x1308 <dir_next+0x1f4>
    11a8:	dc 01       	movw	r26, r24
    11aa:	ed 91       	ld	r30, X+
    11ac:	fc 91       	ld	r31, X
    11ae:	22 81       	ldd	r18, Z+2	; 0x02
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	21 50       	subi	r18, 0x01	; 1
    11b4:	31 09       	sbc	r19, r1
    11b6:	ce 01       	movw	r24, r28
    11b8:	92 95       	swap	r25
    11ba:	82 95       	swap	r24
    11bc:	8f 70       	andi	r24, 0x0F	; 15
    11be:	89 27       	eor	r24, r25
    11c0:	9f 70       	andi	r25, 0x0F	; 15
    11c2:	89 27       	eor	r24, r25
    11c4:	28 23       	and	r18, r24
    11c6:	39 23       	and	r19, r25
    11c8:	23 2b       	or	r18, r19
    11ca:	09 f0       	breq	.+2      	; 0x11ce <dir_next+0xba>
    11cc:	9d c0       	rjmp	.+314    	; 0x1308 <dir_next+0x1f4>
    11ce:	cf 01       	movw	r24, r30
    11d0:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
    11d4:	4b 01       	movw	r8, r22
    11d6:	5c 01       	movw	r10, r24
    11d8:	62 30       	cpi	r22, 0x02	; 2
    11da:	71 05       	cpc	r23, r1
    11dc:	81 05       	cpc	r24, r1
    11de:	91 05       	cpc	r25, r1
    11e0:	08 f4       	brcc	.+2      	; 0x11e4 <dir_next+0xd0>
    11e2:	b4 c0       	rjmp	.+360    	; 0x134c <dir_next+0x238>
    11e4:	6f 3f       	cpi	r22, 0xFF	; 255
    11e6:	7f 4f       	sbci	r23, 0xFF	; 255
    11e8:	8f 4f       	sbci	r24, 0xFF	; 255
    11ea:	9f 4f       	sbci	r25, 0xFF	; 255
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <dir_next+0xdc>
    11ee:	b0 c0       	rjmp	.+352    	; 0x1350 <dir_next+0x23c>
    11f0:	d8 01       	movw	r26, r16
    11f2:	ed 91       	ld	r30, X+
    11f4:	fc 91       	ld	r31, X
    11f6:	82 8d       	ldd	r24, Z+26	; 0x1a
    11f8:	93 8d       	ldd	r25, Z+27	; 0x1b
    11fa:	a4 8d       	ldd	r26, Z+28	; 0x1c
    11fc:	b5 8d       	ldd	r27, Z+29	; 0x1d
    11fe:	88 16       	cp	r8, r24
    1200:	99 06       	cpc	r9, r25
    1202:	aa 06       	cpc	r10, r26
    1204:	bb 06       	cpc	r11, r27
    1206:	08 f4       	brcc	.+2      	; 0x120a <dir_next+0xf6>
    1208:	6d c0       	rjmp	.+218    	; 0x12e4 <dir_next+0x1d0>
    120a:	ef 28       	or	r14, r15
    120c:	09 f4       	brne	.+2      	; 0x1210 <dir_next+0xfc>
    120e:	a2 c0       	rjmp	.+324    	; 0x1354 <dir_next+0x240>
    1210:	d8 01       	movw	r26, r16
    1212:	1a 96       	adiw	r26, 0x0a	; 10
    1214:	4d 91       	ld	r20, X+
    1216:	5d 91       	ld	r21, X+
    1218:	6d 91       	ld	r22, X+
    121a:	7c 91       	ld	r23, X
    121c:	1d 97       	sbiw	r26, 0x0d	; 13
    121e:	cf 01       	movw	r24, r30
    1220:	0e 94 84 07 	call	0xf08	; 0xf08 <create_chain>
    1224:	4b 01       	movw	r8, r22
    1226:	5c 01       	movw	r10, r24
    1228:	61 15       	cp	r22, r1
    122a:	71 05       	cpc	r23, r1
    122c:	81 05       	cpc	r24, r1
    122e:	91 05       	cpc	r25, r1
    1230:	09 f4       	brne	.+2      	; 0x1234 <dir_next+0x120>
    1232:	92 c0       	rjmp	.+292    	; 0x1358 <dir_next+0x244>
    1234:	61 30       	cpi	r22, 0x01	; 1
    1236:	71 05       	cpc	r23, r1
    1238:	81 05       	cpc	r24, r1
    123a:	91 05       	cpc	r25, r1
    123c:	09 f4       	brne	.+2      	; 0x1240 <dir_next+0x12c>
    123e:	8e c0       	rjmp	.+284    	; 0x135c <dir_next+0x248>
    1240:	6f 3f       	cpi	r22, 0xFF	; 255
    1242:	7f 4f       	sbci	r23, 0xFF	; 255
    1244:	8f 4f       	sbci	r24, 0xFF	; 255
    1246:	9f 4f       	sbci	r25, 0xFF	; 255
    1248:	09 f4       	brne	.+2      	; 0x124c <dir_next+0x138>
    124a:	8a c0       	rjmp	.+276    	; 0x1360 <dir_next+0x24c>
    124c:	d8 01       	movw	r26, r16
    124e:	8d 91       	ld	r24, X+
    1250:	9c 91       	ld	r25, X
    1252:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <sync_window>
    1256:	81 11       	cpse	r24, r1
    1258:	85 c0       	rjmp	.+266    	; 0x1364 <dir_next+0x250>
    125a:	f8 01       	movw	r30, r16
    125c:	80 81       	ld	r24, Z
    125e:	91 81       	ldd	r25, Z+1	; 0x01
    1260:	fc 01       	movw	r30, r24
    1262:	f6 96       	adiw	r30, 0x36	; 54
    1264:	8a 5c       	subi	r24, 0xCA	; 202
    1266:	9d 4f       	sbci	r25, 0xFD	; 253
    1268:	11 92       	st	Z+, r1
    126a:	e8 17       	cp	r30, r24
    126c:	f9 07       	cpc	r31, r25
    126e:	e1 f7       	brne	.-8      	; 0x1268 <dir_next+0x154>
    1270:	d8 01       	movw	r26, r16
    1272:	ed 90       	ld	r14, X+
    1274:	fc 90       	ld	r15, X
    1276:	b5 01       	movw	r22, r10
    1278:	a4 01       	movw	r20, r8
    127a:	c7 01       	movw	r24, r14
    127c:	0e 94 9c 04 	call	0x938	; 0x938 <clust2sect>
    1280:	f7 01       	movw	r30, r14
    1282:	62 ab       	std	Z+50, r22	; 0x32
    1284:	73 ab       	std	Z+51, r23	; 0x33
    1286:	84 ab       	std	Z+52, r24	; 0x34
    1288:	95 ab       	std	Z+53, r25	; 0x35
    128a:	f1 2c       	mov	r15, r1
    128c:	ee 24       	eor	r14, r14
    128e:	e3 94       	inc	r14
    1290:	17 c0       	rjmp	.+46     	; 0x12c0 <dir_next+0x1ac>
    1292:	e4 82       	std	Z+4, r14	; 0x04
    1294:	d8 01       	movw	r26, r16
    1296:	8d 91       	ld	r24, X+
    1298:	9c 91       	ld	r25, X
    129a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <sync_window>
    129e:	81 11       	cpse	r24, r1
    12a0:	63 c0       	rjmp	.+198    	; 0x1368 <dir_next+0x254>
    12a2:	d8 01       	movw	r26, r16
    12a4:	ed 91       	ld	r30, X+
    12a6:	fc 91       	ld	r31, X
    12a8:	82 a9       	ldd	r24, Z+50	; 0x32
    12aa:	93 a9       	ldd	r25, Z+51	; 0x33
    12ac:	a4 a9       	ldd	r26, Z+52	; 0x34
    12ae:	b5 a9       	ldd	r27, Z+53	; 0x35
    12b0:	01 96       	adiw	r24, 0x01	; 1
    12b2:	a1 1d       	adc	r26, r1
    12b4:	b1 1d       	adc	r27, r1
    12b6:	82 ab       	std	Z+50, r24	; 0x32
    12b8:	93 ab       	std	Z+51, r25	; 0x33
    12ba:	a4 ab       	std	Z+52, r26	; 0x34
    12bc:	b5 ab       	std	Z+53, r27	; 0x35
    12be:	f3 94       	inc	r15
    12c0:	d8 01       	movw	r26, r16
    12c2:	ed 91       	ld	r30, X+
    12c4:	fc 91       	ld	r31, X
    12c6:	82 81       	ldd	r24, Z+2	; 0x02
    12c8:	f8 16       	cp	r15, r24
    12ca:	18 f3       	brcs	.-58     	; 0x1292 <dir_next+0x17e>
    12cc:	82 a9       	ldd	r24, Z+50	; 0x32
    12ce:	93 a9       	ldd	r25, Z+51	; 0x33
    12d0:	a4 a9       	ldd	r26, Z+52	; 0x34
    12d2:	b5 a9       	ldd	r27, Z+53	; 0x35
    12d4:	8f 19       	sub	r24, r15
    12d6:	91 09       	sbc	r25, r1
    12d8:	a1 09       	sbc	r26, r1
    12da:	b1 09       	sbc	r27, r1
    12dc:	82 ab       	std	Z+50, r24	; 0x32
    12de:	93 ab       	std	Z+51, r25	; 0x33
    12e0:	a4 ab       	std	Z+52, r26	; 0x34
    12e2:	b5 ab       	std	Z+53, r27	; 0x35
    12e4:	f8 01       	movw	r30, r16
    12e6:	82 86       	std	Z+10, r8	; 0x0a
    12e8:	93 86       	std	Z+11, r9	; 0x0b
    12ea:	a4 86       	std	Z+12, r10	; 0x0c
    12ec:	b5 86       	std	Z+13, r11	; 0x0d
    12ee:	b5 01       	movw	r22, r10
    12f0:	a4 01       	movw	r20, r8
    12f2:	80 81       	ld	r24, Z
    12f4:	91 81       	ldd	r25, Z+1	; 0x01
    12f6:	0e 94 9c 04 	call	0x938	; 0x938 <clust2sect>
    12fa:	d8 01       	movw	r26, r16
    12fc:	1e 96       	adiw	r26, 0x0e	; 14
    12fe:	6d 93       	st	X+, r22
    1300:	7d 93       	st	X+, r23
    1302:	8d 93       	st	X+, r24
    1304:	9c 93       	st	X, r25
    1306:	51 97       	sbiw	r26, 0x11	; 17
    1308:	f8 01       	movw	r30, r16
    130a:	d5 83       	std	Z+5, r29	; 0x05
    130c:	c4 83       	std	Z+4, r28	; 0x04
    130e:	cc 0c       	add	r12, r12
    1310:	dd 1c       	adc	r13, r13
    1312:	cc 0c       	add	r12, r12
    1314:	dd 1c       	adc	r13, r13
    1316:	cc 0c       	add	r12, r12
    1318:	dd 1c       	adc	r13, r13
    131a:	cc 0c       	add	r12, r12
    131c:	dd 1c       	adc	r13, r13
    131e:	cc 0c       	add	r12, r12
    1320:	dd 1c       	adc	r13, r13
    1322:	f6 e3       	ldi	r31, 0x36	; 54
    1324:	cf 0e       	add	r12, r31
    1326:	d1 1c       	adc	r13, r1
    1328:	d8 01       	movw	r26, r16
    132a:	8d 91       	ld	r24, X+
    132c:	9c 91       	ld	r25, X
    132e:	11 97       	sbiw	r26, 0x01	; 1
    1330:	c8 0e       	add	r12, r24
    1332:	d9 1e       	adc	r13, r25
    1334:	53 96       	adiw	r26, 0x13	; 19
    1336:	dc 92       	st	X, r13
    1338:	ce 92       	st	-X, r12
    133a:	52 97       	sbiw	r26, 0x12	; 18
    133c:	80 e0       	ldi	r24, 0x00	; 0
    133e:	15 c0       	rjmp	.+42     	; 0x136a <dir_next+0x256>
    1340:	84 e0       	ldi	r24, 0x04	; 4
    1342:	13 c0       	rjmp	.+38     	; 0x136a <dir_next+0x256>
    1344:	84 e0       	ldi	r24, 0x04	; 4
    1346:	11 c0       	rjmp	.+34     	; 0x136a <dir_next+0x256>
    1348:	84 e0       	ldi	r24, 0x04	; 4
    134a:	0f c0       	rjmp	.+30     	; 0x136a <dir_next+0x256>
    134c:	82 e0       	ldi	r24, 0x02	; 2
    134e:	0d c0       	rjmp	.+26     	; 0x136a <dir_next+0x256>
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	0b c0       	rjmp	.+22     	; 0x136a <dir_next+0x256>
    1354:	84 e0       	ldi	r24, 0x04	; 4
    1356:	09 c0       	rjmp	.+18     	; 0x136a <dir_next+0x256>
    1358:	87 e0       	ldi	r24, 0x07	; 7
    135a:	07 c0       	rjmp	.+14     	; 0x136a <dir_next+0x256>
    135c:	82 e0       	ldi	r24, 0x02	; 2
    135e:	05 c0       	rjmp	.+10     	; 0x136a <dir_next+0x256>
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	03 c0       	rjmp	.+6      	; 0x136a <dir_next+0x256>
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	01 c0       	rjmp	.+2      	; 0x136a <dir_next+0x256>
    1368:	81 e0       	ldi	r24, 0x01	; 1
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	0f 91       	pop	r16
    1372:	ff 90       	pop	r15
    1374:	ef 90       	pop	r14
    1376:	df 90       	pop	r13
    1378:	cf 90       	pop	r12
    137a:	bf 90       	pop	r11
    137c:	af 90       	pop	r10
    137e:	9f 90       	pop	r9
    1380:	8f 90       	pop	r8
    1382:	08 95       	ret

00001384 <follow_path>:
    1384:	2f 92       	push	r2
    1386:	3f 92       	push	r3
    1388:	4f 92       	push	r4
    138a:	5f 92       	push	r5
    138c:	6f 92       	push	r6
    138e:	7f 92       	push	r7
    1390:	8f 92       	push	r8
    1392:	9f 92       	push	r9
    1394:	af 92       	push	r10
    1396:	bf 92       	push	r11
    1398:	cf 92       	push	r12
    139a:	df 92       	push	r13
    139c:	ef 92       	push	r14
    139e:	ff 92       	push	r15
    13a0:	0f 93       	push	r16
    13a2:	1f 93       	push	r17
    13a4:	cf 93       	push	r28
    13a6:	df 93       	push	r29
    13a8:	00 d0       	rcall	.+0      	; 0x13aa <follow_path+0x26>
    13aa:	00 d0       	rcall	.+0      	; 0x13ac <follow_path+0x28>
    13ac:	cd b7       	in	r28, 0x3d	; 61
    13ae:	de b7       	in	r29, 0x3e	; 62
    13b0:	8c 01       	movw	r16, r24
    13b2:	6b 01       	movw	r12, r22
    13b4:	db 01       	movw	r26, r22
    13b6:	8c 91       	ld	r24, X
    13b8:	8f 32       	cpi	r24, 0x2F	; 47
    13ba:	11 f0       	breq	.+4      	; 0x13c0 <follow_path+0x3c>
    13bc:	8c 35       	cpi	r24, 0x5C	; 92
    13be:	49 f4       	brne	.+18     	; 0x13d2 <follow_path+0x4e>
    13c0:	bf ef       	ldi	r27, 0xFF	; 255
    13c2:	cb 1a       	sub	r12, r27
    13c4:	db 0a       	sbc	r13, r27
    13c6:	f8 01       	movw	r30, r16
    13c8:	16 82       	std	Z+6, r1	; 0x06
    13ca:	17 82       	std	Z+7, r1	; 0x07
    13cc:	10 86       	std	Z+8, r1	; 0x08
    13ce:	11 86       	std	Z+9, r1	; 0x09
    13d0:	0c c0       	rjmp	.+24     	; 0x13ea <follow_path+0x66>
    13d2:	d8 01       	movw	r26, r16
    13d4:	ed 91       	ld	r30, X+
    13d6:	fc 91       	ld	r31, X
    13d8:	86 89       	ldd	r24, Z+22	; 0x16
    13da:	97 89       	ldd	r25, Z+23	; 0x17
    13dc:	a0 8d       	ldd	r26, Z+24	; 0x18
    13de:	b1 8d       	ldd	r27, Z+25	; 0x19
    13e0:	f8 01       	movw	r30, r16
    13e2:	86 83       	std	Z+6, r24	; 0x06
    13e4:	97 83       	std	Z+7, r25	; 0x07
    13e6:	a0 87       	std	Z+8, r26	; 0x08
    13e8:	b1 87       	std	Z+9, r27	; 0x09
    13ea:	d6 01       	movw	r26, r12
    13ec:	8c 91       	ld	r24, X
    13ee:	80 32       	cpi	r24, 0x20	; 32
    13f0:	48 f4       	brcc	.+18     	; 0x1404 <follow_path+0x80>
    13f2:	60 e0       	ldi	r22, 0x00	; 0
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	c8 01       	movw	r24, r16
    13f8:	0e 94 ad 05 	call	0xb5a	; 0xb5a <dir_sdi>
    13fc:	f8 01       	movw	r30, r16
    13fe:	13 8a       	std	Z+19, r1	; 0x13
    1400:	12 8a       	std	Z+18, r1	; 0x12
    1402:	5d c1       	rjmp	.+698    	; 0x16be <follow_path+0x33a>
    1404:	68 94       	set
    1406:	bb 24       	eor	r11, r11
    1408:	b5 f8       	bld	r11, 5
    140a:	0f 2e       	mov	r0, r31
    140c:	fe e2       	ldi	r31, 0x2E	; 46
    140e:	8f 2e       	mov	r8, r31
    1410:	f0 2d       	mov	r31, r0
    1412:	21 2c       	mov	r2, r1
    1414:	a1 2c       	mov	r10, r1
    1416:	91 2c       	mov	r9, r1
    1418:	68 94       	set
    141a:	77 24       	eor	r7, r7
    141c:	73 f8       	bld	r7, 3
    141e:	41 2c       	mov	r4, r1
    1420:	31 2c       	mov	r3, r1
    1422:	79 82       	std	Y+1, r7	; 0x01
    1424:	4a 82       	std	Y+2, r4	; 0x02
    1426:	1c 83       	std	Y+4, r17	; 0x04
    1428:	0b 83       	std	Y+3, r16	; 0x03
    142a:	57 2c       	mov	r5, r7
    142c:	d6 01       	movw	r26, r12
    142e:	2b 81       	ldd	r18, Y+3	; 0x03
    1430:	3c 81       	ldd	r19, Y+4	; 0x04
    1432:	fd 01       	movw	r30, r26
    1434:	8d 91       	ld	r24, X+
    1436:	8f 32       	cpi	r24, 0x2F	; 47
    1438:	e1 f3       	breq	.-8      	; 0x1432 <follow_path+0xae>
    143a:	8c 35       	cpi	r24, 0x5C	; 92
    143c:	d1 f3       	breq	.-12     	; 0x1432 <follow_path+0xae>
    143e:	3c 83       	std	Y+4, r19	; 0x04
    1440:	2b 83       	std	Y+3, r18	; 0x03
    1442:	d9 01       	movw	r26, r18
    1444:	54 96       	adiw	r26, 0x14	; 20
    1446:	6d 91       	ld	r22, X+
    1448:	7c 91       	ld	r23, X
    144a:	55 97       	sbiw	r26, 0x15	; 21
    144c:	db 01       	movw	r26, r22
    144e:	cb 01       	movw	r24, r22
    1450:	0b 96       	adiw	r24, 0x0b	; 11
    1452:	bd 92       	st	X+, r11
    1454:	a8 17       	cp	r26, r24
    1456:	b9 07       	cpc	r27, r25
    1458:	e1 f7       	brne	.-8      	; 0x1452 <follow_path+0xce>
    145a:	3c 83       	std	Y+4, r19	; 0x04
    145c:	2b 83       	std	Y+3, r18	; 0x03
    145e:	80 81       	ld	r24, Z
    1460:	8e 32       	cpi	r24, 0x2E	; 46
    1462:	51 f0       	breq	.+20     	; 0x1478 <follow_path+0xf4>
    1464:	6f 01       	movw	r12, r30
    1466:	ea 2c       	mov	r14, r10
    1468:	f9 2c       	mov	r15, r9
    146a:	2a 2d       	mov	r18, r10
    146c:	39 2d       	mov	r19, r9
    146e:	65 2c       	mov	r6, r5
    1470:	74 2c       	mov	r7, r4
    1472:	03 2d       	mov	r16, r3
    1474:	df 01       	movw	r26, r30
    1476:	1d c0       	rjmp	.+58     	; 0x14b2 <follow_path+0x12e>
    1478:	db 01       	movw	r26, r22
    147a:	8c 92       	st	X, r8
    147c:	81 81       	ldd	r24, Z+1	; 0x01
    147e:	8e 32       	cpi	r24, 0x2E	; 46
    1480:	49 f4       	brne	.+18     	; 0x1494 <follow_path+0x110>
    1482:	11 96       	adiw	r26, 0x01	; 1
    1484:	8c 92       	st	X, r8
    1486:	82 81       	ldd	r24, Z+2	; 0x02
    1488:	8e 32       	cpi	r24, 0x2E	; 46
    148a:	09 f4       	brne	.+2      	; 0x148e <follow_path+0x10a>
    148c:	6f c0       	rjmp	.+222    	; 0x156c <follow_path+0x1e8>
    148e:	23 e0       	ldi	r18, 0x03	; 3
    1490:	32 2d       	mov	r19, r2
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <follow_path+0x114>
    1494:	22 e0       	ldi	r18, 0x02	; 2
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	8f 32       	cpi	r24, 0x2F	; 47
    149a:	09 f4       	brne	.+2      	; 0x149e <follow_path+0x11a>
    149c:	cf c0       	rjmp	.+414    	; 0x163c <follow_path+0x2b8>
    149e:	8c 35       	cpi	r24, 0x5C	; 92
    14a0:	09 f4       	brne	.+2      	; 0x14a4 <follow_path+0x120>
    14a2:	cc c0       	rjmp	.+408    	; 0x163c <follow_path+0x2b8>
    14a4:	81 32       	cpi	r24, 0x21	; 33
    14a6:	08 f0       	brcs	.+2      	; 0x14aa <follow_path+0x126>
    14a8:	e2 c0       	rjmp	.+452    	; 0x166e <follow_path+0x2ea>
    14aa:	c3 c0       	rjmp	.+390    	; 0x1632 <follow_path+0x2ae>
    14ac:	fb 01       	movw	r30, r22
    14ae:	83 87       	std	Z+11, r24	; 0x0b
    14b0:	e0 c0       	rjmp	.+448    	; 0x1672 <follow_path+0x2ee>
    14b2:	2f 5f       	subi	r18, 0xFF	; 255
    14b4:	3f 4f       	sbci	r19, 0xFF	; 255
    14b6:	1d 91       	ld	r17, X+
    14b8:	11 32       	cpi	r17, 0x21	; 33
    14ba:	08 f4       	brcc	.+2      	; 0x14be <follow_path+0x13a>
    14bc:	d0 c0       	rjmp	.+416    	; 0x165e <follow_path+0x2da>
    14be:	1f 32       	cpi	r17, 0x2F	; 47
    14c0:	09 f4       	brne	.+2      	; 0x14c4 <follow_path+0x140>
    14c2:	d1 c0       	rjmp	.+418    	; 0x1666 <follow_path+0x2e2>
    14c4:	1c 35       	cpi	r17, 0x5C	; 92
    14c6:	09 f4       	brne	.+2      	; 0x14ca <follow_path+0x146>
    14c8:	ce c0       	rjmp	.+412    	; 0x1666 <follow_path+0x2e2>
    14ca:	1e 32       	cpi	r17, 0x2E	; 46
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <follow_path+0x14c>
    14ce:	bb c0       	rjmp	.+374    	; 0x1646 <follow_path+0x2c2>
    14d0:	e6 14       	cp	r14, r6
    14d2:	f7 04       	cpc	r15, r7
    14d4:	08 f0       	brcs	.+2      	; 0x14d8 <follow_path+0x154>
    14d6:	cb c0       	rjmp	.+406    	; 0x166e <follow_path+0x2ea>
    14d8:	0a c0       	rjmp	.+20     	; 0x14ee <follow_path+0x16a>
    14da:	00 0f       	add	r16, r16
    14dc:	00 0f       	add	r16, r16
    14de:	e9 80       	ldd	r14, Y+1	; 0x01
    14e0:	fa 80       	ldd	r15, Y+2	; 0x02
    14e2:	0f 2e       	mov	r0, r31
    14e4:	fb e0       	ldi	r31, 0x0B	; 11
    14e6:	6f 2e       	mov	r6, r31
    14e8:	f0 2d       	mov	r31, r0
    14ea:	71 2c       	mov	r7, r1
    14ec:	e2 cf       	rjmp	.-60     	; 0x14b2 <follow_path+0x12e>
    14ee:	11 23       	and	r17, r17
    14f0:	0c f4       	brge	.+2      	; 0x14f4 <follow_path+0x170>
    14f2:	bd c0       	rjmp	.+378    	; 0x166e <follow_path+0x2ea>
    14f4:	41 2f       	mov	r20, r17
    14f6:	50 e0       	ldi	r21, 0x00	; 0
    14f8:	42 32       	cpi	r20, 0x22	; 34
    14fa:	51 05       	cpc	r21, r1
    14fc:	b9 f1       	breq	.+110    	; 0x156c <follow_path+0x1e8>
    14fe:	e2 e6       	ldi	r30, 0x62	; 98
    1500:	f0 e0       	ldi	r31, 0x00	; 0
    1502:	81 91       	ld	r24, Z+
    1504:	88 23       	and	r24, r24
    1506:	09 f4       	brne	.+2      	; 0x150a <follow_path+0x186>
    1508:	a4 c0       	rjmp	.+328    	; 0x1652 <follow_path+0x2ce>
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	48 17       	cp	r20, r24
    150e:	59 07       	cpc	r21, r25
    1510:	c1 f7       	brne	.-16     	; 0x1502 <follow_path+0x17e>
    1512:	2c c0       	rjmp	.+88     	; 0x156c <follow_path+0x1e8>
    1514:	02 60       	ori	r16, 0x02	; 2
    1516:	06 c0       	rjmp	.+12     	; 0x1524 <follow_path+0x1a0>
    1518:	8f e9       	ldi	r24, 0x9F	; 159
    151a:	81 0f       	add	r24, r17
    151c:	8a 31       	cpi	r24, 0x1A	; 26
    151e:	10 f4       	brcc	.+4      	; 0x1524 <follow_path+0x1a0>
    1520:	01 60       	ori	r16, 0x01	; 1
    1522:	10 52       	subi	r17, 0x20	; 32
    1524:	fb 01       	movw	r30, r22
    1526:	ee 0d       	add	r30, r14
    1528:	ff 1d       	adc	r31, r15
    152a:	10 83       	st	Z, r17
    152c:	f7 01       	movw	r30, r14
    152e:	31 96       	adiw	r30, 0x01	; 1
    1530:	7f 01       	movw	r14, r30
    1532:	bf cf       	rjmp	.-130    	; 0x14b2 <follow_path+0x12e>
    1534:	ef 28       	or	r14, r15
    1536:	09 f4       	brne	.+2      	; 0x153a <follow_path+0x1b6>
    1538:	9a c0       	rjmp	.+308    	; 0x166e <follow_path+0x2ea>
    153a:	db 01       	movw	r26, r22
    153c:	9c 91       	ld	r25, X
    153e:	95 3e       	cpi	r25, 0xE5	; 229
    1540:	11 f4       	brne	.+4      	; 0x1546 <follow_path+0x1c2>
    1542:	95 e0       	ldi	r25, 0x05	; 5
    1544:	9c 93       	st	X, r25
    1546:	b8 e0       	ldi	r27, 0x08	; 8
    1548:	6b 16       	cp	r6, r27
    154a:	71 04       	cpc	r7, r1
    154c:	11 f4       	brne	.+4      	; 0x1552 <follow_path+0x1ce>
    154e:	00 0f       	add	r16, r16
    1550:	00 0f       	add	r16, r16
    1552:	90 2f       	mov	r25, r16
    1554:	93 70       	andi	r25, 0x03	; 3
    1556:	91 30       	cpi	r25, 0x01	; 1
    1558:	09 f4       	brne	.+2      	; 0x155c <follow_path+0x1d8>
    155a:	80 61       	ori	r24, 0x10	; 16
    155c:	90 2f       	mov	r25, r16
    155e:	9c 70       	andi	r25, 0x0C	; 12
    1560:	94 30       	cpi	r25, 0x04	; 4
    1562:	09 f4       	brne	.+2      	; 0x1566 <follow_path+0x1e2>
    1564:	88 60       	ori	r24, 0x08	; 8
    1566:	fb 01       	movw	r30, r22
    1568:	83 87       	std	Z+11, r24	; 0x0b
    156a:	83 c0       	rjmp	.+262    	; 0x1672 <follow_path+0x2ee>
    156c:	86 e0       	ldi	r24, 0x06	; 6
    156e:	a7 c0       	rjmp	.+334    	; 0x16be <follow_path+0x33a>
    1570:	0b 81       	ldd	r16, Y+3	; 0x03
    1572:	1c 81       	ldd	r17, Y+4	; 0x04
    1574:	d8 01       	movw	r26, r16
    1576:	1e 96       	adiw	r26, 0x0e	; 14
    1578:	4d 91       	ld	r20, X+
    157a:	5d 91       	ld	r21, X+
    157c:	6d 91       	ld	r22, X+
    157e:	7c 91       	ld	r23, X
    1580:	51 97       	sbiw	r26, 0x11	; 17
    1582:	8d 91       	ld	r24, X+
    1584:	9c 91       	ld	r25, X
    1586:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    158a:	81 11       	cpse	r24, r1
    158c:	84 c0       	rjmp	.+264    	; 0x1696 <follow_path+0x312>
    158e:	f8 01       	movw	r30, r16
    1590:	62 89       	ldd	r22, Z+18	; 0x12
    1592:	73 89       	ldd	r23, Z+19	; 0x13
    1594:	db 01       	movw	r26, r22
    1596:	9c 91       	ld	r25, X
    1598:	99 23       	and	r25, r25
    159a:	09 f4       	brne	.+2      	; 0x159e <follow_path+0x21a>
    159c:	89 c0       	rjmp	.+274    	; 0x16b0 <follow_path+0x32c>
    159e:	1b 96       	adiw	r26, 0x0b	; 11
    15a0:	9c 91       	ld	r25, X
    15a2:	93 fd       	sbrc	r25, 3
    15a4:	12 c0       	rjmp	.+36     	; 0x15ca <follow_path+0x246>
    15a6:	44 89       	ldd	r20, Z+20	; 0x14
    15a8:	55 89       	ldd	r21, Z+21	; 0x15
    15aa:	fb 01       	movw	r30, r22
    15ac:	da 01       	movw	r26, r20
    15ae:	9b 01       	movw	r18, r22
    15b0:	25 5f       	subi	r18, 0xF5	; 245
    15b2:	3f 4f       	sbci	r19, 0xFF	; 255
    15b4:	78 01       	movw	r14, r16
    15b6:	04 c0       	rjmp	.+8      	; 0x15c0 <follow_path+0x23c>
    15b8:	e2 17       	cp	r30, r18
    15ba:	f3 07       	cpc	r31, r19
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <follow_path+0x23c>
    15be:	63 c0       	rjmp	.+198    	; 0x1686 <follow_path+0x302>
    15c0:	11 91       	ld	r17, Z+
    15c2:	9d 91       	ld	r25, X+
    15c4:	19 17       	cp	r17, r25
    15c6:	c1 f3       	breq	.-16     	; 0x15b8 <follow_path+0x234>
    15c8:	87 01       	movw	r16, r14
    15ca:	6a 2d       	mov	r22, r10
    15cc:	79 2d       	mov	r23, r9
    15ce:	c8 01       	movw	r24, r16
    15d0:	0e 94 8a 08 	call	0x1114	; 0x1114 <dir_next>
    15d4:	88 23       	and	r24, r24
    15d6:	71 f2       	breq	.-100    	; 0x1574 <follow_path+0x1f0>
    15d8:	1c 83       	std	Y+4, r17	; 0x04
    15da:	0b 83       	std	Y+3, r16	; 0x03
    15dc:	5e c0       	rjmp	.+188    	; 0x169a <follow_path+0x316>
    15de:	95 ff       	sbrs	r25, 5
    15e0:	0c c0       	rjmp	.+24     	; 0x15fa <follow_path+0x276>
    15e2:	eb 81       	ldd	r30, Y+3	; 0x03
    15e4:	fc 81       	ldd	r31, Y+4	; 0x04
    15e6:	16 82       	std	Z+6, r1	; 0x06
    15e8:	17 82       	std	Z+7, r1	; 0x07
    15ea:	10 86       	std	Z+8, r1	; 0x08
    15ec:	11 86       	std	Z+9, r1	; 0x09
    15ee:	13 8a       	std	Z+19, r1	; 0x13
    15f0:	12 8a       	std	Z+18, r1	; 0x12
    15f2:	92 ff       	sbrs	r25, 2
    15f4:	1b cf       	rjmp	.-458    	; 0x142c <follow_path+0xa8>
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	62 c0       	rjmp	.+196    	; 0x16be <follow_path+0x33a>
    15fa:	92 fd       	sbrc	r25, 2
    15fc:	16 c0       	rjmp	.+44     	; 0x162a <follow_path+0x2a6>
    15fe:	85 e0       	ldi	r24, 0x05	; 5
    1600:	5e c0       	rjmp	.+188    	; 0x16be <follow_path+0x33a>
    1602:	db 01       	movw	r26, r22
    1604:	1b 96       	adiw	r26, 0x0b	; 11
    1606:	8c 91       	ld	r24, X
    1608:	84 ff       	sbrs	r24, 4
    160a:	11 c0       	rjmp	.+34     	; 0x162e <follow_path+0x2aa>
    160c:	eb 81       	ldd	r30, Y+3	; 0x03
    160e:	fc 81       	ldd	r31, Y+4	; 0x04
    1610:	80 81       	ld	r24, Z
    1612:	91 81       	ldd	r25, Z+1	; 0x01
    1614:	0e 94 84 00 	call	0x108	; 0x108 <ld_clust>
    1618:	ab 81       	ldd	r26, Y+3	; 0x03
    161a:	bc 81       	ldd	r27, Y+4	; 0x04
    161c:	16 96       	adiw	r26, 0x06	; 6
    161e:	6d 93       	st	X+, r22
    1620:	7d 93       	st	X+, r23
    1622:	8d 93       	st	X+, r24
    1624:	9c 93       	st	X, r25
    1626:	19 97       	sbiw	r26, 0x09	; 9
    1628:	01 cf       	rjmp	.-510    	; 0x142c <follow_path+0xa8>
    162a:	84 e0       	ldi	r24, 0x04	; 4
    162c:	48 c0       	rjmp	.+144    	; 0x16be <follow_path+0x33a>
    162e:	85 e0       	ldi	r24, 0x05	; 5
    1630:	46 c0       	rjmp	.+140    	; 0x16be <follow_path+0x33a>
    1632:	6f 01       	movw	r12, r30
    1634:	c2 0e       	add	r12, r18
    1636:	d3 1e       	adc	r13, r19
    1638:	84 e2       	ldi	r24, 0x24	; 36
    163a:	38 cf       	rjmp	.-400    	; 0x14ac <follow_path+0x128>
    163c:	6f 01       	movw	r12, r30
    163e:	c2 0e       	add	r12, r18
    1640:	d3 1e       	adc	r13, r19
    1642:	8b 2d       	mov	r24, r11
    1644:	33 cf       	rjmp	.-410    	; 0x14ac <follow_path+0x128>
    1646:	e8 e0       	ldi	r30, 0x08	; 8
    1648:	6e 16       	cp	r6, r30
    164a:	71 04       	cpc	r7, r1
    164c:	09 f4       	brne	.+2      	; 0x1650 <follow_path+0x2cc>
    164e:	45 cf       	rjmp	.-374    	; 0x14da <follow_path+0x156>
    1650:	8d cf       	rjmp	.-230    	; 0x156c <follow_path+0x1e8>
    1652:	8f eb       	ldi	r24, 0xBF	; 191
    1654:	81 0f       	add	r24, r17
    1656:	8a 31       	cpi	r24, 0x1A	; 26
    1658:	08 f4       	brcc	.+2      	; 0x165c <follow_path+0x2d8>
    165a:	5c cf       	rjmp	.-328    	; 0x1514 <follow_path+0x190>
    165c:	5d cf       	rjmp	.-326    	; 0x1518 <follow_path+0x194>
    165e:	c2 0e       	add	r12, r18
    1660:	d3 1e       	adc	r13, r19
    1662:	84 e0       	ldi	r24, 0x04	; 4
    1664:	67 cf       	rjmp	.-306    	; 0x1534 <follow_path+0x1b0>
    1666:	c2 0e       	add	r12, r18
    1668:	d3 1e       	adc	r13, r19
    166a:	83 2d       	mov	r24, r3
    166c:	63 cf       	rjmp	.-314    	; 0x1534 <follow_path+0x1b0>
    166e:	86 e0       	ldi	r24, 0x06	; 6
    1670:	26 c0       	rjmp	.+76     	; 0x16be <follow_path+0x33a>
    1672:	6a 2d       	mov	r22, r10
    1674:	79 2d       	mov	r23, r9
    1676:	8b 81       	ldd	r24, Y+3	; 0x03
    1678:	9c 81       	ldd	r25, Y+4	; 0x04
    167a:	0e 94 ad 05 	call	0xb5a	; 0xb5a <dir_sdi>
    167e:	88 23       	and	r24, r24
    1680:	09 f4       	brne	.+2      	; 0x1684 <follow_path+0x300>
    1682:	76 cf       	rjmp	.-276    	; 0x1570 <follow_path+0x1ec>
    1684:	0a c0       	rjmp	.+20     	; 0x169a <follow_path+0x316>
    1686:	fc 82       	std	Y+4, r15	; 0x04
    1688:	eb 82       	std	Y+3, r14	; 0x03
    168a:	da 01       	movw	r26, r20
    168c:	1b 96       	adiw	r26, 0x0b	; 11
    168e:	9c 91       	ld	r25, X
    1690:	92 ff       	sbrs	r25, 2
    1692:	b7 cf       	rjmp	.-146    	; 0x1602 <follow_path+0x27e>
    1694:	14 c0       	rjmp	.+40     	; 0x16be <follow_path+0x33a>
    1696:	1c 83       	std	Y+4, r17	; 0x04
    1698:	0b 83       	std	Y+3, r16	; 0x03
    169a:	ab 81       	ldd	r26, Y+3	; 0x03
    169c:	bc 81       	ldd	r27, Y+4	; 0x04
    169e:	54 96       	adiw	r26, 0x14	; 20
    16a0:	ed 91       	ld	r30, X+
    16a2:	fc 91       	ld	r31, X
    16a4:	55 97       	sbiw	r26, 0x15	; 21
    16a6:	93 85       	ldd	r25, Z+11	; 0x0b
    16a8:	84 30       	cpi	r24, 0x04	; 4
    16aa:	09 f4       	brne	.+2      	; 0x16ae <follow_path+0x32a>
    16ac:	98 cf       	rjmp	.-208    	; 0x15de <follow_path+0x25a>
    16ae:	07 c0       	rjmp	.+14     	; 0x16be <follow_path+0x33a>
    16b0:	1c 83       	std	Y+4, r17	; 0x04
    16b2:	0b 83       	std	Y+3, r16	; 0x03
    16b4:	04 88       	ldd	r0, Z+20	; 0x14
    16b6:	f5 89       	ldd	r31, Z+21	; 0x15
    16b8:	e0 2d       	mov	r30, r0
    16ba:	93 85       	ldd	r25, Z+11	; 0x0b
    16bc:	90 cf       	rjmp	.-224    	; 0x15de <follow_path+0x25a>
    16be:	0f 90       	pop	r0
    16c0:	0f 90       	pop	r0
    16c2:	0f 90       	pop	r0
    16c4:	0f 90       	pop	r0
    16c6:	df 91       	pop	r29
    16c8:	cf 91       	pop	r28
    16ca:	1f 91       	pop	r17
    16cc:	0f 91       	pop	r16
    16ce:	ff 90       	pop	r15
    16d0:	ef 90       	pop	r14
    16d2:	df 90       	pop	r13
    16d4:	cf 90       	pop	r12
    16d6:	bf 90       	pop	r11
    16d8:	af 90       	pop	r10
    16da:	9f 90       	pop	r9
    16dc:	8f 90       	pop	r8
    16de:	7f 90       	pop	r7
    16e0:	6f 90       	pop	r6
    16e2:	5f 90       	pop	r5
    16e4:	4f 90       	pop	r4
    16e6:	3f 90       	pop	r3
    16e8:	2f 90       	pop	r2
    16ea:	08 95       	ret

000016ec <f_mount>:
    16ec:	81 11       	cpse	r24, r1
    16ee:	12 c0       	rjmp	.+36     	; 0x1714 <f_mount+0x28>
    16f0:	e0 91 7d 00 	lds	r30, 0x007D
    16f4:	f0 91 7e 00 	lds	r31, 0x007E
    16f8:	30 97       	sbiw	r30, 0x00	; 0
    16fa:	09 f0       	breq	.+2      	; 0x16fe <f_mount+0x12>
    16fc:	10 82       	st	Z, r1
    16fe:	61 15       	cp	r22, r1
    1700:	71 05       	cpc	r23, r1
    1702:	11 f0       	breq	.+4      	; 0x1708 <f_mount+0x1c>
    1704:	fb 01       	movw	r30, r22
    1706:	10 82       	st	Z, r1
    1708:	70 93 7e 00 	sts	0x007E, r23
    170c:	60 93 7d 00 	sts	0x007D, r22
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	08 95       	ret
    1714:	8b e0       	ldi	r24, 0x0B	; 11
    1716:	08 95       	ret

00001718 <f_open>:
    1718:	2f 92       	push	r2
    171a:	3f 92       	push	r3
    171c:	4f 92       	push	r4
    171e:	5f 92       	push	r5
    1720:	6f 92       	push	r6
    1722:	7f 92       	push	r7
    1724:	8f 92       	push	r8
    1726:	9f 92       	push	r9
    1728:	af 92       	push	r10
    172a:	bf 92       	push	r11
    172c:	cf 92       	push	r12
    172e:	df 92       	push	r13
    1730:	ef 92       	push	r14
    1732:	ff 92       	push	r15
    1734:	0f 93       	push	r16
    1736:	1f 93       	push	r17
    1738:	cf 93       	push	r28
    173a:	df 93       	push	r29
    173c:	cd b7       	in	r28, 0x3d	; 61
    173e:	de b7       	in	r29, 0x3e	; 62
    1740:	ae 97       	sbiw	r28, 0x2e	; 46
    1742:	0f b6       	in	r0, 0x3f	; 63
    1744:	f8 94       	cli
    1746:	de bf       	out	0x3e, r29	; 62
    1748:	0f be       	out	0x3f, r0	; 63
    174a:	cd bf       	out	0x3d, r28	; 61
    174c:	7c a3       	std	Y+36, r23	; 0x24
    174e:	6b a3       	std	Y+35, r22	; 0x23
    1750:	00 97       	sbiw	r24, 0x00	; 0
    1752:	09 f4       	brne	.+2      	; 0x1756 <f_open+0x3e>
    1754:	63 c1       	rjmp	.+710    	; 0x1a1c <f_open+0x304>
    1756:	14 2f       	mov	r17, r20
    1758:	7c 01       	movw	r14, r24
    175a:	dc 01       	movw	r26, r24
    175c:	1d 92       	st	X+, r1
    175e:	1c 92       	st	X, r1
    1760:	4e 71       	andi	r20, 0x1E	; 30
    1762:	be 01       	movw	r22, r28
    1764:	6f 5f       	subi	r22, 0xFF	; 255
    1766:	7f 4f       	sbci	r23, 0xFF	; 255
    1768:	ce 01       	movw	r24, r28
    176a:	83 96       	adiw	r24, 0x23	; 35
    176c:	0e 94 a2 01 	call	0x344	; 0x344 <chk_mounted>
    1770:	81 11       	cpse	r24, r1
    1772:	9f c1       	rjmp	.+830    	; 0x1ab2 <f_open+0x39a>
    1774:	b1 2f       	mov	r27, r17
    1776:	bf 71       	andi	r27, 0x1F	; 31
    1778:	3b 2e       	mov	r3, r27
    177a:	ce 01       	movw	r24, r28
    177c:	47 96       	adiw	r24, 0x17	; 23
    177e:	9e 8b       	std	Y+22, r25	; 0x16
    1780:	8d 8b       	std	Y+21, r24	; 0x15
    1782:	6b a1       	ldd	r22, Y+35	; 0x23
    1784:	7c a1       	ldd	r23, Y+36	; 0x24
    1786:	46 97       	sbiw	r24, 0x16	; 22
    1788:	0e 94 c2 09 	call	0x1384	; 0x1384 <follow_path>
    178c:	cb 88       	ldd	r12, Y+19	; 0x13
    178e:	dc 88       	ldd	r13, Y+20	; 0x14
    1790:	81 11       	cpse	r24, r1
    1792:	50 c1       	rjmp	.+672    	; 0x1a34 <f_open+0x31c>
    1794:	c1 14       	cp	r12, r1
    1796:	d1 04       	cpc	r13, r1
    1798:	09 f0       	breq	.+2      	; 0x179c <f_open+0x84>
    179a:	47 c1       	rjmp	.+654    	; 0x1a2a <f_open+0x312>
    179c:	41 c1       	rjmp	.+642    	; 0x1a20 <f_open+0x308>
    179e:	84 30       	cpi	r24, 0x04	; 4
    17a0:	09 f0       	breq	.+2      	; 0x17a4 <f_open+0x8c>
    17a2:	7b c1       	rjmp	.+758    	; 0x1a9a <f_open+0x382>
    17a4:	60 e0       	ldi	r22, 0x00	; 0
    17a6:	70 e0       	ldi	r23, 0x00	; 0
    17a8:	ce 01       	movw	r24, r28
    17aa:	01 96       	adiw	r24, 0x01	; 1
    17ac:	0e 94 ad 05 	call	0xb5a	; 0xb5a <dir_sdi>
    17b0:	81 11       	cpse	r24, r1
    17b2:	45 c1       	rjmp	.+650    	; 0x1a3e <f_open+0x326>
    17b4:	4f 85       	ldd	r20, Y+15	; 0x0f
    17b6:	58 89       	ldd	r21, Y+16	; 0x10
    17b8:	69 89       	ldd	r22, Y+17	; 0x11
    17ba:	7a 89       	ldd	r23, Y+18	; 0x12
    17bc:	89 81       	ldd	r24, Y+1	; 0x01
    17be:	9a 81       	ldd	r25, Y+2	; 0x02
    17c0:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    17c4:	81 11       	cpse	r24, r1
    17c6:	3b c1       	rjmp	.+630    	; 0x1a3e <f_open+0x326>
    17c8:	eb 89       	ldd	r30, Y+19	; 0x13
    17ca:	fc 89       	ldd	r31, Y+20	; 0x14
    17cc:	80 81       	ld	r24, Z
    17ce:	85 3e       	cpi	r24, 0xE5	; 229
    17d0:	09 f4       	brne	.+2      	; 0x17d4 <f_open+0xbc>
    17d2:	3e c1       	rjmp	.+636    	; 0x1a50 <f_open+0x338>
    17d4:	88 23       	and	r24, r24
    17d6:	09 f4       	brne	.+2      	; 0x17da <f_open+0xc2>
    17d8:	3b c1       	rjmp	.+630    	; 0x1a50 <f_open+0x338>
    17da:	61 e0       	ldi	r22, 0x01	; 1
    17dc:	70 e0       	ldi	r23, 0x00	; 0
    17de:	ce 01       	movw	r24, r28
    17e0:	01 96       	adiw	r24, 0x01	; 1
    17e2:	0e 94 8a 08 	call	0x1114	; 0x1114 <dir_next>
    17e6:	88 23       	and	r24, r24
    17e8:	29 f3       	breq	.-54     	; 0x17b4 <f_open+0x9c>
    17ea:	29 c1       	rjmp	.+594    	; 0x1a3e <f_open+0x326>
    17ec:	eb 89       	ldd	r30, Y+19	; 0x13
    17ee:	fc 89       	ldd	r31, Y+20	; 0x14
    17f0:	cf 01       	movw	r24, r30
    17f2:	80 96       	adiw	r24, 0x20	; 32
    17f4:	11 92       	st	Z+, r1
    17f6:	e8 17       	cp	r30, r24
    17f8:	f9 07       	cpc	r31, r25
    17fa:	e1 f7       	brne	.-8      	; 0x17f4 <f_open+0xdc>
    17fc:	6d 89       	ldd	r22, Y+21	; 0x15
    17fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1800:	4b e0       	ldi	r20, 0x0B	; 11
    1802:	50 e0       	ldi	r21, 0x00	; 0
    1804:	8b 89       	ldd	r24, Y+19	; 0x13
    1806:	9c 89       	ldd	r25, Y+20	; 0x14
    1808:	0e 94 58 00 	call	0xb0	; 0xb0 <mem_cpy>
    180c:	e9 81       	ldd	r30, Y+1	; 0x01
    180e:	fa 81       	ldd	r31, Y+2	; 0x02
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	84 83       	std	Z+4, r24	; 0x04
    1814:	e3 2d       	mov	r30, r3
    1816:	e8 60       	ori	r30, 0x08	; 8
    1818:	3e 2e       	mov	r3, r30
    181a:	cb 88       	ldd	r12, Y+19	; 0x13
    181c:	dc 88       	ldd	r13, Y+20	; 0x14
    181e:	08 c0       	rjmp	.+16     	; 0x1830 <f_open+0x118>
    1820:	d6 01       	movw	r26, r12
    1822:	1b 96       	adiw	r26, 0x0b	; 11
    1824:	8c 91       	ld	r24, X
    1826:	81 71       	andi	r24, 0x11	; 17
    1828:	09 f0       	breq	.+2      	; 0x182c <f_open+0x114>
    182a:	1d c1       	rjmp	.+570    	; 0x1a66 <f_open+0x34e>
    182c:	12 fd       	sbrc	r17, 2
    182e:	1d c1       	rjmp	.+570    	; 0x1a6a <f_open+0x352>
    1830:	33 fe       	sbrs	r3, 3
    1832:	b7 c0       	rjmp	.+366    	; 0x19a2 <f_open+0x28a>
    1834:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <get_fattime>
    1838:	f6 01       	movw	r30, r12
    183a:	66 87       	std	Z+14, r22	; 0x0e
    183c:	77 87       	std	Z+15, r23	; 0x0f
    183e:	80 8b       	std	Z+16, r24	; 0x10
    1840:	91 8b       	std	Z+17, r25	; 0x11
    1842:	13 86       	std	Z+11, r1	; 0x0b
    1844:	14 8e       	std	Z+28, r1	; 0x1c
    1846:	15 8e       	std	Z+29, r1	; 0x1d
    1848:	16 8e       	std	Z+30, r1	; 0x1e
    184a:	17 8e       	std	Z+31, r1	; 0x1f
    184c:	e9 81       	ldd	r30, Y+1	; 0x01
    184e:	fa 81       	ldd	r31, Y+2	; 0x02
    1850:	fe a3       	std	Y+38, r31	; 0x26
    1852:	ed a3       	std	Y+37, r30	; 0x25
    1854:	b6 01       	movw	r22, r12
    1856:	cf 01       	movw	r24, r30
    1858:	0e 94 84 00 	call	0x108	; 0x108 <ld_clust>
    185c:	4b 01       	movw	r8, r22
    185e:	5c 01       	movw	r10, r24
    1860:	d6 01       	movw	r26, r12
    1862:	5b 96       	adiw	r26, 0x1b	; 27
    1864:	1c 92       	st	X, r1
    1866:	1e 92       	st	-X, r1
    1868:	5a 97       	sbiw	r26, 0x1a	; 26
    186a:	55 96       	adiw	r26, 0x15	; 21
    186c:	1c 92       	st	X, r1
    186e:	1e 92       	st	-X, r1
    1870:	54 97       	sbiw	r26, 0x14	; 20
    1872:	81 e0       	ldi	r24, 0x01	; 1
    1874:	ed a1       	ldd	r30, Y+37	; 0x25
    1876:	fe a1       	ldd	r31, Y+38	; 0x26
    1878:	84 83       	std	Z+4, r24	; 0x04
    187a:	81 14       	cp	r8, r1
    187c:	91 04       	cpc	r9, r1
    187e:	a1 04       	cpc	r10, r1
    1880:	b1 04       	cpc	r11, r1
    1882:	09 f4       	brne	.+2      	; 0x1886 <f_open+0x16e>
    1884:	8e c0       	rjmp	.+284    	; 0x19a2 <f_open+0x28a>
    1886:	22 a9       	ldd	r18, Z+50	; 0x32
    1888:	33 a9       	ldd	r19, Z+51	; 0x33
    188a:	44 a9       	ldd	r20, Z+52	; 0x34
    188c:	55 a9       	ldd	r21, Z+53	; 0x35
    188e:	2b a7       	std	Y+43, r18	; 0x2b
    1890:	3c a7       	std	Y+44, r19	; 0x2c
    1892:	4d a7       	std	Y+45, r20	; 0x2d
    1894:	5e a7       	std	Y+46, r21	; 0x2e
    1896:	b2 e0       	ldi	r27, 0x02	; 2
    1898:	8b 16       	cp	r8, r27
    189a:	91 04       	cpc	r9, r1
    189c:	a1 04       	cpc	r10, r1
    189e:	b1 04       	cpc	r11, r1
    18a0:	08 f4       	brcc	.+2      	; 0x18a4 <f_open+0x18c>
    18a2:	e8 c0       	rjmp	.+464    	; 0x1a74 <f_open+0x35c>
    18a4:	82 8d       	ldd	r24, Z+26	; 0x1a
    18a6:	93 8d       	ldd	r25, Z+27	; 0x1b
    18a8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    18aa:	b5 8d       	ldd	r27, Z+29	; 0x1d
    18ac:	88 16       	cp	r8, r24
    18ae:	99 06       	cpc	r9, r25
    18b0:	aa 06       	cpc	r10, r26
    18b2:	bb 06       	cpc	r11, r27
    18b4:	08 f0       	brcs	.+2      	; 0x18b8 <f_open+0x1a0>
    18b6:	e0 c0       	rjmp	.+448    	; 0x1a78 <f_open+0x360>
    18b8:	8f a2       	std	Y+39, r8	; 0x27
    18ba:	98 a6       	std	Y+40, r9	; 0x28
    18bc:	a9 a6       	std	Y+41, r10	; 0x29
    18be:	ba a6       	std	Y+42, r11	; 0x2a
    18c0:	22 24       	eor	r2, r2
    18c2:	23 94       	inc	r2
    18c4:	43 c0       	rjmp	.+134    	; 0x194c <f_open+0x234>
    18c6:	4f a1       	ldd	r20, Y+39	; 0x27
    18c8:	58 a5       	ldd	r21, Y+40	; 0x28
    18ca:	69 a5       	ldd	r22, Y+41	; 0x29
    18cc:	7a a5       	ldd	r23, Y+42	; 0x2a
    18ce:	8d a1       	ldd	r24, Y+37	; 0x25
    18d0:	9e a1       	ldd	r25, Y+38	; 0x26
    18d2:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
    18d6:	2b 01       	movw	r4, r22
    18d8:	3c 01       	movw	r6, r24
    18da:	61 15       	cp	r22, r1
    18dc:	71 05       	cpc	r23, r1
    18de:	81 05       	cpc	r24, r1
    18e0:	91 05       	cpc	r25, r1
    18e2:	09 f4       	brne	.+2      	; 0x18e6 <f_open+0x1ce>
    18e4:	43 c0       	rjmp	.+134    	; 0x196c <f_open+0x254>
    18e6:	61 30       	cpi	r22, 0x01	; 1
    18e8:	71 05       	cpc	r23, r1
    18ea:	81 05       	cpc	r24, r1
    18ec:	91 05       	cpc	r25, r1
    18ee:	09 f4       	brne	.+2      	; 0x18f2 <f_open+0x1da>
    18f0:	c5 c0       	rjmp	.+394    	; 0x1a7c <f_open+0x364>
    18f2:	6f 3f       	cpi	r22, 0xFF	; 255
    18f4:	7f 4f       	sbci	r23, 0xFF	; 255
    18f6:	8f 4f       	sbci	r24, 0xFF	; 255
    18f8:	9f 4f       	sbci	r25, 0xFF	; 255
    18fa:	09 f4       	brne	.+2      	; 0x18fe <f_open+0x1e6>
    18fc:	c1 c0       	rjmp	.+386    	; 0x1a80 <f_open+0x368>
    18fe:	00 e0       	ldi	r16, 0x00	; 0
    1900:	10 e0       	ldi	r17, 0x00	; 0
    1902:	98 01       	movw	r18, r16
    1904:	4f a1       	ldd	r20, Y+39	; 0x27
    1906:	58 a5       	ldd	r21, Y+40	; 0x28
    1908:	69 a5       	ldd	r22, Y+41	; 0x29
    190a:	7a a5       	ldd	r23, Y+42	; 0x2a
    190c:	8d a1       	ldd	r24, Y+37	; 0x25
    190e:	9e a1       	ldd	r25, Y+38	; 0x26
    1910:	0e 94 66 06 	call	0xccc	; 0xccc <put_fat>
    1914:	81 11       	cpse	r24, r1
    1916:	b5 c0       	rjmp	.+362    	; 0x1a82 <f_open+0x36a>
    1918:	ed a1       	ldd	r30, Y+37	; 0x25
    191a:	fe a1       	ldd	r31, Y+38	; 0x26
    191c:	86 85       	ldd	r24, Z+14	; 0x0e
    191e:	97 85       	ldd	r25, Z+15	; 0x0f
    1920:	a0 89       	ldd	r26, Z+16	; 0x10
    1922:	b1 89       	ldd	r27, Z+17	; 0x11
    1924:	8f 3f       	cpi	r24, 0xFF	; 255
    1926:	ff ef       	ldi	r31, 0xFF	; 255
    1928:	9f 07       	cpc	r25, r31
    192a:	af 07       	cpc	r26, r31
    192c:	bf 07       	cpc	r27, r31
    192e:	51 f0       	breq	.+20     	; 0x1944 <f_open+0x22c>
    1930:	01 96       	adiw	r24, 0x01	; 1
    1932:	a1 1d       	adc	r26, r1
    1934:	b1 1d       	adc	r27, r1
    1936:	ed a1       	ldd	r30, Y+37	; 0x25
    1938:	fe a1       	ldd	r31, Y+38	; 0x26
    193a:	86 87       	std	Z+14, r24	; 0x0e
    193c:	97 87       	std	Z+15, r25	; 0x0f
    193e:	a0 8b       	std	Z+16, r26	; 0x10
    1940:	b1 8b       	std	Z+17, r27	; 0x11
    1942:	25 82       	std	Z+5, r2	; 0x05
    1944:	4f a2       	std	Y+39, r4	; 0x27
    1946:	58 a6       	std	Y+40, r5	; 0x28
    1948:	69 a6       	std	Y+41, r6	; 0x29
    194a:	7a a6       	std	Y+42, r7	; 0x2a
    194c:	ed a1       	ldd	r30, Y+37	; 0x25
    194e:	fe a1       	ldd	r31, Y+38	; 0x26
    1950:	82 8d       	ldd	r24, Z+26	; 0x1a
    1952:	93 8d       	ldd	r25, Z+27	; 0x1b
    1954:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1956:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1958:	2f a1       	ldd	r18, Y+39	; 0x27
    195a:	38 a5       	ldd	r19, Y+40	; 0x28
    195c:	49 a5       	ldd	r20, Y+41	; 0x29
    195e:	5a a5       	ldd	r21, Y+42	; 0x2a
    1960:	28 17       	cp	r18, r24
    1962:	39 07       	cpc	r19, r25
    1964:	4a 07       	cpc	r20, r26
    1966:	5b 07       	cpc	r21, r27
    1968:	08 f4       	brcc	.+2      	; 0x196c <f_open+0x254>
    196a:	ad cf       	rjmp	.-166    	; 0x18c6 <f_open+0x1ae>
    196c:	89 81       	ldd	r24, Y+1	; 0x01
    196e:	9a 81       	ldd	r25, Y+2	; 0x02
    1970:	31 e0       	ldi	r19, 0x01	; 1
    1972:	83 1a       	sub	r8, r19
    1974:	91 08       	sbc	r9, r1
    1976:	a1 08       	sbc	r10, r1
    1978:	b1 08       	sbc	r11, r1
    197a:	dc 01       	movw	r26, r24
    197c:	1a 96       	adiw	r26, 0x0a	; 10
    197e:	8d 92       	st	X+, r8
    1980:	9d 92       	st	X+, r9
    1982:	ad 92       	st	X+, r10
    1984:	bc 92       	st	X, r11
    1986:	1d 97       	sbiw	r26, 0x0d	; 13
    1988:	4b a5       	ldd	r20, Y+43	; 0x2b
    198a:	5c a5       	ldd	r21, Y+44	; 0x2c
    198c:	6d a5       	ldd	r22, Y+45	; 0x2d
    198e:	7e a5       	ldd	r23, Y+46	; 0x2e
    1990:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    1994:	88 23       	and	r24, r24
    1996:	39 f0       	breq	.+14     	; 0x19a6 <f_open+0x28e>
    1998:	8c c0       	rjmp	.+280    	; 0x1ab2 <f_open+0x39a>
    199a:	11 ff       	sbrs	r17, 1
    199c:	02 c0       	rjmp	.+4      	; 0x19a2 <f_open+0x28a>
    199e:	80 fd       	sbrc	r24, 0
    19a0:	74 c0       	rjmp	.+232    	; 0x1a8a <f_open+0x372>
    19a2:	33 fe       	sbrs	r3, 3
    19a4:	03 c0       	rjmp	.+6      	; 0x19ac <f_open+0x294>
    19a6:	b3 2d       	mov	r27, r3
    19a8:	b0 62       	ori	r27, 0x20	; 32
    19aa:	3b 2e       	mov	r3, r27
    19ac:	e9 81       	ldd	r30, Y+1	; 0x01
    19ae:	fa 81       	ldd	r31, Y+2	; 0x02
    19b0:	82 a9       	ldd	r24, Z+50	; 0x32
    19b2:	93 a9       	ldd	r25, Z+51	; 0x33
    19b4:	a4 a9       	ldd	r26, Z+52	; 0x34
    19b6:	b5 a9       	ldd	r27, Z+53	; 0x35
    19b8:	f7 01       	movw	r30, r14
    19ba:	82 8f       	std	Z+26, r24	; 0x1a
    19bc:	93 8f       	std	Z+27, r25	; 0x1b
    19be:	a4 8f       	std	Z+28, r26	; 0x1c
    19c0:	b5 8f       	std	Z+29, r27	; 0x1d
    19c2:	d7 8e       	std	Z+31, r13	; 0x1f
    19c4:	c6 8e       	std	Z+30, r12	; 0x1e
    19c6:	d7 01       	movw	r26, r14
    19c8:	14 96       	adiw	r26, 0x04	; 4
    19ca:	3c 92       	st	X, r3
    19cc:	a9 80       	ldd	r10, Y+1	; 0x01
    19ce:	ba 80       	ldd	r11, Y+2	; 0x02
    19d0:	b6 01       	movw	r22, r12
    19d2:	c5 01       	movw	r24, r10
    19d4:	0e 94 84 00 	call	0x108	; 0x108 <ld_clust>
    19d8:	f7 01       	movw	r30, r14
    19da:	66 87       	std	Z+14, r22	; 0x0e
    19dc:	77 87       	std	Z+15, r23	; 0x0f
    19de:	80 8b       	std	Z+16, r24	; 0x10
    19e0:	91 8b       	std	Z+17, r25	; 0x11
    19e2:	f6 01       	movw	r30, r12
    19e4:	84 8d       	ldd	r24, Z+28	; 0x1c
    19e6:	95 8d       	ldd	r25, Z+29	; 0x1d
    19e8:	a6 8d       	ldd	r26, Z+30	; 0x1e
    19ea:	b7 8d       	ldd	r27, Z+31	; 0x1f
    19ec:	f7 01       	movw	r30, r14
    19ee:	82 87       	std	Z+10, r24	; 0x0a
    19f0:	93 87       	std	Z+11, r25	; 0x0b
    19f2:	a4 87       	std	Z+12, r26	; 0x0c
    19f4:	b5 87       	std	Z+13, r27	; 0x0d
    19f6:	16 82       	std	Z+6, r1	; 0x06
    19f8:	17 82       	std	Z+7, r1	; 0x07
    19fa:	10 86       	std	Z+8, r1	; 0x08
    19fc:	11 86       	std	Z+9, r1	; 0x09
    19fe:	16 8a       	std	Z+22, r1	; 0x16
    1a00:	17 8a       	std	Z+23, r1	; 0x17
    1a02:	10 8e       	std	Z+24, r1	; 0x18
    1a04:	11 8e       	std	Z+25, r1	; 0x19
    1a06:	b1 82       	std	Z+1, r11	; 0x01
    1a08:	a0 82       	st	Z, r10
    1a0a:	d5 01       	movw	r26, r10
    1a0c:	16 96       	adiw	r26, 0x06	; 6
    1a0e:	8d 91       	ld	r24, X+
    1a10:	9c 91       	ld	r25, X
    1a12:	17 97       	sbiw	r26, 0x07	; 7
    1a14:	93 83       	std	Z+3, r25	; 0x03
    1a16:	82 83       	std	Z+2, r24	; 0x02
    1a18:	80 e0       	ldi	r24, 0x00	; 0
    1a1a:	4b c0       	rjmp	.+150    	; 0x1ab2 <f_open+0x39a>
    1a1c:	89 e0       	ldi	r24, 0x09	; 9
    1a1e:	49 c0       	rjmp	.+146    	; 0x1ab2 <f_open+0x39a>
    1a20:	41 2f       	mov	r20, r17
    1a22:	4c 71       	andi	r20, 0x1C	; 28
    1a24:	c9 f5       	brne	.+114    	; 0x1a98 <f_open+0x380>
    1a26:	86 e0       	ldi	r24, 0x06	; 6
    1a28:	33 c0       	rjmp	.+102    	; 0x1a90 <f_open+0x378>
    1a2a:	81 2f       	mov	r24, r17
    1a2c:	8c 71       	andi	r24, 0x1C	; 28
    1a2e:	09 f0       	breq	.+2      	; 0x1a32 <f_open+0x31a>
    1a30:	f7 ce       	rjmp	.-530    	; 0x1820 <f_open+0x108>
    1a32:	39 c0       	rjmp	.+114    	; 0x1aa6 <f_open+0x38e>
    1a34:	41 2f       	mov	r20, r17
    1a36:	4c 71       	andi	r20, 0x1C	; 28
    1a38:	09 f0       	breq	.+2      	; 0x1a3c <f_open+0x324>
    1a3a:	b1 ce       	rjmp	.-670    	; 0x179e <f_open+0x86>
    1a3c:	29 c0       	rjmp	.+82     	; 0x1a90 <f_open+0x378>
    1a3e:	b3 2d       	mov	r27, r3
    1a40:	b8 60       	ori	r27, 0x08	; 8
    1a42:	3b 2e       	mov	r3, r27
    1a44:	cb 88       	ldd	r12, Y+19	; 0x13
    1a46:	dc 88       	ldd	r13, Y+20	; 0x14
    1a48:	88 23       	and	r24, r24
    1a4a:	09 f4       	brne	.+2      	; 0x1a4e <f_open+0x336>
    1a4c:	f1 ce       	rjmp	.-542    	; 0x1830 <f_open+0x118>
    1a4e:	20 c0       	rjmp	.+64     	; 0x1a90 <f_open+0x378>
    1a50:	4f 85       	ldd	r20, Y+15	; 0x0f
    1a52:	58 89       	ldd	r21, Y+16	; 0x10
    1a54:	69 89       	ldd	r22, Y+17	; 0x11
    1a56:	7a 89       	ldd	r23, Y+18	; 0x12
    1a58:	89 81       	ldd	r24, Y+1	; 0x01
    1a5a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a5c:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    1a60:	81 11       	cpse	r24, r1
    1a62:	1b c0       	rjmp	.+54     	; 0x1a9a <f_open+0x382>
    1a64:	c3 ce       	rjmp	.-634    	; 0x17ec <f_open+0xd4>
    1a66:	87 e0       	ldi	r24, 0x07	; 7
    1a68:	01 c0       	rjmp	.+2      	; 0x1a6c <f_open+0x354>
    1a6a:	88 e0       	ldi	r24, 0x08	; 8
    1a6c:	88 23       	and	r24, r24
    1a6e:	09 f4       	brne	.+2      	; 0x1a72 <f_open+0x35a>
    1a70:	98 cf       	rjmp	.-208    	; 0x19a2 <f_open+0x28a>
    1a72:	1f c0       	rjmp	.+62     	; 0x1ab2 <f_open+0x39a>
    1a74:	82 e0       	ldi	r24, 0x02	; 2
    1a76:	05 c0       	rjmp	.+10     	; 0x1a82 <f_open+0x36a>
    1a78:	82 e0       	ldi	r24, 0x02	; 2
    1a7a:	03 c0       	rjmp	.+6      	; 0x1a82 <f_open+0x36a>
    1a7c:	82 e0       	ldi	r24, 0x02	; 2
    1a7e:	01 c0       	rjmp	.+2      	; 0x1a82 <f_open+0x36a>
    1a80:	81 e0       	ldi	r24, 0x01	; 1
    1a82:	88 23       	and	r24, r24
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <f_open+0x370>
    1a86:	8f cf       	rjmp	.-226    	; 0x19a6 <f_open+0x28e>
    1a88:	14 c0       	rjmp	.+40     	; 0x1ab2 <f_open+0x39a>
    1a8a:	87 e0       	ldi	r24, 0x07	; 7
    1a8c:	01 c0       	rjmp	.+2      	; 0x1a90 <f_open+0x378>
    1a8e:	84 e0       	ldi	r24, 0x04	; 4
    1a90:	88 23       	and	r24, r24
    1a92:	09 f4       	brne	.+2      	; 0x1a96 <f_open+0x37e>
    1a94:	98 cf       	rjmp	.-208    	; 0x19c6 <f_open+0x2ae>
    1a96:	0d c0       	rjmp	.+26     	; 0x1ab2 <f_open+0x39a>
    1a98:	86 e0       	ldi	r24, 0x06	; 6
    1a9a:	e3 2d       	mov	r30, r3
    1a9c:	e8 60       	ori	r30, 0x08	; 8
    1a9e:	3e 2e       	mov	r3, r30
    1aa0:	cb 88       	ldd	r12, Y+19	; 0x13
    1aa2:	dc 88       	ldd	r13, Y+20	; 0x14
    1aa4:	f5 cf       	rjmp	.-22     	; 0x1a90 <f_open+0x378>
    1aa6:	d6 01       	movw	r26, r12
    1aa8:	1b 96       	adiw	r26, 0x0b	; 11
    1aaa:	8c 91       	ld	r24, X
    1aac:	84 fd       	sbrc	r24, 4
    1aae:	ef cf       	rjmp	.-34     	; 0x1a8e <f_open+0x376>
    1ab0:	74 cf       	rjmp	.-280    	; 0x199a <f_open+0x282>
    1ab2:	ae 96       	adiw	r28, 0x2e	; 46
    1ab4:	0f b6       	in	r0, 0x3f	; 63
    1ab6:	f8 94       	cli
    1ab8:	de bf       	out	0x3e, r29	; 62
    1aba:	0f be       	out	0x3f, r0	; 63
    1abc:	cd bf       	out	0x3d, r28	; 61
    1abe:	df 91       	pop	r29
    1ac0:	cf 91       	pop	r28
    1ac2:	1f 91       	pop	r17
    1ac4:	0f 91       	pop	r16
    1ac6:	ff 90       	pop	r15
    1ac8:	ef 90       	pop	r14
    1aca:	df 90       	pop	r13
    1acc:	cf 90       	pop	r12
    1ace:	bf 90       	pop	r11
    1ad0:	af 90       	pop	r10
    1ad2:	9f 90       	pop	r9
    1ad4:	8f 90       	pop	r8
    1ad6:	7f 90       	pop	r7
    1ad8:	6f 90       	pop	r6
    1ada:	5f 90       	pop	r5
    1adc:	4f 90       	pop	r4
    1ade:	3f 90       	pop	r3
    1ae0:	2f 90       	pop	r2
    1ae2:	08 95       	ret

00001ae4 <f_read>:
    1ae4:	2f 92       	push	r2
    1ae6:	3f 92       	push	r3
    1ae8:	4f 92       	push	r4
    1aea:	5f 92       	push	r5
    1aec:	6f 92       	push	r6
    1aee:	7f 92       	push	r7
    1af0:	8f 92       	push	r8
    1af2:	9f 92       	push	r9
    1af4:	af 92       	push	r10
    1af6:	bf 92       	push	r11
    1af8:	cf 92       	push	r12
    1afa:	df 92       	push	r13
    1afc:	ef 92       	push	r14
    1afe:	ff 92       	push	r15
    1b00:	0f 93       	push	r16
    1b02:	1f 93       	push	r17
    1b04:	cf 93       	push	r28
    1b06:	df 93       	push	r29
    1b08:	ec 01       	movw	r28, r24
    1b0a:	4b 01       	movw	r8, r22
    1b0c:	6a 01       	movw	r12, r20
    1b0e:	59 01       	movw	r10, r18
    1b10:	f9 01       	movw	r30, r18
    1b12:	11 82       	std	Z+1, r1	; 0x01
    1b14:	10 82       	st	Z, r1
    1b16:	0e 94 7d 01 	call	0x2fa	; 0x2fa <validate>
    1b1a:	81 11       	cpse	r24, r1
    1b1c:	18 c1       	rjmp	.+560    	; 0x1d4e <f_read+0x26a>
    1b1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1b20:	88 23       	and	r24, r24
    1b22:	0c f4       	brge	.+2      	; 0x1b26 <f_read+0x42>
    1b24:	0f c1       	rjmp	.+542    	; 0x1d44 <f_read+0x260>
    1b26:	80 ff       	sbrs	r24, 0
    1b28:	0f c1       	rjmp	.+542    	; 0x1d48 <f_read+0x264>
    1b2a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b2c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b2e:	ac 85       	ldd	r26, Y+12	; 0x0c
    1b30:	bd 85       	ldd	r27, Y+13	; 0x0d
    1b32:	4e 81       	ldd	r20, Y+6	; 0x06
    1b34:	5f 81       	ldd	r21, Y+7	; 0x07
    1b36:	68 85       	ldd	r22, Y+8	; 0x08
    1b38:	79 85       	ldd	r23, Y+9	; 0x09
    1b3a:	84 1b       	sub	r24, r20
    1b3c:	95 0b       	sbc	r25, r21
    1b3e:	a6 0b       	sbc	r26, r22
    1b40:	b7 0b       	sbc	r27, r23
    1b42:	a6 01       	movw	r20, r12
    1b44:	60 e0       	ldi	r22, 0x00	; 0
    1b46:	70 e0       	ldi	r23, 0x00	; 0
    1b48:	84 17       	cp	r24, r20
    1b4a:	95 07       	cpc	r25, r21
    1b4c:	a6 07       	cpc	r26, r22
    1b4e:	b7 07       	cpc	r27, r23
    1b50:	08 f4       	brcc	.+2      	; 0x1b54 <f_read+0x70>
    1b52:	6c 01       	movw	r12, r24
    1b54:	c1 14       	cp	r12, r1
    1b56:	d1 04       	cpc	r13, r1
    1b58:	09 f4       	brne	.+2      	; 0x1b5c <f_read+0x78>
    1b5a:	f8 c0       	rjmp	.+496    	; 0x1d4c <f_read+0x268>
    1b5c:	4e 81       	ldd	r20, Y+6	; 0x06
    1b5e:	5f 81       	ldd	r21, Y+7	; 0x07
    1b60:	68 85       	ldd	r22, Y+8	; 0x08
    1b62:	79 85       	ldd	r23, Y+9	; 0x09
    1b64:	db 01       	movw	r26, r22
    1b66:	ca 01       	movw	r24, r20
    1b68:	91 70       	andi	r25, 0x01	; 1
    1b6a:	aa 27       	eor	r26, r26
    1b6c:	bb 27       	eor	r27, r27
    1b6e:	89 2b       	or	r24, r25
    1b70:	8a 2b       	or	r24, r26
    1b72:	8b 2b       	or	r24, r27
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <f_read+0x94>
    1b76:	a0 c0       	rjmp	.+320    	; 0x1cb8 <f_read+0x1d4>
    1b78:	e8 81       	ld	r30, Y
    1b7a:	f9 81       	ldd	r31, Y+1	; 0x01
    1b7c:	12 81       	ldd	r17, Z+2	; 0x02
    1b7e:	11 50       	subi	r17, 0x01	; 1
    1b80:	db 01       	movw	r26, r22
    1b82:	ca 01       	movw	r24, r20
    1b84:	07 2e       	mov	r0, r23
    1b86:	79 e0       	ldi	r23, 0x09	; 9
    1b88:	b6 95       	lsr	r27
    1b8a:	a7 95       	ror	r26
    1b8c:	97 95       	ror	r25
    1b8e:	87 95       	ror	r24
    1b90:	7a 95       	dec	r23
    1b92:	d1 f7       	brne	.-12     	; 0x1b88 <f_read+0xa4>
    1b94:	70 2d       	mov	r23, r0
    1b96:	18 23       	and	r17, r24
    1b98:	49 f5       	brne	.+82     	; 0x1bec <f_read+0x108>
    1b9a:	45 2b       	or	r20, r21
    1b9c:	46 2b       	or	r20, r22
    1b9e:	47 2b       	or	r20, r23
    1ba0:	29 f4       	brne	.+10     	; 0x1bac <f_read+0xc8>
    1ba2:	6e 85       	ldd	r22, Y+14	; 0x0e
    1ba4:	7f 85       	ldd	r23, Y+15	; 0x0f
    1ba6:	88 89       	ldd	r24, Y+16	; 0x10
    1ba8:	99 89       	ldd	r25, Y+17	; 0x11
    1baa:	07 c0       	rjmp	.+14     	; 0x1bba <f_read+0xd6>
    1bac:	4a 89       	ldd	r20, Y+18	; 0x12
    1bae:	5b 89       	ldd	r21, Y+19	; 0x13
    1bb0:	6c 89       	ldd	r22, Y+20	; 0x14
    1bb2:	7d 89       	ldd	r23, Y+21	; 0x15
    1bb4:	cf 01       	movw	r24, r30
    1bb6:	0e 94 ca 04 	call	0x994	; 0x994 <get_fat>
    1bba:	62 30       	cpi	r22, 0x02	; 2
    1bbc:	71 05       	cpc	r23, r1
    1bbe:	81 05       	cpc	r24, r1
    1bc0:	91 05       	cpc	r25, r1
    1bc2:	28 f4       	brcc	.+10     	; 0x1bce <f_read+0xea>
    1bc4:	8c 81       	ldd	r24, Y+4	; 0x04
    1bc6:	80 68       	ori	r24, 0x80	; 128
    1bc8:	8c 83       	std	Y+4, r24	; 0x04
    1bca:	82 e0       	ldi	r24, 0x02	; 2
    1bcc:	c0 c0       	rjmp	.+384    	; 0x1d4e <f_read+0x26a>
    1bce:	6f 3f       	cpi	r22, 0xFF	; 255
    1bd0:	ff ef       	ldi	r31, 0xFF	; 255
    1bd2:	7f 07       	cpc	r23, r31
    1bd4:	8f 07       	cpc	r24, r31
    1bd6:	9f 07       	cpc	r25, r31
    1bd8:	29 f4       	brne	.+10     	; 0x1be4 <f_read+0x100>
    1bda:	8c 81       	ldd	r24, Y+4	; 0x04
    1bdc:	80 68       	ori	r24, 0x80	; 128
    1bde:	8c 83       	std	Y+4, r24	; 0x04
    1be0:	81 e0       	ldi	r24, 0x01	; 1
    1be2:	b5 c0       	rjmp	.+362    	; 0x1d4e <f_read+0x26a>
    1be4:	6a 8b       	std	Y+18, r22	; 0x12
    1be6:	7b 8b       	std	Y+19, r23	; 0x13
    1be8:	8c 8b       	std	Y+20, r24	; 0x14
    1bea:	9d 8b       	std	Y+21, r25	; 0x15
    1bec:	28 80       	ld	r2, Y
    1bee:	39 80       	ldd	r3, Y+1	; 0x01
    1bf0:	4a 89       	ldd	r20, Y+18	; 0x12
    1bf2:	5b 89       	ldd	r21, Y+19	; 0x13
    1bf4:	6c 89       	ldd	r22, Y+20	; 0x14
    1bf6:	7d 89       	ldd	r23, Y+21	; 0x15
    1bf8:	c1 01       	movw	r24, r2
    1bfa:	0e 94 9c 04 	call	0x938	; 0x938 <clust2sect>
    1bfe:	61 15       	cp	r22, r1
    1c00:	71 05       	cpc	r23, r1
    1c02:	81 05       	cpc	r24, r1
    1c04:	91 05       	cpc	r25, r1
    1c06:	29 f4       	brne	.+10     	; 0x1c12 <f_read+0x12e>
    1c08:	8c 81       	ldd	r24, Y+4	; 0x04
    1c0a:	80 68       	ori	r24, 0x80	; 128
    1c0c:	8c 83       	std	Y+4, r24	; 0x04
    1c0e:	82 e0       	ldi	r24, 0x02	; 2
    1c10:	9e c0       	rjmp	.+316    	; 0x1d4e <f_read+0x26a>
    1c12:	2b 01       	movw	r4, r22
    1c14:	3c 01       	movw	r6, r24
    1c16:	41 0e       	add	r4, r17
    1c18:	51 1c       	adc	r5, r1
    1c1a:	61 1c       	adc	r6, r1
    1c1c:	71 1c       	adc	r7, r1
    1c1e:	76 01       	movw	r14, r12
    1c20:	ef 2c       	mov	r14, r15
    1c22:	ff 24       	eor	r15, r15
    1c24:	e6 94       	lsr	r14
    1c26:	e1 14       	cp	r14, r1
    1c28:	f1 04       	cpc	r15, r1
    1c2a:	09 f4       	brne	.+2      	; 0x1c2e <f_read+0x14a>
    1c2c:	41 c0       	rjmp	.+130    	; 0x1cb0 <f_read+0x1cc>
    1c2e:	f1 01       	movw	r30, r2
    1c30:	42 81       	ldd	r20, Z+2	; 0x02
    1c32:	24 2f       	mov	r18, r20
    1c34:	30 e0       	ldi	r19, 0x00	; 0
    1c36:	c7 01       	movw	r24, r14
    1c38:	81 0f       	add	r24, r17
    1c3a:	91 1d       	adc	r25, r1
    1c3c:	28 17       	cp	r18, r24
    1c3e:	39 07       	cpc	r19, r25
    1c40:	18 f4       	brcc	.+6      	; 0x1c48 <f_read+0x164>
    1c42:	79 01       	movw	r14, r18
    1c44:	e1 1a       	sub	r14, r17
    1c46:	f1 08       	sbc	r15, r1
    1c48:	0e 2d       	mov	r16, r14
    1c4a:	a3 01       	movw	r20, r6
    1c4c:	92 01       	movw	r18, r4
    1c4e:	b4 01       	movw	r22, r8
    1c50:	f1 01       	movw	r30, r2
    1c52:	81 81       	ldd	r24, Z+1	; 0x01
    1c54:	0e 94 87 11 	call	0x230e	; 0x230e <disk_read>
    1c58:	88 23       	and	r24, r24
    1c5a:	29 f0       	breq	.+10     	; 0x1c66 <f_read+0x182>
    1c5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1c5e:	80 68       	ori	r24, 0x80	; 128
    1c60:	8c 83       	std	Y+4, r24	; 0x04
    1c62:	81 e0       	ldi	r24, 0x01	; 1
    1c64:	74 c0       	rjmp	.+232    	; 0x1d4e <f_read+0x26a>
    1c66:	e8 81       	ld	r30, Y
    1c68:	f9 81       	ldd	r31, Y+1	; 0x01
    1c6a:	84 81       	ldd	r24, Z+4	; 0x04
    1c6c:	88 23       	and	r24, r24
    1c6e:	e1 f0       	breq	.+56     	; 0x1ca8 <f_read+0x1c4>
    1c70:	82 a9       	ldd	r24, Z+50	; 0x32
    1c72:	93 a9       	ldd	r25, Z+51	; 0x33
    1c74:	a4 a9       	ldd	r26, Z+52	; 0x34
    1c76:	b5 a9       	ldd	r27, Z+53	; 0x35
    1c78:	84 19       	sub	r24, r4
    1c7a:	95 09       	sbc	r25, r5
    1c7c:	a6 09       	sbc	r26, r6
    1c7e:	b7 09       	sbc	r27, r7
    1c80:	a7 01       	movw	r20, r14
    1c82:	60 e0       	ldi	r22, 0x00	; 0
    1c84:	70 e0       	ldi	r23, 0x00	; 0
    1c86:	84 17       	cp	r24, r20
    1c88:	95 07       	cpc	r25, r21
    1c8a:	a6 07       	cpc	r26, r22
    1c8c:	b7 07       	cpc	r27, r23
    1c8e:	60 f4       	brcc	.+24     	; 0x1ca8 <f_read+0x1c4>
    1c90:	bf 01       	movw	r22, r30
    1c92:	6a 5c       	subi	r22, 0xCA	; 202
    1c94:	7f 4f       	sbci	r23, 0xFF	; 255
    1c96:	98 2f       	mov	r25, r24
    1c98:	88 27       	eor	r24, r24
    1c9a:	99 0f       	add	r25, r25
    1c9c:	40 e0       	ldi	r20, 0x00	; 0
    1c9e:	52 e0       	ldi	r21, 0x02	; 2
    1ca0:	88 0d       	add	r24, r8
    1ca2:	99 1d       	adc	r25, r9
    1ca4:	0e 94 58 00 	call	0xb0	; 0xb0 <mem_cpy>
    1ca8:	fe 2c       	mov	r15, r14
    1caa:	ee 24       	eor	r14, r14
    1cac:	ff 0c       	add	r15, r15
    1cae:	2f c0       	rjmp	.+94     	; 0x1d0e <f_read+0x22a>
    1cb0:	4e 8a       	std	Y+22, r4	; 0x16
    1cb2:	5f 8a       	std	Y+23, r5	; 0x17
    1cb4:	68 8e       	std	Y+24, r6	; 0x18
    1cb6:	79 8e       	std	Y+25, r7	; 0x19
    1cb8:	2e 81       	ldd	r18, Y+6	; 0x06
    1cba:	3f 81       	ldd	r19, Y+7	; 0x07
    1cbc:	31 70       	andi	r19, 0x01	; 1
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	92 e0       	ldi	r25, 0x02	; 2
    1cc2:	82 1b       	sub	r24, r18
    1cc4:	93 0b       	sbc	r25, r19
    1cc6:	76 01       	movw	r14, r12
    1cc8:	8c 15       	cp	r24, r12
    1cca:	9d 05       	cpc	r25, r13
    1ccc:	08 f4       	brcc	.+2      	; 0x1cd0 <f_read+0x1ec>
    1cce:	7c 01       	movw	r14, r24
    1cd0:	4e 89       	ldd	r20, Y+22	; 0x16
    1cd2:	5f 89       	ldd	r21, Y+23	; 0x17
    1cd4:	68 8d       	ldd	r22, Y+24	; 0x18
    1cd6:	79 8d       	ldd	r23, Y+25	; 0x19
    1cd8:	88 81       	ld	r24, Y
    1cda:	99 81       	ldd	r25, Y+1	; 0x01
    1cdc:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    1ce0:	88 23       	and	r24, r24
    1ce2:	29 f0       	breq	.+10     	; 0x1cee <f_read+0x20a>
    1ce4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ce6:	80 68       	ori	r24, 0x80	; 128
    1ce8:	8c 83       	std	Y+4, r24	; 0x04
    1cea:	81 e0       	ldi	r24, 0x01	; 1
    1cec:	30 c0       	rjmp	.+96     	; 0x1d4e <f_read+0x26a>
    1cee:	8e 81       	ldd	r24, Y+6	; 0x06
    1cf0:	9f 81       	ldd	r25, Y+7	; 0x07
    1cf2:	a8 85       	ldd	r26, Y+8	; 0x08
    1cf4:	b9 85       	ldd	r27, Y+9	; 0x09
    1cf6:	91 70       	andi	r25, 0x01	; 1
    1cf8:	aa 27       	eor	r26, r26
    1cfa:	bb 27       	eor	r27, r27
    1cfc:	c6 96       	adiw	r24, 0x36	; 54
    1cfe:	68 81       	ld	r22, Y
    1d00:	79 81       	ldd	r23, Y+1	; 0x01
    1d02:	68 0f       	add	r22, r24
    1d04:	79 1f       	adc	r23, r25
    1d06:	a7 01       	movw	r20, r14
    1d08:	c4 01       	movw	r24, r8
    1d0a:	0e 94 58 00 	call	0xb0	; 0xb0 <mem_cpy>
    1d0e:	8e 0c       	add	r8, r14
    1d10:	9f 1c       	adc	r9, r15
    1d12:	8e 81       	ldd	r24, Y+6	; 0x06
    1d14:	9f 81       	ldd	r25, Y+7	; 0x07
    1d16:	a8 85       	ldd	r26, Y+8	; 0x08
    1d18:	b9 85       	ldd	r27, Y+9	; 0x09
    1d1a:	8e 0d       	add	r24, r14
    1d1c:	9f 1d       	adc	r25, r15
    1d1e:	a1 1d       	adc	r26, r1
    1d20:	b1 1d       	adc	r27, r1
    1d22:	8e 83       	std	Y+6, r24	; 0x06
    1d24:	9f 83       	std	Y+7, r25	; 0x07
    1d26:	a8 87       	std	Y+8, r26	; 0x08
    1d28:	b9 87       	std	Y+9, r27	; 0x09
    1d2a:	f5 01       	movw	r30, r10
    1d2c:	80 81       	ld	r24, Z
    1d2e:	91 81       	ldd	r25, Z+1	; 0x01
    1d30:	8e 0d       	add	r24, r14
    1d32:	9f 1d       	adc	r25, r15
    1d34:	91 83       	std	Z+1, r25	; 0x01
    1d36:	80 83       	st	Z, r24
    1d38:	ce 18       	sub	r12, r14
    1d3a:	df 08       	sbc	r13, r15
    1d3c:	09 f0       	breq	.+2      	; 0x1d40 <f_read+0x25c>
    1d3e:	0e cf       	rjmp	.-484    	; 0x1b5c <f_read+0x78>
    1d40:	80 e0       	ldi	r24, 0x00	; 0
    1d42:	05 c0       	rjmp	.+10     	; 0x1d4e <f_read+0x26a>
    1d44:	82 e0       	ldi	r24, 0x02	; 2
    1d46:	03 c0       	rjmp	.+6      	; 0x1d4e <f_read+0x26a>
    1d48:	87 e0       	ldi	r24, 0x07	; 7
    1d4a:	01 c0       	rjmp	.+2      	; 0x1d4e <f_read+0x26a>
    1d4c:	80 e0       	ldi	r24, 0x00	; 0
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	1f 91       	pop	r17
    1d54:	0f 91       	pop	r16
    1d56:	ff 90       	pop	r15
    1d58:	ef 90       	pop	r14
    1d5a:	df 90       	pop	r13
    1d5c:	cf 90       	pop	r12
    1d5e:	bf 90       	pop	r11
    1d60:	af 90       	pop	r10
    1d62:	9f 90       	pop	r9
    1d64:	8f 90       	pop	r8
    1d66:	7f 90       	pop	r7
    1d68:	6f 90       	pop	r6
    1d6a:	5f 90       	pop	r5
    1d6c:	4f 90       	pop	r4
    1d6e:	3f 90       	pop	r3
    1d70:	2f 90       	pop	r2
    1d72:	08 95       	ret

00001d74 <f_sync>:
    1d74:	0f 93       	push	r16
    1d76:	1f 93       	push	r17
    1d78:	cf 93       	push	r28
    1d7a:	df 93       	push	r29
    1d7c:	ec 01       	movw	r28, r24
    1d7e:	0e 94 7d 01 	call	0x2fa	; 0x2fa <validate>
    1d82:	98 2f       	mov	r25, r24
    1d84:	81 11       	cpse	r24, r1
    1d86:	91 c0       	rjmp	.+290    	; 0x1eaa <f_sync+0x136>
    1d88:	8c 81       	ldd	r24, Y+4	; 0x04
    1d8a:	85 ff       	sbrs	r24, 5
    1d8c:	8e c0       	rjmp	.+284    	; 0x1eaa <f_sync+0x136>
    1d8e:	4a 8d       	ldd	r20, Y+26	; 0x1a
    1d90:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1d92:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1d94:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1d96:	88 81       	ld	r24, Y
    1d98:	99 81       	ldd	r25, Y+1	; 0x01
    1d9a:	0e 94 44 01 	call	0x288	; 0x288 <move_window>
    1d9e:	98 2f       	mov	r25, r24
    1da0:	81 11       	cpse	r24, r1
    1da2:	83 c0       	rjmp	.+262    	; 0x1eaa <f_sync+0x136>
    1da4:	0e 8d       	ldd	r16, Y+30	; 0x1e
    1da6:	1f 8d       	ldd	r17, Y+31	; 0x1f
    1da8:	f8 01       	movw	r30, r16
    1daa:	83 85       	ldd	r24, Z+11	; 0x0b
    1dac:	80 62       	ori	r24, 0x20	; 32
    1dae:	83 87       	std	Z+11, r24	; 0x0b
    1db0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1db2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1db4:	ac 85       	ldd	r26, Y+12	; 0x0c
    1db6:	bd 85       	ldd	r27, Y+13	; 0x0d
    1db8:	84 8f       	std	Z+28, r24	; 0x1c
    1dba:	95 8f       	std	Z+29, r25	; 0x1d
    1dbc:	a6 8f       	std	Z+30, r26	; 0x1e
    1dbe:	b7 8f       	std	Z+31, r27	; 0x1f
    1dc0:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dc2:	9f 85       	ldd	r25, Y+15	; 0x0f
    1dc4:	a8 89       	ldd	r26, Y+16	; 0x10
    1dc6:	b9 89       	ldd	r27, Y+17	; 0x11
    1dc8:	93 8f       	std	Z+27, r25	; 0x1b
    1dca:	82 8f       	std	Z+26, r24	; 0x1a
    1dcc:	b5 8b       	std	Z+21, r27	; 0x15
    1dce:	a4 8b       	std	Z+20, r26	; 0x14
    1dd0:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <get_fattime>
    1dd4:	f8 01       	movw	r30, r16
    1dd6:	66 8b       	std	Z+22, r22	; 0x16
    1dd8:	77 8b       	std	Z+23, r23	; 0x17
    1dda:	80 8f       	std	Z+24, r24	; 0x18
    1ddc:	91 8f       	std	Z+25, r25	; 0x19
    1dde:	13 8a       	std	Z+19, r1	; 0x13
    1de0:	12 8a       	std	Z+18, r1	; 0x12
    1de2:	8c 81       	ldd	r24, Y+4	; 0x04
    1de4:	8f 7d       	andi	r24, 0xDF	; 223
    1de6:	8c 83       	std	Y+4, r24	; 0x04
    1de8:	e8 81       	ld	r30, Y
    1dea:	f9 81       	ldd	r31, Y+1	; 0x01
    1dec:	81 e0       	ldi	r24, 0x01	; 1
    1dee:	84 83       	std	Z+4, r24	; 0x04
    1df0:	09 90       	ld	r0, Y+
    1df2:	d8 81       	ld	r29, Y
    1df4:	c0 2d       	mov	r28, r0
    1df6:	ce 01       	movw	r24, r28
    1df8:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <sync_window>
    1dfc:	98 2f       	mov	r25, r24
    1dfe:	81 11       	cpse	r24, r1
    1e00:	54 c0       	rjmp	.+168    	; 0x1eaa <f_sync+0x136>
    1e02:	88 81       	ld	r24, Y
    1e04:	83 30       	cpi	r24, 0x03	; 3
    1e06:	09 f0       	breq	.+2      	; 0x1e0a <f_sync+0x96>
    1e08:	46 c0       	rjmp	.+140    	; 0x1e96 <f_sync+0x122>
    1e0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1e0c:	88 23       	and	r24, r24
    1e0e:	09 f4       	brne	.+2      	; 0x1e12 <f_sync+0x9e>
    1e10:	42 c0       	rjmp	.+132    	; 0x1e96 <f_sync+0x122>
    1e12:	1a aa       	std	Y+50, r1	; 0x32
    1e14:	1b aa       	std	Y+51, r1	; 0x33
    1e16:	1c aa       	std	Y+52, r1	; 0x34
    1e18:	1d aa       	std	Y+53, r1	; 0x35
    1e1a:	be 01       	movw	r22, r28
    1e1c:	6a 5c       	subi	r22, 0xCA	; 202
    1e1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e20:	fb 01       	movw	r30, r22
    1e22:	ce 01       	movw	r24, r28
    1e24:	8a 5c       	subi	r24, 0xCA	; 202
    1e26:	9d 4f       	sbci	r25, 0xFD	; 253
    1e28:	11 92       	st	Z+, r1
    1e2a:	e8 17       	cp	r30, r24
    1e2c:	f9 07       	cpc	r31, r25
    1e2e:	e1 f7       	brne	.-8      	; 0x1e28 <f_sync+0xb4>
    1e30:	85 e5       	ldi	r24, 0x55	; 85
    1e32:	9a ea       	ldi	r25, 0xAA	; 170
    1e34:	fe 01       	movw	r30, r28
    1e36:	ec 5c       	subi	r30, 0xCC	; 204
    1e38:	fd 4f       	sbci	r31, 0xFD	; 253
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	80 83       	st	Z, r24
    1e3e:	82 e5       	ldi	r24, 0x52	; 82
    1e40:	92 e5       	ldi	r25, 0x52	; 82
    1e42:	a1 e6       	ldi	r26, 0x61	; 97
    1e44:	b1 e4       	ldi	r27, 0x41	; 65
    1e46:	8e ab       	std	Y+54, r24	; 0x36
    1e48:	9f ab       	std	Y+55, r25	; 0x37
    1e4a:	a8 af       	std	Y+56, r26	; 0x38
    1e4c:	b9 af       	std	Y+57, r27	; 0x39
    1e4e:	82 e7       	ldi	r24, 0x72	; 114
    1e50:	92 e7       	ldi	r25, 0x72	; 114
    1e52:	a1 e4       	ldi	r26, 0x41	; 65
    1e54:	b1 e6       	ldi	r27, 0x61	; 97
    1e56:	7a 97       	sbiw	r30, 0x1a	; 26
    1e58:	80 83       	st	Z, r24
    1e5a:	91 83       	std	Z+1, r25	; 0x01
    1e5c:	a2 83       	std	Z+2, r26	; 0x02
    1e5e:	b3 83       	std	Z+3, r27	; 0x03
    1e60:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e62:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e64:	a8 89       	ldd	r26, Y+16	; 0x10
    1e66:	b9 89       	ldd	r27, Y+17	; 0x11
    1e68:	34 96       	adiw	r30, 0x04	; 4
    1e6a:	80 83       	st	Z, r24
    1e6c:	91 83       	std	Z+1, r25	; 0x01
    1e6e:	a2 83       	std	Z+2, r26	; 0x02
    1e70:	b3 83       	std	Z+3, r27	; 0x03
    1e72:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e74:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e76:	ac 85       	ldd	r26, Y+12	; 0x0c
    1e78:	bd 85       	ldd	r27, Y+13	; 0x0d
    1e7a:	34 96       	adiw	r30, 0x04	; 4
    1e7c:	80 83       	st	Z, r24
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	a2 83       	std	Z+2, r26	; 0x02
    1e82:	b3 83       	std	Z+3, r27	; 0x03
    1e84:	2a 89       	ldd	r18, Y+18	; 0x12
    1e86:	3b 89       	ldd	r19, Y+19	; 0x13
    1e88:	4c 89       	ldd	r20, Y+20	; 0x14
    1e8a:	5d 89       	ldd	r21, Y+21	; 0x15
    1e8c:	01 e0       	ldi	r16, 0x01	; 1
    1e8e:	89 81       	ldd	r24, Y+1	; 0x01
    1e90:	0e 94 da 11 	call	0x23b4	; 0x23b4 <disk_write>
    1e94:	1d 82       	std	Y+5, r1	; 0x05
    1e96:	40 e0       	ldi	r20, 0x00	; 0
    1e98:	50 e0       	ldi	r21, 0x00	; 0
    1e9a:	60 e0       	ldi	r22, 0x00	; 0
    1e9c:	89 81       	ldd	r24, Y+1	; 0x01
    1e9e:	0e 94 46 12 	call	0x248c	; 0x248c <disk_ioctl>
    1ea2:	91 e0       	ldi	r25, 0x01	; 1
    1ea4:	81 11       	cpse	r24, r1
    1ea6:	01 c0       	rjmp	.+2      	; 0x1eaa <f_sync+0x136>
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	89 2f       	mov	r24, r25
    1eac:	df 91       	pop	r29
    1eae:	cf 91       	pop	r28
    1eb0:	1f 91       	pop	r17
    1eb2:	0f 91       	pop	r16
    1eb4:	08 95       	ret

00001eb6 <f_close>:
    1eb6:	cf 93       	push	r28
    1eb8:	df 93       	push	r29
    1eba:	ec 01       	movw	r28, r24
    1ebc:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <f_sync>
    1ec0:	81 11       	cpse	r24, r1
    1ec2:	02 c0       	rjmp	.+4      	; 0x1ec8 <f_close+0x12>
    1ec4:	19 82       	std	Y+1, r1	; 0x01
    1ec6:	18 82       	st	Y, r1
    1ec8:	df 91       	pop	r29
    1eca:	cf 91       	pop	r28
    1ecc:	08 95       	ret

00001ece <f_gets>:
TCHAR* f_gets (
	TCHAR* buff,	/* Pointer to the string buffer to read */
	int len,		/* Size of string buffer (characters) */
	FIL* fp			/* Pointer to the file object */
)
{
    1ece:	8f 92       	push	r8
    1ed0:	9f 92       	push	r9
    1ed2:	af 92       	push	r10
    1ed4:	bf 92       	push	r11
    1ed6:	cf 92       	push	r12
    1ed8:	df 92       	push	r13
    1eda:	ef 92       	push	r14
    1edc:	ff 92       	push	r15
    1ede:	0f 93       	push	r16
    1ee0:	1f 93       	push	r17
    1ee2:	cf 93       	push	r28
    1ee4:	df 93       	push	r29
    1ee6:	00 d0       	rcall	.+0      	; 0x1ee8 <f_gets+0x1a>
    1ee8:	00 d0       	rcall	.+0      	; 0x1eea <f_gets+0x1c>
    1eea:	cd b7       	in	r28, 0x3d	; 61
    1eec:	de b7       	in	r29, 0x3e	; 62
    1eee:	88 2e       	mov	r8, r24
    1ef0:	99 2e       	mov	r9, r25
    1ef2:	5a 01       	movw	r10, r20
	int n = 0;
	TCHAR c, *p = buff;
    1ef4:	08 2f       	mov	r16, r24
    1ef6:	19 2f       	mov	r17, r25
	TCHAR* buff,	/* Pointer to the string buffer to read */
	int len,		/* Size of string buffer (characters) */
	FIL* fp			/* Pointer to the file object */
)
{
	int n = 0;
    1ef8:	e1 2c       	mov	r14, r1
    1efa:	f1 2c       	mov	r15, r1
	TCHAR c, *p = buff;
	BYTE s[2];
	UINT rc;


	while (n < len - 1) {			/* Read bytes until buffer gets filled */
    1efc:	6b 01       	movw	r12, r22
    1efe:	81 e0       	ldi	r24, 0x01	; 1
    1f00:	c8 1a       	sub	r12, r24
    1f02:	d1 08       	sbc	r13, r1
    1f04:	1b c0       	rjmp	.+54     	; 0x1f3c <f_gets+0x6e>
		f_read(fp, s, 1, &rc);
    1f06:	9e 01       	movw	r18, r28
    1f08:	2d 5f       	subi	r18, 0xFD	; 253
    1f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f0c:	41 e0       	ldi	r20, 0x01	; 1
    1f0e:	50 e0       	ldi	r21, 0x00	; 0
    1f10:	be 01       	movw	r22, r28
    1f12:	6f 5f       	subi	r22, 0xFF	; 255
    1f14:	7f 4f       	sbci	r23, 0xFF	; 255
    1f16:	c5 01       	movw	r24, r10
    1f18:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <f_read>
		if (rc != 1) break;			/* Break on EOF or error */
    1f1c:	2b 81       	ldd	r18, Y+3	; 0x03
    1f1e:	3c 81       	ldd	r19, Y+4	; 0x04
    1f20:	21 30       	cpi	r18, 0x01	; 1
    1f22:	31 05       	cpc	r19, r1
    1f24:	71 f4       	brne	.+28     	; 0x1f42 <f_gets+0x74>
		c = s[0];
    1f26:	29 81       	ldd	r18, Y+1	; 0x01
		}
#endif
#if _USE_STRFUNC >= 2
		if (c == '\r') continue;	/* Strip '\r' */
#endif
		*p++ = c;
    1f28:	0f 5f       	subi	r16, 0xFF	; 255
    1f2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2c:	f8 01       	movw	r30, r16
    1f2e:	31 97       	sbiw	r30, 0x01	; 1
    1f30:	20 83       	st	Z, r18
		n++;
    1f32:	ef ef       	ldi	r30, 0xFF	; 255
    1f34:	ee 1a       	sub	r14, r30
    1f36:	fe 0a       	sbc	r15, r30
		if (c == '\n') break;		/* Break on EOL */
    1f38:	2a 30       	cpi	r18, 0x0A	; 10
    1f3a:	19 f0       	breq	.+6      	; 0x1f42 <f_gets+0x74>
	TCHAR c, *p = buff;
	BYTE s[2];
	UINT rc;


	while (n < len - 1) {			/* Read bytes until buffer gets filled */
    1f3c:	ec 14       	cp	r14, r12
    1f3e:	fd 04       	cpc	r15, r13
    1f40:	14 f3       	brlt	.-60     	; 0x1f06 <f_gets+0x38>
#endif
		*p++ = c;
		n++;
		if (c == '\n') break;		/* Break on EOL */
	}
	*p = 0;
    1f42:	f8 01       	movw	r30, r16
    1f44:	10 82       	st	Z, r1
	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
    1f46:	ef 28       	or	r14, r15
    1f48:	19 f0       	breq	.+6      	; 0x1f50 <f_gets+0x82>
    1f4a:	88 2d       	mov	r24, r8
    1f4c:	99 2d       	mov	r25, r9
    1f4e:	02 c0       	rjmp	.+4      	; 0x1f54 <f_gets+0x86>
    1f50:	80 e0       	ldi	r24, 0x00	; 0
    1f52:	90 e0       	ldi	r25, 0x00	; 0
}
    1f54:	0f 90       	pop	r0
    1f56:	0f 90       	pop	r0
    1f58:	0f 90       	pop	r0
    1f5a:	0f 90       	pop	r0
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	1f 91       	pop	r17
    1f62:	0f 91       	pop	r16
    1f64:	ff 90       	pop	r15
    1f66:	ef 90       	pop	r14
    1f68:	df 90       	pop	r13
    1f6a:	cf 90       	pop	r12
    1f6c:	bf 90       	pop	r11
    1f6e:	af 90       	pop	r10
    1f70:	9f 90       	pop	r9
    1f72:	8f 90       	pop	r8
    1f74:	08 95       	ret

00001f76 <power_off>:
}

static
void power_off (void)
{
	SPCR = 0;				/* Disable SPI function */
    1f76:	1d b8       	out	0x0d, r1	; 13

   DDRB  &= ~(SS | SCK | MOSI);   /* Set SCK/MOSI/CS as hi-z, INS#/WP as pull-up */
    1f78:	87 b3       	in	r24, 0x17	; 23
    1f7a:	8f 74       	andi	r24, 0x4F	; 79
    1f7c:	87 bb       	out	0x17, r24	; 23
   PORTB &= ~(SS | SCK | MOSI);
    1f7e:	88 b3       	in	r24, 0x18	; 24
    1f80:	8f 74       	andi	r24, 0x4F	; 79
    1f82:	88 bb       	out	0x18, r24	; 24
    1f84:	08 95       	ret

00001f86 <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
    1f86:	8f b9       	out	0x0f, r24	; 15
	loop_until_bit_is_set(SPSR, SPIF);
    1f88:	77 9b       	sbis	0x0e, 7	; 14
    1f8a:	fe cf       	rjmp	.-4      	; 0x1f88 <xchg_spi+0x2>
	return SPDR;
    1f8c:	8f b1       	in	r24, 0x0f	; 15
}
    1f8e:	08 95       	ret

00001f90 <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    1f90:	c4 9a       	sbi	0x18, 4	; 24
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
    1f92:	8f ef       	ldi	r24, 0xFF	; 255
    1f94:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    1f98:	08 95       	ret

00001f9a <select>:
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
    1f9a:	c4 98       	cbi	0x18, 4	; 24
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
    1f9c:	8f ef       	ldi	r24, 0xFF	; 255
    1f9e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
)
{
	BYTE d;


	Timer2 = wt / 10;
    1fa2:	82 e3       	ldi	r24, 0x32	; 50
    1fa4:	80 93 80 00 	sts	0x0080, r24
	do
		d = xchg_spi(0xFF);
    1fa8:	8f ef       	ldi	r24, 0xFF	; 255
    1faa:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	while (d != 0xFF && Timer2);
    1fae:	8f 3f       	cpi	r24, 0xFF	; 255
    1fb0:	49 f0       	breq	.+18     	; 0x1fc4 <select+0x2a>
    1fb2:	80 91 80 00 	lds	r24, 0x0080
    1fb6:	81 11       	cpse	r24, r1
    1fb8:	f7 cf       	rjmp	.-18     	; 0x1fa8 <select+0xe>
{
	CS_LOW();
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */

	if (wait_ready(500)) return 1;	/* OK */
	deselect();
    1fba:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>
	return 0;	/* Timeout */
    1fbe:	80 e0       	ldi	r24, 0x00	; 0
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	08 95       	ret
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */

	if (wait_ready(500)) return 1;	/* OK */
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
	deselect();
	return 0;	/* Timeout */
}
    1fc8:	08 95       	ret

00001fca <rcvr_datablock>:
static
int rcvr_datablock (
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count (must be multiple of 4) */
)
{
    1fca:	0f 93       	push	r16
    1fcc:	1f 93       	push	r17
    1fce:	cf 93       	push	r28
    1fd0:	df 93       	push	r29
    1fd2:	ec 01       	movw	r28, r24
    1fd4:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
    1fd6:	84 e1       	ldi	r24, 0x14	; 20
    1fd8:	80 93 81 00 	sts	0x0081, r24
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
    1fdc:	8f ef       	ldi	r24, 0xFF	; 255
    1fde:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	} while ((token == 0xFF) && Timer1);
    1fe2:	8f 3f       	cpi	r24, 0xFF	; 255
    1fe4:	39 f4       	brne	.+14     	; 0x1ff4 <rcvr_datablock+0x2a>
    1fe6:	90 91 81 00 	lds	r25, 0x0081
    1fea:	91 11       	cpse	r25, r1
    1fec:	f7 cf       	rjmp	.-18     	; 0x1fdc <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	1e c0       	rjmp	.+60     	; 0x2030 <rcvr_datablock+0x66>
    1ff4:	8e 3f       	cpi	r24, 0xFE	; 254
    1ff6:	d1 f4       	brne	.+52     	; 0x202c <rcvr_datablock+0x62>
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block */
)
{
	do {
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
    1ff8:	8f ef       	ldi	r24, 0xFF	; 255
    1ffa:	8f b9       	out	0x0f, r24	; 15
    1ffc:	77 9b       	sbis	0x0e, 7	; 14
    1ffe:	fe cf       	rjmp	.-4      	; 0x1ffc <rcvr_datablock+0x32>
    2000:	9f b1       	in	r25, 0x0f	; 15
    2002:	98 83       	st	Y, r25
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
    2004:	8f b9       	out	0x0f, r24	; 15
    2006:	77 9b       	sbis	0x0e, 7	; 14
    2008:	fe cf       	rjmp	.-4      	; 0x2006 <rcvr_datablock+0x3c>
    200a:	22 96       	adiw	r28, 0x02	; 2
    200c:	9f b1       	in	r25, 0x0f	; 15
    200e:	fe 01       	movw	r30, r28
    2010:	31 97       	sbiw	r30, 0x01	; 1
    2012:	90 83       	st	Z, r25
	} while (cnt -= 2);
    2014:	02 50       	subi	r16, 0x02	; 2
    2016:	11 09       	sbc	r17, r1
    2018:	81 f7       	brne	.-32     	; 0x1ffa <rcvr_datablock+0x30>
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
    201a:	8f ef       	ldi	r24, 0xFF	; 255
    201c:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	xchg_spi(0xFF);
    2020:	8f ef       	ldi	r24, 0xFF	; 255
    2022:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>

	return 1;						/* Return with success */
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <rcvr_datablock+0x66>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    2030:	df 91       	pop	r29
    2032:	cf 91       	pop	r28
    2034:	1f 91       	pop	r17
    2036:	0f 91       	pop	r16
    2038:	08 95       	ret

0000203a <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    203a:	ff 92       	push	r15
    203c:	0f 93       	push	r16
    203e:	1f 93       	push	r17
    2040:	cf 93       	push	r28
    2042:	df 93       	push	r29
    2044:	c8 2f       	mov	r28, r24
    2046:	d4 2f       	mov	r29, r20
    2048:	15 2f       	mov	r17, r21
    204a:	06 2f       	mov	r16, r22
    204c:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
    204e:	88 23       	and	r24, r24
    2050:	4c f4       	brge	.+18     	; 0x2064 <send_cmd+0x2a>
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
    2052:	40 e0       	ldi	r20, 0x00	; 0
    2054:	50 e0       	ldi	r21, 0x00	; 0
    2056:	ba 01       	movw	r22, r20
    2058:	87 e3       	ldi	r24, 0x37	; 55
    205a:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
		if (res > 1) return res;
    205e:	82 30       	cpi	r24, 0x02	; 2
    2060:	b0 f5       	brcc	.+108    	; 0x20ce <send_cmd+0x94>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
    2062:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready */
	deselect();
    2064:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>
	if (!select()) return 0xFF;
    2068:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <select>
    206c:	89 2b       	or	r24, r25
    206e:	29 f1       	breq	.+74     	; 0x20ba <send_cmd+0x80>

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
    2070:	8c 2f       	mov	r24, r28
    2072:	80 64       	ori	r24, 0x40	; 64
    2074:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
    2078:	8f 2d       	mov	r24, r15
    207a:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
    207e:	80 2f       	mov	r24, r16
    2080:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
    2084:	81 2f       	mov	r24, r17
    2086:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
    208a:	8d 2f       	mov	r24, r29
    208c:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
    2090:	cc 23       	and	r28, r28
    2092:	c9 f0       	breq	.+50     	; 0x20c6 <send_cmd+0x8c>
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
    2094:	c8 30       	cpi	r28, 0x08	; 8
    2096:	99 f0       	breq	.+38     	; 0x20be <send_cmd+0x84>
	xchg_spi(n);
    2098:	81 e0       	ldi	r24, 0x01	; 1
    209a:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
    209e:	cc 30       	cpi	r28, 0x0C	; 12
    20a0:	19 f4       	brne	.+6      	; 0x20a8 <send_cmd+0x6e>
    20a2:	8f ef       	ldi	r24, 0xFF	; 255
    20a4:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    20a8:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
    20aa:	8f ef       	ldi	r24, 0xFF	; 255
    20ac:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	while ((res & 0x80) && --n);
    20b0:	88 23       	and	r24, r24
    20b2:	6c f4       	brge	.+26     	; 0x20ce <send_cmd+0x94>
    20b4:	c1 50       	subi	r28, 0x01	; 1
    20b6:	c9 f7       	brne	.-14     	; 0x20aa <send_cmd+0x70>
    20b8:	0a c0       	rjmp	.+20     	; 0x20ce <send_cmd+0x94>
		if (res > 1) return res;
	}

	/* Select the card and wait for ready */
	deselect();
	if (!select()) return 0xFF;
    20ba:	8f ef       	ldi	r24, 0xFF	; 255
    20bc:	08 c0       	rjmp	.+16     	; 0x20ce <send_cmd+0x94>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
    20be:	87 e8       	ldi	r24, 0x87	; 135
    20c0:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    20c4:	f1 cf       	rjmp	.-30     	; 0x20a8 <send_cmd+0x6e>
    20c6:	85 e9       	ldi	r24, 0x95	; 149
    20c8:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    20cc:	ed cf       	rjmp	.-38     	; 0x20a8 <send_cmd+0x6e>
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	1f 91       	pop	r17
    20d4:	0f 91       	pop	r16
    20d6:	ff 90       	pop	r15
    20d8:	08 95       	ret

000020da <xmit_datablock>:
static
int xmit_datablock (
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
    20da:	1f 93       	push	r17
    20dc:	cf 93       	push	r28
    20de:	df 93       	push	r29
    20e0:	ec 01       	movw	r28, r24
    20e2:	16 2f       	mov	r17, r22
)
{
	BYTE d;


	Timer2 = wt / 10;
    20e4:	92 e3       	ldi	r25, 0x32	; 50
    20e6:	90 93 80 00 	sts	0x0080, r25
	do
		d = xchg_spi(0xFF);
    20ea:	8f ef       	ldi	r24, 0xFF	; 255
    20ec:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	while (d != 0xFF && Timer2);
    20f0:	8f 3f       	cpi	r24, 0xFF	; 255
    20f2:	31 f0       	breq	.+12     	; 0x2100 <xmit_datablock+0x26>
    20f4:	90 91 80 00 	lds	r25, 0x0080
    20f8:	91 11       	cpse	r25, r1
    20fa:	f7 cf       	rjmp	.-18     	; 0x20ea <xmit_datablock+0x10>
)
{
	BYTE resp;


	if (!wait_ready(500)) return 0;
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	28 c0       	rjmp	.+80     	; 0x2150 <xmit_datablock+0x76>

	xchg_spi(token);					/* Xmit data token */
    2100:	81 2f       	mov	r24, r17
    2102:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
    2106:	1d 3f       	cpi	r17, 0xFD	; 253
    2108:	09 f1       	breq	.+66     	; 0x214c <xmit_datablock+0x72>
    210a:	9e 01       	movw	r18, r28
    210c:	3e 5f       	subi	r19, 0xFE	; 254
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block */
)
{
	do {
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
    210e:	88 81       	ld	r24, Y
    2110:	8f b9       	out	0x0f, r24	; 15
    2112:	77 9b       	sbis	0x0e, 7	; 14
    2114:	fe cf       	rjmp	.-4      	; 0x2112 <xmit_datablock+0x38>
    2116:	22 96       	adiw	r28, 0x02	; 2
    2118:	fe 01       	movw	r30, r28
    211a:	31 97       	sbiw	r30, 0x01	; 1
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
    211c:	80 81       	ld	r24, Z
    211e:	8f b9       	out	0x0f, r24	; 15
    2120:	77 9b       	sbis	0x0e, 7	; 14
    2122:	fe cf       	rjmp	.-4      	; 0x2120 <xmit_datablock+0x46>
	} while (cnt -= 2);
    2124:	c2 17       	cp	r28, r18
    2126:	d3 07       	cpc	r29, r19
    2128:	91 f7       	brne	.-28     	; 0x210e <xmit_datablock+0x34>
	if (!wait_ready(500)) return 0;

	xchg_spi(token);					/* Xmit data token */
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
    212a:	8f ef       	ldi	r24, 0xFF	; 255
    212c:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
		xchg_spi(0xFF);
    2130:	8f ef       	ldi	r24, 0xFF	; 255
    2132:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
    2136:	8f ef       	ldi	r24, 0xFF	; 255
    2138:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    213c:	28 2f       	mov	r18, r24
    213e:	2f 71       	andi	r18, 0x1F	; 31
    2140:	81 e0       	ldi	r24, 0x01	; 1
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	25 30       	cpi	r18, 0x05	; 5
    2146:	21 f0       	breq	.+8      	; 0x2150 <xmit_datablock+0x76>
    2148:	80 e0       	ldi	r24, 0x00	; 0
    214a:	02 c0       	rjmp	.+4      	; 0x2150 <xmit_datablock+0x76>
			return 0;
	}

	return 1;
    214c:	81 e0       	ldi	r24, 0x01	; 1
    214e:	90 e0       	ldi	r25, 0x00	; 0
}
    2150:	df 91       	pop	r29
    2152:	cf 91       	pop	r28
    2154:	1f 91       	pop	r17
    2156:	08 95       	ret

00002158 <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
    2158:	cf 92       	push	r12
    215a:	df 92       	push	r13
    215c:	ef 92       	push	r14
    215e:	ff 92       	push	r15
    2160:	0f 93       	push	r16
    2162:	1f 93       	push	r17
    2164:	cf 93       	push	r28
    2166:	df 93       	push	r29
    2168:	00 d0       	rcall	.+0      	; 0x216a <disk_initialize+0x12>
    216a:	00 d0       	rcall	.+0      	; 0x216c <disk_initialize+0x14>
    216c:	cd b7       	in	r28, 0x3d	; 61
    216e:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    2170:	81 11       	cpse	r24, r1
    2172:	ac c0       	rjmp	.+344    	; 0x22cc <disk_initialize+0x174>
	power_off();						/* Turn off the socket power to reset the card */
    2174:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <power_off>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
    2178:	80 91 60 00 	lds	r24, 0x0060
    217c:	81 ff       	sbrs	r24, 1
    217e:	03 c0       	rjmp	.+6      	; 0x2186 <disk_initialize+0x2e>
    2180:	80 91 60 00 	lds	r24, 0x0060
    2184:	b0 c0       	rjmp	.+352    	; 0x22e6 <disk_initialize+0x18e>
}

static
void power_on (void)
{
   PORTB |= SS | MOSI;		/* Configure SCK/MOSI/CS as output */
    2186:	88 b3       	in	r24, 0x18	; 24
    2188:	80 63       	ori	r24, 0x30	; 48
    218a:	88 bb       	out	0x18, r24	; 24
   DDRB  |= SS | SCK | MOSI;
    218c:	87 b3       	in	r24, 0x17	; 23
    218e:	80 6b       	ori	r24, 0xB0	; 176
    2190:	87 bb       	out	0x17, r24	; 23

	SPCR = 0x52;			/* Enable SPI function in mode 0 */
    2192:	82 e5       	ldi	r24, 0x52	; 82
    2194:	8d b9       	out	0x0d, r24	; 13
	SPSR = 0x01;			/* SPI 2x mode */
    2196:	91 e0       	ldi	r25, 0x01	; 1
    2198:	9e b9       	out	0x0e, r25	; 14

	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
    219a:	8d b9       	out	0x0d, r24	; 13
    219c:	1a e0       	ldi	r17, 0x0A	; 10
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
    219e:	8f ef       	ldi	r24, 0xFF	; 255
    21a0:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    21a4:	11 50       	subi	r17, 0x01	; 1
    21a6:	d9 f7       	brne	.-10     	; 0x219e <disk_initialize+0x46>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    21a8:	40 e0       	ldi	r20, 0x00	; 0
    21aa:	50 e0       	ldi	r21, 0x00	; 0
    21ac:	ba 01       	movw	r22, r20
    21ae:	80 e0       	ldi	r24, 0x00	; 0
    21b0:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    21b4:	81 30       	cpi	r24, 0x01	; 1
    21b6:	09 f0       	breq	.+2      	; 0x21ba <disk_initialize+0x62>
    21b8:	91 c0       	rjmp	.+290    	; 0x22dc <disk_initialize+0x184>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
    21ba:	84 e6       	ldi	r24, 0x64	; 100
    21bc:	80 93 81 00 	sts	0x0081, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    21c0:	4a ea       	ldi	r20, 0xAA	; 170
    21c2:	51 e0       	ldi	r21, 0x01	; 1
    21c4:	60 e0       	ldi	r22, 0x00	; 0
    21c6:	70 e0       	ldi	r23, 0x00	; 0
    21c8:	88 e0       	ldi	r24, 0x08	; 8
    21ca:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    21ce:	81 30       	cpi	r24, 0x01	; 1
    21d0:	09 f0       	breq	.+2      	; 0x21d4 <disk_initialize+0x7c>
    21d2:	43 c0       	rjmp	.+134    	; 0x225a <disk_initialize+0x102>
    21d4:	ce 01       	movw	r24, r28
    21d6:	01 96       	adiw	r24, 0x01	; 1
    21d8:	6c 01       	movw	r12, r24
    21da:	7e 01       	movw	r14, r28
    21dc:	95 e0       	ldi	r25, 0x05	; 5
    21de:	e9 0e       	add	r14, r25
    21e0:	f1 1c       	adc	r15, r1
    21e2:	86 01       	movw	r16, r12
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
    21e4:	8f ef       	ldi	r24, 0xFF	; 255
    21e6:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    21ea:	f8 01       	movw	r30, r16
    21ec:	81 93       	st	Z+, r24
    21ee:	8f 01       	movw	r16, r30
    21f0:	ee 15       	cp	r30, r14
    21f2:	ff 05       	cpc	r31, r15
    21f4:	b9 f7       	brne	.-18     	; 0x21e4 <disk_initialize+0x8c>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
    21f6:	8b 81       	ldd	r24, Y+3	; 0x03
    21f8:	81 30       	cpi	r24, 0x01	; 1
    21fa:	09 f0       	breq	.+2      	; 0x21fe <disk_initialize+0xa6>
    21fc:	6f c0       	rjmp	.+222    	; 0x22dc <disk_initialize+0x184>
    21fe:	8c 81       	ldd	r24, Y+4	; 0x04
    2200:	8a 3a       	cpi	r24, 0xAA	; 170
    2202:	09 f0       	breq	.+2      	; 0x2206 <disk_initialize+0xae>
    2204:	6b c0       	rjmp	.+214    	; 0x22dc <disk_initialize+0x184>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
    2206:	80 91 81 00 	lds	r24, 0x0081
    220a:	88 23       	and	r24, r24
    220c:	49 f0       	breq	.+18     	; 0x2220 <disk_initialize+0xc8>
    220e:	40 e0       	ldi	r20, 0x00	; 0
    2210:	50 e0       	ldi	r21, 0x00	; 0
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	70 e4       	ldi	r23, 0x40	; 64
    2216:	89 ea       	ldi	r24, 0xA9	; 169
    2218:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    221c:	81 11       	cpse	r24, r1
    221e:	f3 cf       	rjmp	.-26     	; 0x2206 <disk_initialize+0xae>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
    2220:	80 91 81 00 	lds	r24, 0x0081
    2224:	88 23       	and	r24, r24
    2226:	09 f4       	brne	.+2      	; 0x222a <disk_initialize+0xd2>
    2228:	59 c0       	rjmp	.+178    	; 0x22dc <disk_initialize+0x184>
    222a:	40 e0       	ldi	r20, 0x00	; 0
    222c:	50 e0       	ldi	r21, 0x00	; 0
    222e:	ba 01       	movw	r22, r20
    2230:	8a e3       	ldi	r24, 0x3A	; 58
    2232:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2236:	81 11       	cpse	r24, r1
    2238:	51 c0       	rjmp	.+162    	; 0x22dc <disk_initialize+0x184>
    223a:	76 01       	movw	r14, r12
    223c:	14 e0       	ldi	r17, 0x04	; 4
    223e:	1c 0d       	add	r17, r12
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
    2240:	8f ef       	ldi	r24, 0xFF	; 255
    2242:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    2246:	f7 01       	movw	r30, r14
    2248:	81 93       	st	Z+, r24
    224a:	7f 01       	movw	r14, r30
    224c:	1e 13       	cpse	r17, r30
    224e:	f8 cf       	rjmp	.-16     	; 0x2240 <disk_initialize+0xe8>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    2250:	89 81       	ldd	r24, Y+1	; 0x01
    2252:	86 fd       	sbrc	r24, 6
    2254:	3d c0       	rjmp	.+122    	; 0x22d0 <disk_initialize+0x178>
    2256:	84 e0       	ldi	r24, 0x04	; 4
    2258:	3c c0       	rjmp	.+120    	; 0x22d2 <disk_initialize+0x17a>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    225a:	40 e0       	ldi	r20, 0x00	; 0
    225c:	50 e0       	ldi	r21, 0x00	; 0
    225e:	ba 01       	movw	r22, r20
    2260:	89 ea       	ldi	r24, 0xA9	; 169
    2262:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2266:	82 30       	cpi	r24, 0x02	; 2
    2268:	18 f0       	brcs	.+6      	; 0x2270 <disk_initialize+0x118>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    226a:	01 e0       	ldi	r16, 0x01	; 1
    226c:	11 e0       	ldi	r17, 0x01	; 1
    226e:	02 c0       	rjmp	.+4      	; 0x2274 <disk_initialize+0x11c>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    2270:	02 e0       	ldi	r16, 0x02	; 2
    2272:	19 ea       	ldi	r17, 0xA9	; 169
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
    2274:	90 91 81 00 	lds	r25, 0x0081
    2278:	99 23       	and	r25, r25
    227a:	41 f0       	breq	.+16     	; 0x228c <disk_initialize+0x134>
    227c:	40 e0       	ldi	r20, 0x00	; 0
    227e:	50 e0       	ldi	r21, 0x00	; 0
    2280:	ba 01       	movw	r22, r20
    2282:	81 2f       	mov	r24, r17
    2284:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2288:	81 11       	cpse	r24, r1
    228a:	f4 cf       	rjmp	.-24     	; 0x2274 <disk_initialize+0x11c>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    228c:	80 91 81 00 	lds	r24, 0x0081
    2290:	88 23       	and	r24, r24
    2292:	21 f1       	breq	.+72     	; 0x22dc <disk_initialize+0x184>
    2294:	40 e0       	ldi	r20, 0x00	; 0
    2296:	52 e0       	ldi	r21, 0x02	; 2
    2298:	60 e0       	ldi	r22, 0x00	; 0
    229a:	70 e0       	ldi	r23, 0x00	; 0
    229c:	80 e1       	ldi	r24, 0x10	; 16
    229e:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    22a2:	81 11       	cpse	r24, r1
    22a4:	1b c0       	rjmp	.+54     	; 0x22dc <disk_initialize+0x184>
				ty = 0;
		}
	}
	CardType = ty;
    22a6:	00 93 7f 00 	sts	0x007F, r16
	deselect();
    22aa:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>

	if (ty) {			/* Initialization succeded */
    22ae:	00 23       	and	r16, r16
    22b0:	41 f0       	breq	.+16     	; 0x22c2 <disk_initialize+0x16a>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
    22b2:	80 91 60 00 	lds	r24, 0x0060
    22b6:	8e 7f       	andi	r24, 0xFE	; 254
    22b8:	80 93 60 00 	sts	0x0060, r24
		FCLK_FAST();
    22bc:	80 e5       	ldi	r24, 0x50	; 80
    22be:	8d b9       	out	0x0d, r24	; 13
    22c0:	02 c0       	rjmp	.+4      	; 0x22c6 <disk_initialize+0x16e>
	} else {			/* Initialization failed */
		power_off();
    22c2:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <power_off>
	}

	return Stat;
    22c6:	80 91 60 00 	lds	r24, 0x0060
    22ca:	0d c0       	rjmp	.+26     	; 0x22e6 <disk_initialize+0x18e>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    22cc:	81 e0       	ldi	r24, 0x01	; 1
    22ce:	0b c0       	rjmp	.+22     	; 0x22e6 <disk_initialize+0x18e>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    22d0:	8c e0       	ldi	r24, 0x0C	; 12
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    22d2:	80 93 7f 00 	sts	0x007F, r24
	deselect();
    22d6:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>
    22da:	eb cf       	rjmp	.-42     	; 0x22b2 <disk_initialize+0x15a>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    22dc:	10 92 7f 00 	sts	0x007F, r1
	deselect();
    22e0:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>
    22e4:	ee cf       	rjmp	.-36     	; 0x22c2 <disk_initialize+0x16a>
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
    22e6:	0f 90       	pop	r0
    22e8:	0f 90       	pop	r0
    22ea:	0f 90       	pop	r0
    22ec:	0f 90       	pop	r0
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	1f 91       	pop	r17
    22f4:	0f 91       	pop	r16
    22f6:	ff 90       	pop	r15
    22f8:	ef 90       	pop	r14
    22fa:	df 90       	pop	r13
    22fc:	cf 90       	pop	r12
    22fe:	08 95       	ret

00002300 <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    2300:	81 11       	cpse	r24, r1
    2302:	03 c0       	rjmp	.+6      	; 0x230a <disk_status+0xa>
	return Stat;
    2304:	80 91 60 00 	lds	r24, 0x0060
    2308:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    230a:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
    230c:	08 95       	ret

0000230e <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..255) */
)
{
    230e:	0f 93       	push	r16
    2310:	cf 93       	push	r28
    2312:	df 93       	push	r29
    2314:	eb 01       	movw	r28, r22
	if (pdrv || !count) return RES_PARERR;
    2316:	81 11       	cpse	r24, r1
    2318:	44 c0       	rjmp	.+136    	; 0x23a2 <disk_read+0x94>
    231a:	00 23       	and	r16, r16
    231c:	09 f4       	brne	.+2      	; 0x2320 <disk_read+0x12>
    231e:	43 c0       	rjmp	.+134    	; 0x23a6 <disk_read+0x98>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    2320:	80 91 60 00 	lds	r24, 0x0060
    2324:	80 fd       	sbrc	r24, 0
    2326:	41 c0       	rjmp	.+130    	; 0x23aa <disk_read+0x9c>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    2328:	80 91 7f 00 	lds	r24, 0x007F
    232c:	83 fd       	sbrc	r24, 3
    232e:	09 c0       	rjmp	.+18     	; 0x2342 <disk_read+0x34>
    2330:	01 2e       	mov	r0, r17
    2332:	19 e0       	ldi	r17, 0x09	; 9
    2334:	22 0f       	add	r18, r18
    2336:	33 1f       	adc	r19, r19
    2338:	44 1f       	adc	r20, r20
    233a:	55 1f       	adc	r21, r21
    233c:	1a 95       	dec	r17
    233e:	d1 f7       	brne	.-12     	; 0x2334 <disk_read+0x26>
    2340:	10 2d       	mov	r17, r0

	if (count == 1) {	/* Single block read */
    2342:	01 30       	cpi	r16, 0x01	; 1
    2344:	81 f4       	brne	.+32     	; 0x2366 <disk_read+0x58>
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    2346:	ba 01       	movw	r22, r20
    2348:	a9 01       	movw	r20, r18
    234a:	81 e1       	ldi	r24, 0x11	; 17
    234c:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2350:	81 11       	cpse	r24, r1
    2352:	20 c0       	rjmp	.+64     	; 0x2394 <disk_read+0x86>
			&& rcvr_datablock(buff, 512))
    2354:	60 e0       	ldi	r22, 0x00	; 0
    2356:	72 e0       	ldi	r23, 0x02	; 2
    2358:	ce 01       	movw	r24, r28
    235a:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    235e:	89 2b       	or	r24, r25
    2360:	c9 f0       	breq	.+50     	; 0x2394 <disk_read+0x86>
    2362:	00 e0       	ldi	r16, 0x00	; 0
    2364:	17 c0       	rjmp	.+46     	; 0x2394 <disk_read+0x86>
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
    2366:	ba 01       	movw	r22, r20
    2368:	a9 01       	movw	r20, r18
    236a:	82 e1       	ldi	r24, 0x12	; 18
    236c:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2370:	81 11       	cpse	r24, r1
    2372:	10 c0       	rjmp	.+32     	; 0x2394 <disk_read+0x86>
			do {
				if (!rcvr_datablock(buff, 512)) break;
    2374:	60 e0       	ldi	r22, 0x00	; 0
    2376:	72 e0       	ldi	r23, 0x02	; 2
    2378:	ce 01       	movw	r24, r28
    237a:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    237e:	89 2b       	or	r24, r25
    2380:	19 f0       	breq	.+6      	; 0x2388 <disk_read+0x7a>
				buff += 512;
    2382:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
    2384:	01 50       	subi	r16, 0x01	; 1
    2386:	b1 f7       	brne	.-20     	; 0x2374 <disk_read+0x66>
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
    2388:	40 e0       	ldi	r20, 0x00	; 0
    238a:	50 e0       	ldi	r21, 0x00	; 0
    238c:	ba 01       	movw	r22, r20
    238e:	8c e0       	ldi	r24, 0x0C	; 12
    2390:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
		}
	}
	deselect();
    2394:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>

	return count ? RES_ERROR : RES_OK;
    2398:	81 e0       	ldi	r24, 0x01	; 1
    239a:	01 11       	cpse	r16, r1
    239c:	07 c0       	rjmp	.+14     	; 0x23ac <disk_read+0x9e>
    239e:	80 e0       	ldi	r24, 0x00	; 0
    23a0:	05 c0       	rjmp	.+10     	; 0x23ac <disk_read+0x9e>
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..255) */
)
{
	if (pdrv || !count) return RES_PARERR;
    23a2:	84 e0       	ldi	r24, 0x04	; 4
    23a4:	03 c0       	rjmp	.+6      	; 0x23ac <disk_read+0x9e>
    23a6:	84 e0       	ldi	r24, 0x04	; 4
    23a8:	01 c0       	rjmp	.+2      	; 0x23ac <disk_read+0x9e>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    23aa:	83 e0       	ldi	r24, 0x03	; 3
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    23ac:	df 91       	pop	r29
    23ae:	cf 91       	pop	r28
    23b0:	0f 91       	pop	r16
    23b2:	08 95       	ret

000023b4 <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..255) */
)
{
    23b4:	cf 92       	push	r12
    23b6:	df 92       	push	r13
    23b8:	ef 92       	push	r14
    23ba:	ff 92       	push	r15
    23bc:	0f 93       	push	r16
    23be:	cf 93       	push	r28
    23c0:	df 93       	push	r29
    23c2:	eb 01       	movw	r28, r22
    23c4:	69 01       	movw	r12, r18
    23c6:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
    23c8:	81 11       	cpse	r24, r1
    23ca:	51 c0       	rjmp	.+162    	; 0x246e <disk_write+0xba>
    23cc:	00 23       	and	r16, r16
    23ce:	09 f4       	brne	.+2      	; 0x23d2 <disk_write+0x1e>
    23d0:	50 c0       	rjmp	.+160    	; 0x2472 <disk_write+0xbe>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    23d2:	80 91 60 00 	lds	r24, 0x0060
    23d6:	80 fd       	sbrc	r24, 0
    23d8:	4e c0       	rjmp	.+156    	; 0x2476 <disk_write+0xc2>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    23da:	80 91 60 00 	lds	r24, 0x0060
    23de:	82 fd       	sbrc	r24, 2
    23e0:	4c c0       	rjmp	.+152    	; 0x247a <disk_write+0xc6>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    23e2:	80 91 7f 00 	lds	r24, 0x007F
    23e6:	83 fd       	sbrc	r24, 3
    23e8:	09 c0       	rjmp	.+18     	; 0x23fc <disk_write+0x48>
    23ea:	0b 2e       	mov	r0, r27
    23ec:	b9 e0       	ldi	r27, 0x09	; 9
    23ee:	cc 0c       	add	r12, r12
    23f0:	dd 1c       	adc	r13, r13
    23f2:	ee 1c       	adc	r14, r14
    23f4:	ff 1c       	adc	r15, r15
    23f6:	ba 95       	dec	r27
    23f8:	d1 f7       	brne	.-12     	; 0x23ee <disk_write+0x3a>
    23fa:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
    23fc:	01 30       	cpi	r16, 0x01	; 1
    23fe:	79 f4       	brne	.+30     	; 0x241e <disk_write+0x6a>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    2400:	b7 01       	movw	r22, r14
    2402:	a6 01       	movw	r20, r12
    2404:	88 e1       	ldi	r24, 0x18	; 24
    2406:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    240a:	81 11       	cpse	r24, r1
    240c:	29 c0       	rjmp	.+82     	; 0x2460 <disk_write+0xac>
			&& xmit_datablock(buff, 0xFE))
    240e:	6e ef       	ldi	r22, 0xFE	; 254
    2410:	ce 01       	movw	r24, r28
    2412:	0e 94 6d 10 	call	0x20da	; 0x20da <xmit_datablock>
    2416:	89 2b       	or	r24, r25
    2418:	19 f1       	breq	.+70     	; 0x2460 <disk_write+0xac>
    241a:	00 e0       	ldi	r16, 0x00	; 0
    241c:	21 c0       	rjmp	.+66     	; 0x2460 <disk_write+0xac>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    241e:	86 70       	andi	r24, 0x06	; 6
    2420:	39 f0       	breq	.+14     	; 0x2430 <disk_write+0x7c>
    2422:	40 2f       	mov	r20, r16
    2424:	50 e0       	ldi	r21, 0x00	; 0
    2426:	60 e0       	ldi	r22, 0x00	; 0
    2428:	70 e0       	ldi	r23, 0x00	; 0
    242a:	87 e9       	ldi	r24, 0x97	; 151
    242c:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    2430:	b7 01       	movw	r22, r14
    2432:	a6 01       	movw	r20, r12
    2434:	89 e1       	ldi	r24, 0x19	; 25
    2436:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    243a:	81 11       	cpse	r24, r1
    243c:	11 c0       	rjmp	.+34     	; 0x2460 <disk_write+0xac>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    243e:	6c ef       	ldi	r22, 0xFC	; 252
    2440:	ce 01       	movw	r24, r28
    2442:	0e 94 6d 10 	call	0x20da	; 0x20da <xmit_datablock>
    2446:	89 2b       	or	r24, r25
    2448:	19 f0       	breq	.+6      	; 0x2450 <disk_write+0x9c>
				buff += 512;
    244a:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
    244c:	01 50       	subi	r16, 0x01	; 1
    244e:	b9 f7       	brne	.-18     	; 0x243e <disk_write+0x8a>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
    2450:	6d ef       	ldi	r22, 0xFD	; 253
    2452:	80 e0       	ldi	r24, 0x00	; 0
    2454:	90 e0       	ldi	r25, 0x00	; 0
    2456:	0e 94 6d 10 	call	0x20da	; 0x20da <xmit_datablock>
    245a:	89 2b       	or	r24, r25
    245c:	09 f4       	brne	.+2      	; 0x2460 <disk_write+0xac>
				count = 1;
    245e:	01 e0       	ldi	r16, 0x01	; 1
		}
	}
	deselect();
    2460:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>

	return count ? RES_ERROR : RES_OK;
    2464:	81 e0       	ldi	r24, 0x01	; 1
    2466:	01 11       	cpse	r16, r1
    2468:	09 c0       	rjmp	.+18     	; 0x247c <disk_write+0xc8>
    246a:	80 e0       	ldi	r24, 0x00	; 0
    246c:	07 c0       	rjmp	.+14     	; 0x247c <disk_write+0xc8>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..255) */
)
{
	if (pdrv || !count) return RES_PARERR;
    246e:	84 e0       	ldi	r24, 0x04	; 4
    2470:	05 c0       	rjmp	.+10     	; 0x247c <disk_write+0xc8>
    2472:	84 e0       	ldi	r24, 0x04	; 4
    2474:	03 c0       	rjmp	.+6      	; 0x247c <disk_write+0xc8>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    2476:	83 e0       	ldi	r24, 0x03	; 3
    2478:	01 c0       	rjmp	.+2      	; 0x247c <disk_write+0xc8>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    247a:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    247c:	df 91       	pop	r29
    247e:	cf 91       	pop	r28
    2480:	0f 91       	pop	r16
    2482:	ff 90       	pop	r15
    2484:	ef 90       	pop	r14
    2486:	df 90       	pop	r13
    2488:	cf 90       	pop	r12
    248a:	08 95       	ret

0000248c <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    248c:	ef 92       	push	r14
    248e:	ff 92       	push	r15
    2490:	0f 93       	push	r16
    2492:	1f 93       	push	r17
    2494:	cf 93       	push	r28
    2496:	df 93       	push	r29
    2498:	cd b7       	in	r28, 0x3d	; 61
    249a:	de b7       	in	r29, 0x3e	; 62
    249c:	60 97       	sbiw	r28, 0x10	; 16
    249e:	0f b6       	in	r0, 0x3f	; 63
    24a0:	f8 94       	cli
    24a2:	de bf       	out	0x3e, r29	; 62
    24a4:	0f be       	out	0x3f, r0	; 63
    24a6:	cd bf       	out	0x3d, r28	; 61
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD *dp, st, ed, csize;


	if (pdrv) return RES_PARERR;
    24a8:	81 11       	cpse	r24, r1
    24aa:	99 c1       	rjmp	.+818    	; 0x27de <disk_ioctl+0x352>
    24ac:	7a 01       	movw	r14, r20

	res = RES_ERROR;

	if (cmd == CTRL_POWER) {
    24ae:	65 30       	cpi	r22, 0x05	; 5
    24b0:	81 f4       	brne	.+32     	; 0x24d2 <disk_ioctl+0x46>
		switch (ptr[0]) {
    24b2:	fa 01       	movw	r30, r20
    24b4:	80 81       	ld	r24, Z
    24b6:	88 23       	and	r24, r24
    24b8:	19 f0       	breq	.+6      	; 0x24c0 <disk_ioctl+0x34>
    24ba:	81 30       	cpi	r24, 0x01	; 1
    24bc:	29 f0       	breq	.+10     	; 0x24c8 <disk_ioctl+0x3c>
    24be:	91 c1       	rjmp	.+802    	; 0x27e2 <disk_ioctl+0x356>
		case 0:		/* Sub control code (POWER_OFF) */
			power_off();		/* Power off */
    24c0:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <power_off>
			res = RES_OK;
    24c4:	80 e0       	ldi	r24, 0x00	; 0
			break;
    24c6:	90 c1       	rjmp	.+800    	; 0x27e8 <disk_ioctl+0x35c>
		case 1:		/* Sub control code (POWER_GET) */
			ptr[1] = (BYTE)power_status();
    24c8:	81 e0       	ldi	r24, 0x01	; 1
    24ca:	fa 01       	movw	r30, r20
    24cc:	81 83       	std	Z+1, r24	; 0x01
			res = RES_OK;
    24ce:	80 e0       	ldi	r24, 0x00	; 0
			break;
    24d0:	8b c1       	rjmp	.+790    	; 0x27e8 <disk_ioctl+0x35c>
		default :
			res = RES_PARERR;
		}
	}
	else {
		if (Stat & STA_NOINIT) return RES_NOTRDY;
    24d2:	80 91 60 00 	lds	r24, 0x0060
    24d6:	80 fd       	sbrc	r24, 0
    24d8:	86 c1       	rjmp	.+780    	; 0x27e6 <disk_ioctl+0x35a>

		switch (cmd) {
    24da:	06 2f       	mov	r16, r22
    24dc:	10 e0       	ldi	r17, 0x00	; 0
    24de:	0f 30       	cpi	r16, 0x0F	; 15
    24e0:	11 05       	cpc	r17, r1
    24e2:	08 f0       	brcs	.+2      	; 0x24e6 <disk_ioctl+0x5a>
    24e4:	63 c1       	rjmp	.+710    	; 0x27ac <disk_ioctl+0x320>
    24e6:	f8 01       	movw	r30, r16
    24e8:	e6 5d       	subi	r30, 0xD6	; 214
    24ea:	ff 4f       	sbci	r31, 0xFF	; 255
    24ec:	0c 94 44 15 	jmp	0x2a88	; 0x2a88 <__tablejump2__>
		case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
			if (select()) res = RES_OK;
    24f0:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <select>
    24f4:	11 e0       	ldi	r17, 0x01	; 1
    24f6:	89 2b       	or	r24, r25
    24f8:	09 f4       	brne	.+2      	; 0x24fc <disk_ioctl+0x70>
    24fa:	6d c1       	rjmp	.+730    	; 0x27d6 <disk_ioctl+0x34a>
    24fc:	10 e0       	ldi	r17, 0x00	; 0
    24fe:	6b c1       	rjmp	.+726    	; 0x27d6 <disk_ioctl+0x34a>
			break;

		case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    2500:	40 e0       	ldi	r20, 0x00	; 0
    2502:	50 e0       	ldi	r21, 0x00	; 0
    2504:	ba 01       	movw	r22, r20
    2506:	89 e0       	ldi	r24, 0x09	; 9
    2508:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    250c:	81 11       	cpse	r24, r1
    250e:	50 c1       	rjmp	.+672    	; 0x27b0 <disk_ioctl+0x324>
    2510:	60 e1       	ldi	r22, 0x10	; 16
    2512:	70 e0       	ldi	r23, 0x00	; 0
    2514:	ce 01       	movw	r24, r28
    2516:	01 96       	adiw	r24, 0x01	; 1
    2518:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    251c:	89 2b       	or	r24, r25
    251e:	09 f4       	brne	.+2      	; 0x2522 <disk_ioctl+0x96>
    2520:	49 c1       	rjmp	.+658    	; 0x27b4 <disk_ioctl+0x328>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    2522:	89 81       	ldd	r24, Y+1	; 0x01
    2524:	82 95       	swap	r24
    2526:	86 95       	lsr	r24
    2528:	86 95       	lsr	r24
    252a:	83 70       	andi	r24, 0x03	; 3
    252c:	81 30       	cpi	r24, 0x01	; 1
    252e:	31 f5       	brne	.+76     	; 0x257c <disk_ioctl+0xf0>
					csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    2530:	88 85       	ldd	r24, Y+8	; 0x08
    2532:	8f 73       	andi	r24, 0x3F	; 63
    2534:	90 e0       	ldi	r25, 0x00	; 0
    2536:	a0 e0       	ldi	r26, 0x00	; 0
    2538:	b0 e0       	ldi	r27, 0x00	; 0
    253a:	dc 01       	movw	r26, r24
    253c:	99 27       	eor	r25, r25
    253e:	88 27       	eor	r24, r24
    2540:	01 96       	adiw	r24, 0x01	; 1
    2542:	a1 1d       	adc	r26, r1
    2544:	b1 1d       	adc	r27, r1
    2546:	29 85       	ldd	r18, Y+9	; 0x09
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	32 2f       	mov	r19, r18
    254c:	22 27       	eor	r18, r18
    254e:	4a 85       	ldd	r20, Y+10	; 0x0a
    2550:	24 0f       	add	r18, r20
    2552:	31 1d       	adc	r19, r1
    2554:	82 0f       	add	r24, r18
    2556:	93 1f       	adc	r25, r19
    2558:	a1 1d       	adc	r26, r1
    255a:	b1 1d       	adc	r27, r1
					*(DWORD*)buff = csize << 10;
    255c:	07 2e       	mov	r0, r23
    255e:	7a e0       	ldi	r23, 0x0A	; 10
    2560:	88 0f       	add	r24, r24
    2562:	99 1f       	adc	r25, r25
    2564:	aa 1f       	adc	r26, r26
    2566:	bb 1f       	adc	r27, r27
    2568:	7a 95       	dec	r23
    256a:	d1 f7       	brne	.-12     	; 0x2560 <disk_ioctl+0xd4>
    256c:	70 2d       	mov	r23, r0
    256e:	f7 01       	movw	r30, r14
    2570:	80 83       	st	Z, r24
    2572:	91 83       	std	Z+1, r25	; 0x01
    2574:	a2 83       	std	Z+2, r26	; 0x02
    2576:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* SDC ver 1.XX or MMC*/
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(DWORD*)buff = csize << (n - 9);
				}
				res = RES_OK;
    2578:	10 e0       	ldi	r17, 0x00	; 0
    257a:	2d c1       	rjmp	.+602    	; 0x27d6 <disk_ioctl+0x34a>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(DWORD*)buff = csize << 10;
				} else {					/* SDC ver 1.XX or MMC*/
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    257c:	29 85       	ldd	r18, Y+9	; 0x09
    257e:	22 95       	swap	r18
    2580:	26 95       	lsr	r18
    2582:	26 95       	lsr	r18
    2584:	23 70       	andi	r18, 0x03	; 3
    2586:	88 85       	ldd	r24, Y+8	; 0x08
    2588:	f4 e0       	ldi	r31, 0x04	; 4
    258a:	8f 9f       	mul	r24, r31
    258c:	c0 01       	movw	r24, r0
    258e:	11 24       	eor	r1, r1
    2590:	82 0f       	add	r24, r18
    2592:	91 1d       	adc	r25, r1
    2594:	9c 01       	movw	r18, r24
    2596:	2f 5f       	subi	r18, 0xFF	; 255
    2598:	3f 4f       	sbci	r19, 0xFF	; 255
    259a:	8f 81       	ldd	r24, Y+7	; 0x07
    259c:	83 70       	andi	r24, 0x03	; 3
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	98 2f       	mov	r25, r24
    25a2:	88 27       	eor	r24, r24
    25a4:	99 0f       	add	r25, r25
    25a6:	99 0f       	add	r25, r25
    25a8:	82 0f       	add	r24, r18
    25aa:	93 1f       	adc	r25, r19
    25ac:	a0 e0       	ldi	r26, 0x00	; 0
    25ae:	b0 e0       	ldi	r27, 0x00	; 0
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(DWORD*)buff = csize << 10;
				} else {					/* SDC ver 1.XX or MMC*/
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    25b0:	3e 81       	ldd	r19, Y+6	; 0x06
    25b2:	3f 70       	andi	r19, 0x0F	; 15
    25b4:	2b 85       	ldd	r18, Y+11	; 0x0b
    25b6:	22 1f       	adc	r18, r18
    25b8:	22 27       	eor	r18, r18
    25ba:	22 1f       	adc	r18, r18
    25bc:	32 0f       	add	r19, r18
    25be:	2a 85       	ldd	r18, Y+10	; 0x0a
    25c0:	23 70       	andi	r18, 0x03	; 3
    25c2:	22 0f       	add	r18, r18
    25c4:	23 0f       	add	r18, r19
					csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(DWORD*)buff = csize << (n - 9);
    25c6:	27 50       	subi	r18, 0x07	; 7
    25c8:	04 c0       	rjmp	.+8      	; 0x25d2 <disk_ioctl+0x146>
    25ca:	88 0f       	add	r24, r24
    25cc:	99 1f       	adc	r25, r25
    25ce:	aa 1f       	adc	r26, r26
    25d0:	bb 1f       	adc	r27, r27
    25d2:	2a 95       	dec	r18
    25d4:	d2 f7       	brpl	.-12     	; 0x25ca <disk_ioctl+0x13e>
    25d6:	f7 01       	movw	r30, r14
    25d8:	80 83       	st	Z, r24
    25da:	91 83       	std	Z+1, r25	; 0x01
    25dc:	a2 83       	std	Z+2, r26	; 0x02
    25de:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    25e0:	10 e0       	ldi	r17, 0x00	; 0
    25e2:	f9 c0       	rjmp	.+498    	; 0x27d6 <disk_ioctl+0x34a>
			}
			break;

		case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
			if (CardType & CT_SD2) {	/* SDv2? */
    25e4:	10 91 7f 00 	lds	r17, 0x007F
    25e8:	12 ff       	sbrs	r17, 2
    25ea:	2e c0       	rjmp	.+92     	; 0x2648 <disk_ioctl+0x1bc>
				if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    25ec:	40 e0       	ldi	r20, 0x00	; 0
    25ee:	50 e0       	ldi	r21, 0x00	; 0
    25f0:	ba 01       	movw	r22, r20
    25f2:	8d e8       	ldi	r24, 0x8D	; 141
    25f4:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    25f8:	81 11       	cpse	r24, r1
    25fa:	de c0       	rjmp	.+444    	; 0x27b8 <disk_ioctl+0x32c>
					xchg_spi(0xFF);
    25fc:	8f ef       	ldi	r24, 0xFF	; 255
    25fe:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
					if (rcvr_datablock(csd, 16)) {				/* Read partial block */
    2602:	60 e1       	ldi	r22, 0x10	; 16
    2604:	70 e0       	ldi	r23, 0x00	; 0
    2606:	ce 01       	movw	r24, r28
    2608:	01 96       	adiw	r24, 0x01	; 1
    260a:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    260e:	89 2b       	or	r24, r25
    2610:	09 f4       	brne	.+2      	; 0x2614 <disk_ioctl+0x188>
    2612:	d4 c0       	rjmp	.+424    	; 0x27bc <disk_ioctl+0x330>
    2614:	10 e3       	ldi	r17, 0x30	; 48
						for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
    2616:	8f ef       	ldi	r24, 0xFF	; 255
    2618:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    261c:	11 50       	subi	r17, 0x01	; 1
    261e:	d9 f7       	brne	.-10     	; 0x2616 <disk_ioctl+0x18a>
						*(DWORD*)buff = 16UL << (csd[10] >> 4);
    2620:	2b 85       	ldd	r18, Y+11	; 0x0b
    2622:	22 95       	swap	r18
    2624:	2f 70       	andi	r18, 0x0F	; 15
    2626:	80 e1       	ldi	r24, 0x10	; 16
    2628:	90 e0       	ldi	r25, 0x00	; 0
    262a:	a0 e0       	ldi	r26, 0x00	; 0
    262c:	b0 e0       	ldi	r27, 0x00	; 0
    262e:	04 c0       	rjmp	.+8      	; 0x2638 <disk_ioctl+0x1ac>
    2630:	88 0f       	add	r24, r24
    2632:	99 1f       	adc	r25, r25
    2634:	aa 1f       	adc	r26, r26
    2636:	bb 1f       	adc	r27, r27
    2638:	2a 95       	dec	r18
    263a:	d2 f7       	brpl	.-12     	; 0x2630 <disk_ioctl+0x1a4>
    263c:	f7 01       	movw	r30, r14
    263e:	80 83       	st	Z, r24
    2640:	91 83       	std	Z+1, r25	; 0x01
    2642:	a2 83       	std	Z+2, r26	; 0x02
    2644:	b3 83       	std	Z+3, r27	; 0x03
    2646:	c7 c0       	rjmp	.+398    	; 0x27d6 <disk_ioctl+0x34a>
						res = RES_OK;
					}
				}
			} else {					/* SDv1 or MMCv3 */
				if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
    2648:	40 e0       	ldi	r20, 0x00	; 0
    264a:	50 e0       	ldi	r21, 0x00	; 0
    264c:	ba 01       	movw	r22, r20
    264e:	89 e0       	ldi	r24, 0x09	; 9
    2650:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2654:	81 11       	cpse	r24, r1
    2656:	b4 c0       	rjmp	.+360    	; 0x27c0 <disk_ioctl+0x334>
    2658:	60 e1       	ldi	r22, 0x10	; 16
    265a:	70 e0       	ldi	r23, 0x00	; 0
    265c:	ce 01       	movw	r24, r28
    265e:	01 96       	adiw	r24, 0x01	; 1
    2660:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    2664:	89 2b       	or	r24, r25
    2666:	09 f4       	brne	.+2      	; 0x266a <disk_ioctl+0x1de>
    2668:	ad c0       	rjmp	.+346    	; 0x27c4 <disk_ioctl+0x338>
					if (CardType & CT_SD1) {	/* SDv1 */
    266a:	11 ff       	sbrs	r17, 1
    266c:	20 c0       	rjmp	.+64     	; 0x26ae <disk_ioctl+0x222>
						*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    266e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2670:	88 1f       	adc	r24, r24
    2672:	88 27       	eor	r24, r24
    2674:	88 1f       	adc	r24, r24
    2676:	90 e0       	ldi	r25, 0x00	; 0
    2678:	01 96       	adiw	r24, 0x01	; 1
    267a:	2b 85       	ldd	r18, Y+11	; 0x0b
    267c:	2f 73       	andi	r18, 0x3F	; 63
    267e:	82 0f       	add	r24, r18
    2680:	91 1d       	adc	r25, r1
    2682:	82 0f       	add	r24, r18
    2684:	91 1d       	adc	r25, r1
    2686:	2e 85       	ldd	r18, Y+14	; 0x0e
    2688:	22 95       	swap	r18
    268a:	26 95       	lsr	r18
    268c:	26 95       	lsr	r18
    268e:	23 70       	andi	r18, 0x03	; 3
    2690:	21 50       	subi	r18, 0x01	; 1
    2692:	02 c0       	rjmp	.+4      	; 0x2698 <disk_ioctl+0x20c>
    2694:	88 0f       	add	r24, r24
    2696:	99 1f       	adc	r25, r25
    2698:	2a 95       	dec	r18
    269a:	e2 f7       	brpl	.-8      	; 0x2694 <disk_ioctl+0x208>
    269c:	a0 e0       	ldi	r26, 0x00	; 0
    269e:	b0 e0       	ldi	r27, 0x00	; 0
    26a0:	f7 01       	movw	r30, r14
    26a2:	80 83       	st	Z, r24
    26a4:	91 83       	std	Z+1, r25	; 0x01
    26a6:	a2 83       	std	Z+2, r26	; 0x02
    26a8:	b3 83       	std	Z+3, r27	; 0x03
					} else {					/* MMCv3 */
						*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
					}
					res = RES_OK;
    26aa:	10 e0       	ldi	r17, 0x00	; 0
    26ac:	94 c0       	rjmp	.+296    	; 0x27d6 <disk_ioctl+0x34a>
			} else {					/* SDv1 or MMCv3 */
				if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
					if (CardType & CT_SD1) {	/* SDv1 */
						*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
					} else {					/* MMCv3 */
						*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    26ae:	8c 85       	ldd	r24, Y+12	; 0x0c
    26b0:	28 2f       	mov	r18, r24
    26b2:	23 70       	andi	r18, 0x03	; 3
    26b4:	82 95       	swap	r24
    26b6:	86 95       	lsr	r24
    26b8:	87 70       	andi	r24, 0x07	; 7
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	f8 e0       	ldi	r31, 0x08	; 8
    26be:	2f 9f       	mul	r18, r31
    26c0:	80 0d       	add	r24, r0
    26c2:	91 1d       	adc	r25, r1
    26c4:	11 24       	eor	r1, r1
    26c6:	01 96       	adiw	r24, 0x01	; 1
    26c8:	2b 85       	ldd	r18, Y+11	; 0x0b
    26ca:	2c 77       	andi	r18, 0x7C	; 124
    26cc:	30 e0       	ldi	r19, 0x00	; 0
    26ce:	35 95       	asr	r19
    26d0:	27 95       	ror	r18
    26d2:	35 95       	asr	r19
    26d4:	27 95       	ror	r18
    26d6:	2f 5f       	subi	r18, 0xFF	; 255
    26d8:	3f 4f       	sbci	r19, 0xFF	; 255
    26da:	82 9f       	mul	r24, r18
    26dc:	a0 01       	movw	r20, r0
    26de:	83 9f       	mul	r24, r19
    26e0:	50 0d       	add	r21, r0
    26e2:	92 9f       	mul	r25, r18
    26e4:	50 0d       	add	r21, r0
    26e6:	11 24       	eor	r1, r1
    26e8:	ca 01       	movw	r24, r20
    26ea:	a0 e0       	ldi	r26, 0x00	; 0
    26ec:	b0 e0       	ldi	r27, 0x00	; 0
    26ee:	f7 01       	movw	r30, r14
    26f0:	80 83       	st	Z, r24
    26f2:	91 83       	std	Z+1, r25	; 0x01
    26f4:	a2 83       	std	Z+2, r26	; 0x02
    26f6:	b3 83       	std	Z+3, r27	; 0x03
					}
					res = RES_OK;
    26f8:	10 e0       	ldi	r17, 0x00	; 0
    26fa:	6d c0       	rjmp	.+218    	; 0x27d6 <disk_ioctl+0x34a>
			break;

		/* Following commands are never used by FatFs module */

		case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
			*ptr = CardType;
    26fc:	80 91 7f 00 	lds	r24, 0x007F
    2700:	fa 01       	movw	r30, r20
    2702:	80 83       	st	Z, r24
			res = RES_OK;
    2704:	10 e0       	ldi	r17, 0x00	; 0
			break;
    2706:	67 c0       	rjmp	.+206    	; 0x27d6 <disk_ioctl+0x34a>

		case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
			if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
    2708:	40 e0       	ldi	r20, 0x00	; 0
    270a:	50 e0       	ldi	r21, 0x00	; 0
    270c:	ba 01       	movw	r22, r20
    270e:	89 e0       	ldi	r24, 0x09	; 9
    2710:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2714:	81 11       	cpse	r24, r1
    2716:	58 c0       	rjmp	.+176    	; 0x27c8 <disk_ioctl+0x33c>
				&& rcvr_datablock(ptr, 16))
    2718:	60 e1       	ldi	r22, 0x10	; 16
    271a:	70 e0       	ldi	r23, 0x00	; 0
    271c:	c7 01       	movw	r24, r14
    271e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    2722:	11 e0       	ldi	r17, 0x01	; 1
    2724:	89 2b       	or	r24, r25
    2726:	09 f4       	brne	.+2      	; 0x272a <disk_ioctl+0x29e>
    2728:	56 c0       	rjmp	.+172    	; 0x27d6 <disk_ioctl+0x34a>
    272a:	10 e0       	ldi	r17, 0x00	; 0
    272c:	54 c0       	rjmp	.+168    	; 0x27d6 <disk_ioctl+0x34a>
				res = RES_OK;
			break;

		case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
			if (send_cmd(CMD10, 0) == 0		/* READ_CID */
    272e:	40 e0       	ldi	r20, 0x00	; 0
    2730:	50 e0       	ldi	r21, 0x00	; 0
    2732:	ba 01       	movw	r22, r20
    2734:	8a e0       	ldi	r24, 0x0A	; 10
    2736:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    273a:	81 11       	cpse	r24, r1
    273c:	47 c0       	rjmp	.+142    	; 0x27cc <disk_ioctl+0x340>
				&& rcvr_datablock(ptr, 16))
    273e:	60 e1       	ldi	r22, 0x10	; 16
    2740:	70 e0       	ldi	r23, 0x00	; 0
    2742:	c7 01       	movw	r24, r14
    2744:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    2748:	11 e0       	ldi	r17, 0x01	; 1
    274a:	89 2b       	or	r24, r25
    274c:	09 f4       	brne	.+2      	; 0x2750 <disk_ioctl+0x2c4>
    274e:	43 c0       	rjmp	.+134    	; 0x27d6 <disk_ioctl+0x34a>
    2750:	10 e0       	ldi	r17, 0x00	; 0
    2752:	41 c0       	rjmp	.+130    	; 0x27d6 <disk_ioctl+0x34a>
				res = RES_OK;
			break;

		case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
			if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
    2754:	40 e0       	ldi	r20, 0x00	; 0
    2756:	50 e0       	ldi	r21, 0x00	; 0
    2758:	ba 01       	movw	r22, r20
    275a:	8a e3       	ldi	r24, 0x3A	; 58
    275c:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    2760:	81 11       	cpse	r24, r1
    2762:	36 c0       	rjmp	.+108    	; 0x27d0 <disk_ioctl+0x344>
    2764:	87 01       	movw	r16, r14
    2766:	f4 e0       	ldi	r31, 0x04	; 4
    2768:	ef 0e       	add	r14, r31
    276a:	f1 1c       	adc	r15, r1
				for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
    276c:	8f ef       	ldi	r24, 0xFF	; 255
    276e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
    2772:	f8 01       	movw	r30, r16
    2774:	81 93       	st	Z+, r24
    2776:	8f 01       	movw	r16, r30
    2778:	ee 15       	cp	r30, r14
    277a:	ff 05       	cpc	r31, r15
    277c:	b9 f7       	brne	.-18     	; 0x276c <disk_ioctl+0x2e0>
				res = RES_OK;
    277e:	10 e0       	ldi	r17, 0x00	; 0
    2780:	2a c0       	rjmp	.+84     	; 0x27d6 <disk_ioctl+0x34a>
			}
			break;

		case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
			if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
    2782:	40 e0       	ldi	r20, 0x00	; 0
    2784:	50 e0       	ldi	r21, 0x00	; 0
    2786:	ba 01       	movw	r22, r20
    2788:	8d e8       	ldi	r24, 0x8D	; 141
    278a:	0e 94 1d 10 	call	0x203a	; 0x203a <send_cmd>
    278e:	81 11       	cpse	r24, r1
    2790:	21 c0       	rjmp	.+66     	; 0x27d4 <disk_ioctl+0x348>
				xchg_spi(0xFF);
    2792:	8f ef       	ldi	r24, 0xFF	; 255
    2794:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <xchg_spi>
				if (rcvr_datablock(ptr, 64))
    2798:	60 e4       	ldi	r22, 0x40	; 64
    279a:	70 e0       	ldi	r23, 0x00	; 0
    279c:	c7 01       	movw	r24, r14
    279e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <rcvr_datablock>
    27a2:	11 e0       	ldi	r17, 0x01	; 1
    27a4:	89 2b       	or	r24, r25
    27a6:	b9 f0       	breq	.+46     	; 0x27d6 <disk_ioctl+0x34a>
    27a8:	10 e0       	ldi	r17, 0x00	; 0
    27aa:	15 c0       	rjmp	.+42     	; 0x27d6 <disk_ioctl+0x34a>
					res = RES_OK;
			}
			break;

		default:
			res = RES_PARERR;
    27ac:	14 e0       	ldi	r17, 0x04	; 4
    27ae:	13 c0       	rjmp	.+38     	; 0x27d6 <disk_ioctl+0x34a>
	DWORD *dp, st, ed, csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    27b0:	11 e0       	ldi	r17, 0x01	; 1
    27b2:	11 c0       	rjmp	.+34     	; 0x27d6 <disk_ioctl+0x34a>
    27b4:	11 e0       	ldi	r17, 0x01	; 1
    27b6:	0f c0       	rjmp	.+30     	; 0x27d6 <disk_ioctl+0x34a>
    27b8:	11 e0       	ldi	r17, 0x01	; 1
    27ba:	0d c0       	rjmp	.+26     	; 0x27d6 <disk_ioctl+0x34a>
    27bc:	11 e0       	ldi	r17, 0x01	; 1
    27be:	0b c0       	rjmp	.+22     	; 0x27d6 <disk_ioctl+0x34a>
    27c0:	11 e0       	ldi	r17, 0x01	; 1
    27c2:	09 c0       	rjmp	.+18     	; 0x27d6 <disk_ioctl+0x34a>
    27c4:	11 e0       	ldi	r17, 0x01	; 1
    27c6:	07 c0       	rjmp	.+14     	; 0x27d6 <disk_ioctl+0x34a>
    27c8:	11 e0       	ldi	r17, 0x01	; 1
    27ca:	05 c0       	rjmp	.+10     	; 0x27d6 <disk_ioctl+0x34a>
    27cc:	11 e0       	ldi	r17, 0x01	; 1
    27ce:	03 c0       	rjmp	.+6      	; 0x27d6 <disk_ioctl+0x34a>
    27d0:	11 e0       	ldi	r17, 0x01	; 1
    27d2:	01 c0       	rjmp	.+2      	; 0x27d6 <disk_ioctl+0x34a>
    27d4:	11 e0       	ldi	r17, 0x01	; 1

		default:
			res = RES_PARERR;
		}

		deselect();
    27d6:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <deselect>
    27da:	81 2f       	mov	r24, r17
    27dc:	05 c0       	rjmp	.+10     	; 0x27e8 <disk_ioctl+0x35c>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD *dp, st, ed, csize;


	if (pdrv) return RES_PARERR;
    27de:	84 e0       	ldi	r24, 0x04	; 4
    27e0:	03 c0       	rjmp	.+6      	; 0x27e8 <disk_ioctl+0x35c>
		case 1:		/* Sub control code (POWER_GET) */
			ptr[1] = (BYTE)power_status();
			res = RES_OK;
			break;
		default :
			res = RES_PARERR;
    27e2:	84 e0       	ldi	r24, 0x04	; 4
    27e4:	01 c0       	rjmp	.+2      	; 0x27e8 <disk_ioctl+0x35c>
		}
	}
	else {
		if (Stat & STA_NOINIT) return RES_NOTRDY;
    27e6:	83 e0       	ldi	r24, 0x03	; 3

		deselect();
	}

	return res;
}
    27e8:	60 96       	adiw	r28, 0x10	; 16
    27ea:	0f b6       	in	r0, 0x3f	; 63
    27ec:	f8 94       	cli
    27ee:	de bf       	out	0x3e, r29	; 62
    27f0:	0f be       	out	0x3f, r0	; 63
    27f2:	cd bf       	out	0x3d, r28	; 61
    27f4:	df 91       	pop	r29
    27f6:	cf 91       	pop	r28
    27f8:	1f 91       	pop	r17
    27fa:	0f 91       	pop	r16
    27fc:	ff 90       	pop	r15
    27fe:	ef 90       	pop	r14
    2800:	08 95       	ret

00002802 <disk_timerproc>:
void disk_timerproc (void)
{
	BYTE n, s;


	n = Timer1;				/* 100Hz decrement timer */
    2802:	80 91 81 00 	lds	r24, 0x0081
	if (n) Timer1 = --n;
    2806:	88 23       	and	r24, r24
    2808:	19 f0       	breq	.+6      	; 0x2810 <disk_timerproc+0xe>
    280a:	81 50       	subi	r24, 0x01	; 1
    280c:	80 93 81 00 	sts	0x0081, r24
	n = Timer2;
    2810:	80 91 80 00 	lds	r24, 0x0080
	if (n) Timer2 = --n;
    2814:	88 23       	and	r24, r24
    2816:	19 f0       	breq	.+6      	; 0x281e <disk_timerproc+0x1c>
    2818:	81 50       	subi	r24, 0x01	; 1
    281a:	80 93 80 00 	sts	0x0080, r24

	s = Stat;
    281e:	80 91 60 00 	lds	r24, 0x0060

	if (SOCKWP)				/* Write protected */
    2822:	b5 9b       	sbis	0x16, 5	; 22
    2824:	02 c0       	rjmp	.+4      	; 0x282a <disk_timerproc+0x28>
		s |= STA_PROTECT;
    2826:	84 60       	ori	r24, 0x04	; 4
    2828:	01 c0       	rjmp	.+2      	; 0x282c <disk_timerproc+0x2a>
	else					/* Write enabled */
		s &= ~STA_PROTECT;
    282a:	8b 7f       	andi	r24, 0xFB	; 251

	if (SOCKINS)			/* Card inserted */
    282c:	b4 99       	sbic	0x16, 4	; 22
    282e:	02 c0       	rjmp	.+4      	; 0x2834 <disk_timerproc+0x32>
		s &= ~STA_NODISK;
    2830:	8d 7f       	andi	r24, 0xFD	; 253
    2832:	01 c0       	rjmp	.+2      	; 0x2836 <disk_timerproc+0x34>
	else					/* Socket empty */
		s |= (STA_NODISK | STA_NOINIT);
    2834:	83 60       	ori	r24, 0x03	; 3

	Stat = s;				/* Update MMC status */
    2836:	80 93 60 00 	sts	0x0060, r24
    283a:	08 95       	ret

0000283c <uart_putc>:
void uart_putc (uint8_t d)
{
	uint8_t i;


	while (TxFifo.ct >= sizeof TxFifo.buff) ;
    283c:	e8 ec       	ldi	r30, 0xC8	; 200
    283e:	f0 e0       	ldi	r31, 0x00	; 0
    2840:	24 81       	ldd	r18, Z+4	; 0x04
    2842:	35 81       	ldd	r19, Z+5	; 0x05
    2844:	20 34       	cpi	r18, 0x40	; 64
    2846:	31 05       	cpc	r19, r1
    2848:	d8 f7       	brcc	.-10     	; 0x2840 <uart_putc+0x4>

	i = TxFifo.wi;
    284a:	e8 ec       	ldi	r30, 0xC8	; 200
    284c:	f0 e0       	ldi	r31, 0x00	; 0
    284e:	20 81       	ld	r18, Z
    2850:	31 81       	ldd	r19, Z+1	; 0x01
    2852:	33 27       	eor	r19, r19
	TxFifo.buff[i] = d;
    2854:	d9 01       	movw	r26, r18
    2856:	a8 53       	subi	r26, 0x38	; 56
    2858:	bf 4f       	sbci	r27, 0xFF	; 255
    285a:	16 96       	adiw	r26, 0x06	; 6
    285c:	8c 93       	st	X, r24
	cli();
    285e:	f8 94       	cli
	TxFifo.ct++;
    2860:	84 81       	ldd	r24, Z+4	; 0x04
    2862:	95 81       	ldd	r25, Z+5	; 0x05
    2864:	01 96       	adiw	r24, 0x01	; 1
    2866:	95 83       	std	Z+5, r25	; 0x05
    2868:	84 83       	std	Z+4, r24	; 0x04
	UCSRB = _BV(RXEN) | _BV(RXCIE) | _BV(TXEN) | _BV(UDRIE);
    286a:	88 eb       	ldi	r24, 0xB8	; 184
    286c:	8a b9       	out	0x0a, r24	; 10
	sei();
    286e:	78 94       	sei
	TxFifo.wi = (i + 1) % sizeof TxFifo.buff;
    2870:	2f 5f       	subi	r18, 0xFF	; 255
    2872:	3f 4f       	sbci	r19, 0xFF	; 255
    2874:	2f 73       	andi	r18, 0x3F	; 63
    2876:	33 27       	eor	r19, r19
    2878:	31 83       	std	Z+1, r19	; 0x01
    287a:	20 83       	st	Z, r18
    287c:	08 95       	ret

0000287e <__vector_13>:


/* UART RXC interrupt */

ISR(USART_RXC_vect)
{
    287e:	1f 92       	push	r1
    2880:	0f 92       	push	r0
    2882:	0f b6       	in	r0, 0x3f	; 63
    2884:	0f 92       	push	r0
    2886:	11 24       	eor	r1, r1
    2888:	2f 93       	push	r18
    288a:	8f 93       	push	r24
    288c:	9f 93       	push	r25
    288e:	af 93       	push	r26
    2890:	bf 93       	push	r27
    2892:	ef 93       	push	r30
    2894:	ff 93       	push	r31
	uint8_t d, n, i;


	d = UDR;
    2896:	2c b1       	in	r18, 0x0c	; 12
	n = RxFifo.ct;
    2898:	80 91 86 00 	lds	r24, 0x0086
    289c:	90 91 87 00 	lds	r25, 0x0087
	if (n < sizeof RxFifo.buff) {
    28a0:	80 34       	cpi	r24, 0x40	; 64
    28a2:	98 f4       	brcc	.+38     	; 0x28ca <__vector_13+0x4c>
		RxFifo.ct = ++n;
    28a4:	8f 5f       	subi	r24, 0xFF	; 255
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	e2 e8       	ldi	r30, 0x82	; 130
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	95 83       	std	Z+5, r25	; 0x05
    28ae:	84 83       	std	Z+4, r24	; 0x04
		i = RxFifo.wi;
    28b0:	80 81       	ld	r24, Z
    28b2:	91 81       	ldd	r25, Z+1	; 0x01
    28b4:	99 27       	eor	r25, r25
		RxFifo.buff[i] = d;
    28b6:	dc 01       	movw	r26, r24
    28b8:	ae 57       	subi	r26, 0x7E	; 126
    28ba:	bf 4f       	sbci	r27, 0xFF	; 255
    28bc:	16 96       	adiw	r26, 0x06	; 6
    28be:	2c 93       	st	X, r18
		RxFifo.wi = (i + 1) % sizeof RxFifo.buff;
    28c0:	01 96       	adiw	r24, 0x01	; 1
    28c2:	8f 73       	andi	r24, 0x3F	; 63
    28c4:	99 27       	eor	r25, r25
    28c6:	91 83       	std	Z+1, r25	; 0x01
    28c8:	80 83       	st	Z, r24
	}
}
    28ca:	ff 91       	pop	r31
    28cc:	ef 91       	pop	r30
    28ce:	bf 91       	pop	r27
    28d0:	af 91       	pop	r26
    28d2:	9f 91       	pop	r25
    28d4:	8f 91       	pop	r24
    28d6:	2f 91       	pop	r18
    28d8:	0f 90       	pop	r0
    28da:	0f be       	out	0x3f, r0	; 63
    28dc:	0f 90       	pop	r0
    28de:	1f 90       	pop	r1
    28e0:	18 95       	reti

000028e2 <__vector_14>:


/* UART UDRE interrupt */

ISR(USART_UDRE_vect)
{
    28e2:	1f 92       	push	r1
    28e4:	0f 92       	push	r0
    28e6:	0f b6       	in	r0, 0x3f	; 63
    28e8:	0f 92       	push	r0
    28ea:	11 24       	eor	r1, r1
    28ec:	2f 93       	push	r18
    28ee:	3f 93       	push	r19
    28f0:	8f 93       	push	r24
    28f2:	9f 93       	push	r25
    28f4:	af 93       	push	r26
    28f6:	bf 93       	push	r27
    28f8:	ef 93       	push	r30
    28fa:	ff 93       	push	r31
	uint8_t n, i;


	n = TxFifo.ct;
    28fc:	80 91 cc 00 	lds	r24, 0x00CC
    2900:	90 91 cd 00 	lds	r25, 0x00CD
	if (n) {
    2904:	88 23       	and	r24, r24
    2906:	c1 f0       	breq	.+48     	; 0x2938 <__vector_14+0x56>
		TxFifo.ct = --n;
    2908:	2f ef       	ldi	r18, 0xFF	; 255
    290a:	28 0f       	add	r18, r24
    290c:	82 2f       	mov	r24, r18
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	e8 ec       	ldi	r30, 0xC8	; 200
    2912:	f0 e0       	ldi	r31, 0x00	; 0
    2914:	95 83       	std	Z+5, r25	; 0x05
    2916:	84 83       	std	Z+4, r24	; 0x04
		i = TxFifo.ri;
    2918:	82 81       	ldd	r24, Z+2	; 0x02
    291a:	93 81       	ldd	r25, Z+3	; 0x03
    291c:	99 27       	eor	r25, r25
		UDR = TxFifo.buff[i];
    291e:	dc 01       	movw	r26, r24
    2920:	a8 53       	subi	r26, 0x38	; 56
    2922:	bf 4f       	sbci	r27, 0xFF	; 255
    2924:	16 96       	adiw	r26, 0x06	; 6
    2926:	3c 91       	ld	r19, X
    2928:	3c b9       	out	0x0c, r19	; 12
		TxFifo.ri = (i + 1) % sizeof TxFifo.buff;
    292a:	01 96       	adiw	r24, 0x01	; 1
    292c:	8f 73       	andi	r24, 0x3F	; 63
    292e:	99 27       	eor	r25, r25
    2930:	93 83       	std	Z+3, r25	; 0x03
    2932:	82 83       	std	Z+2, r24	; 0x02
	}
	if (n == 0) UCSRB = _BV(RXEN) | _BV(RXCIE) | _BV(TXEN);
    2934:	21 11       	cpse	r18, r1
    2936:	02 c0       	rjmp	.+4      	; 0x293c <__vector_14+0x5a>
    2938:	88 e9       	ldi	r24, 0x98	; 152
    293a:	8a b9       	out	0x0a, r24	; 10
}
    293c:	ff 91       	pop	r31
    293e:	ef 91       	pop	r30
    2940:	bf 91       	pop	r27
    2942:	af 91       	pop	r26
    2944:	9f 91       	pop	r25
    2946:	8f 91       	pop	r24
    2948:	3f 91       	pop	r19
    294a:	2f 91       	pop	r18
    294c:	0f 90       	pop	r0
    294e:	0f be       	out	0x3f, r0	; 63
    2950:	0f 90       	pop	r0
    2952:	1f 90       	pop	r1
    2954:	18 95       	reti

00002956 <__vector_10>:
	while(1)
	{
	}
}

ISR(TIMER0_COMP_vect) {
    2956:	1f 92       	push	r1
    2958:	0f 92       	push	r0
    295a:	0f b6       	in	r0, 0x3f	; 63
    295c:	0f 92       	push	r0
    295e:	11 24       	eor	r1, r1
    2960:	2f 93       	push	r18
    2962:	3f 93       	push	r19
    2964:	4f 93       	push	r20
    2966:	5f 93       	push	r21
    2968:	6f 93       	push	r22
    296a:	7f 93       	push	r23
    296c:	8f 93       	push	r24
    296e:	9f 93       	push	r25
    2970:	af 93       	push	r26
    2972:	bf 93       	push	r27
    2974:	ef 93       	push	r30
    2976:	ff 93       	push	r31
	disk_timerproc();
    2978:	0e 94 01 14 	call	0x2802	; 0x2802 <disk_timerproc>
}
    297c:	ff 91       	pop	r31
    297e:	ef 91       	pop	r30
    2980:	bf 91       	pop	r27
    2982:	af 91       	pop	r26
    2984:	9f 91       	pop	r25
    2986:	8f 91       	pop	r24
    2988:	7f 91       	pop	r23
    298a:	6f 91       	pop	r22
    298c:	5f 91       	pop	r21
    298e:	4f 91       	pop	r20
    2990:	3f 91       	pop	r19
    2992:	2f 91       	pop	r18
    2994:	0f 90       	pop	r0
    2996:	0f be       	out	0x3f, r0	; 63
    2998:	0f 90       	pop	r0
    299a:	1f 90       	pop	r1
    299c:	18 95       	reti

0000299e <uart_puts>:

void uart_puts(char * str) {
    299e:	cf 93       	push	r28
    29a0:	df 93       	push	r29
    29a2:	ec 01       	movw	r28, r24
	while (*str) {
    29a4:	88 81       	ld	r24, Y
    29a6:	88 23       	and	r24, r24
    29a8:	31 f0       	breq	.+12     	; 0x29b6 <uart_puts+0x18>
    29aa:	21 96       	adiw	r28, 0x01	; 1
		uart_putc(*str++);
    29ac:	0e 94 1e 14 	call	0x283c	; 0x283c <uart_putc>
ISR(TIMER0_COMP_vect) {
	disk_timerproc();
}

void uart_puts(char * str) {
	while (*str) {
    29b0:	89 91       	ld	r24, Y+
    29b2:	81 11       	cpse	r24, r1
    29b4:	fb cf       	rjmp	.-10     	; 0x29ac <uart_puts+0xe>
		uart_putc(*str++);
	}
}
    29b6:	df 91       	pop	r29
    29b8:	cf 91       	pop	r28
    29ba:	08 95       	ret

000029bc <main>:
char sec[512];

int main(void)
{
	FRESULT res;
	OCR0 = 0xB3; // avrcalc says that at 3.6864MHz that /8 and CTC 0xB3 will give 10ms
    29bc:	83 eb       	ldi	r24, 0xB3	; 179
    29be:	8c bf       	out	0x3c, r24	; 60
	TIMSK = (1 << OCIE0); // use COMP interrupt
    29c0:	82 e0       	ldi	r24, 0x02	; 2
    29c2:	89 bf       	out	0x39, r24	; 57
	TCCR0 = (1 << WGM01) | (1 << CS01); // CTC with div 8
    29c4:	8a e0       	ldi	r24, 0x0A	; 10
    29c6:	83 bf       	out	0x33, r24	; 51
	sei();
    29c8:	78 94       	sei
	if (disk_initialize(0) == STA_NOINIT) {
    29ca:	80 e0       	ldi	r24, 0x00	; 0
    29cc:	0e 94 ac 10 	call	0x2158	; 0x2158 <disk_initialize>
    29d0:	81 30       	cpi	r24, 0x01	; 1
    29d2:	09 f4       	brne	.+2      	; 0x29d6 <main+0x1a>
		while(1);
    29d4:	ff cf       	rjmp	.-2      	; 0x29d4 <main+0x18>
	}
	res = f_mount(0, &fs);
    29d6:	6e e0       	ldi	r22, 0x0E	; 14
    29d8:	71 e0       	ldi	r23, 0x01	; 1
    29da:	80 e0       	ldi	r24, 0x00	; 0
    29dc:	0e 94 76 0b 	call	0x16ec	; 0x16ec <f_mount>
	if (res == FR_OK) {
    29e0:	81 11       	cpse	r24, r1
    29e2:	2a c0       	rjmp	.+84     	; 0x2a38 <main+0x7c>
		res = f_open(&fin, "poem.txt", FA_OPEN_EXISTING | FA_READ);
    29e4:	41 e0       	ldi	r20, 0x01	; 1
    29e6:	60 e7       	ldi	r22, 0x70	; 112
    29e8:	70 e0       	ldi	r23, 0x00	; 0
    29ea:	84 e9       	ldi	r24, 0x94	; 148
    29ec:	93 e0       	ldi	r25, 0x03	; 3
    29ee:	0e 94 8c 0b 	call	0x1718	; 0x1718 <f_open>
		if (res == FR_OK) {
    29f2:	81 11       	cpse	r24, r1
    29f4:	21 c0       	rjmp	.+66     	; 0x2a38 <main+0x7c>
			do {
				f_gets(line, sizeof(line), &fin);
    29f6:	44 e9       	ldi	r20, 0x94	; 148
    29f8:	53 e0       	ldi	r21, 0x03	; 3
    29fa:	60 e5       	ldi	r22, 0x50	; 80
    29fc:	70 e0       	ldi	r23, 0x00	; 0
    29fe:	84 e4       	ldi	r24, 0x44	; 68
    2a00:	93 e0       	ldi	r25, 0x03	; 3
    2a02:	0e 94 67 0f 	call	0x1ece	; 0x1ece <f_gets>
				uart_puts(line);
    2a06:	84 e4       	ldi	r24, 0x44	; 68
    2a08:	93 e0       	ldi	r25, 0x03	; 3
    2a0a:	0e 94 cf 14 	call	0x299e	; 0x299e <uart_puts>
				uart_putc('\r');
    2a0e:	8d e0       	ldi	r24, 0x0D	; 13
    2a10:	0e 94 1e 14 	call	0x283c	; 0x283c <uart_putc>
			} while (!f_eof(&fin));
    2a14:	e4 e9       	ldi	r30, 0x94	; 148
    2a16:	f3 e0       	ldi	r31, 0x03	; 3
    2a18:	46 81       	ldd	r20, Z+6	; 0x06
    2a1a:	57 81       	ldd	r21, Z+7	; 0x07
    2a1c:	60 85       	ldd	r22, Z+8	; 0x08
    2a1e:	71 85       	ldd	r23, Z+9	; 0x09
    2a20:	82 85       	ldd	r24, Z+10	; 0x0a
    2a22:	93 85       	ldd	r25, Z+11	; 0x0b
    2a24:	a4 85       	ldd	r26, Z+12	; 0x0c
    2a26:	b5 85       	ldd	r27, Z+13	; 0x0d
    2a28:	48 17       	cp	r20, r24
    2a2a:	59 07       	cpc	r21, r25
    2a2c:	6a 07       	cpc	r22, r26
    2a2e:	7b 07       	cpc	r23, r27
    2a30:	11 f7       	brne	.-60     	; 0x29f6 <main+0x3a>
			f_close(&fin);
    2a32:	cf 01       	movw	r24, r30
    2a34:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <f_close>
		}
	}
	while(1)
	{
	}
    2a38:	ff cf       	rjmp	.-2      	; 0x2a38 <main+0x7c>

00002a3a <get_fattime>:
	| ((DWORD)3 << 21)
	| ((DWORD)23 << 16)
	| ((DWORD)12 << 11)
	| ((DWORD)0 << 5)
	| ((DWORD)0 >> 1);
    2a3a:	60 e0       	ldi	r22, 0x00	; 0
    2a3c:	70 e6       	ldi	r23, 0x60	; 96
    2a3e:	87 e7       	ldi	r24, 0x77	; 119
    2a40:	92 e4       	ldi	r25, 0x42	; 66
    2a42:	08 95       	ret

00002a44 <__udivmodsi4>:
    2a44:	a1 e2       	ldi	r26, 0x21	; 33
    2a46:	1a 2e       	mov	r1, r26
    2a48:	aa 1b       	sub	r26, r26
    2a4a:	bb 1b       	sub	r27, r27
    2a4c:	fd 01       	movw	r30, r26
    2a4e:	0d c0       	rjmp	.+26     	; 0x2a6a <__udivmodsi4_ep>

00002a50 <__udivmodsi4_loop>:
    2a50:	aa 1f       	adc	r26, r26
    2a52:	bb 1f       	adc	r27, r27
    2a54:	ee 1f       	adc	r30, r30
    2a56:	ff 1f       	adc	r31, r31
    2a58:	a2 17       	cp	r26, r18
    2a5a:	b3 07       	cpc	r27, r19
    2a5c:	e4 07       	cpc	r30, r20
    2a5e:	f5 07       	cpc	r31, r21
    2a60:	20 f0       	brcs	.+8      	; 0x2a6a <__udivmodsi4_ep>
    2a62:	a2 1b       	sub	r26, r18
    2a64:	b3 0b       	sbc	r27, r19
    2a66:	e4 0b       	sbc	r30, r20
    2a68:	f5 0b       	sbc	r31, r21

00002a6a <__udivmodsi4_ep>:
    2a6a:	66 1f       	adc	r22, r22
    2a6c:	77 1f       	adc	r23, r23
    2a6e:	88 1f       	adc	r24, r24
    2a70:	99 1f       	adc	r25, r25
    2a72:	1a 94       	dec	r1
    2a74:	69 f7       	brne	.-38     	; 0x2a50 <__udivmodsi4_loop>
    2a76:	60 95       	com	r22
    2a78:	70 95       	com	r23
    2a7a:	80 95       	com	r24
    2a7c:	90 95       	com	r25
    2a7e:	9b 01       	movw	r18, r22
    2a80:	ac 01       	movw	r20, r24
    2a82:	bd 01       	movw	r22, r26
    2a84:	cf 01       	movw	r24, r30
    2a86:	08 95       	ret

00002a88 <__tablejump2__>:
    2a88:	ee 0f       	add	r30, r30
    2a8a:	ff 1f       	adc	r31, r31
    2a8c:	05 90       	lpm	r0, Z+
    2a8e:	f4 91       	lpm	r31, Z
    2a90:	e0 2d       	mov	r30, r0
    2a92:	09 94       	ijmp

00002a94 <__muluhisi3>:
    2a94:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <__umulhisi3>
    2a98:	a5 9f       	mul	r26, r21
    2a9a:	90 0d       	add	r25, r0
    2a9c:	b4 9f       	mul	r27, r20
    2a9e:	90 0d       	add	r25, r0
    2aa0:	a4 9f       	mul	r26, r20
    2aa2:	80 0d       	add	r24, r0
    2aa4:	91 1d       	adc	r25, r1
    2aa6:	11 24       	eor	r1, r1
    2aa8:	08 95       	ret

00002aaa <__umulhisi3>:
    2aaa:	a2 9f       	mul	r26, r18
    2aac:	b0 01       	movw	r22, r0
    2aae:	b3 9f       	mul	r27, r19
    2ab0:	c0 01       	movw	r24, r0
    2ab2:	a3 9f       	mul	r26, r19
    2ab4:	70 0d       	add	r23, r0
    2ab6:	81 1d       	adc	r24, r1
    2ab8:	11 24       	eor	r1, r1
    2aba:	91 1d       	adc	r25, r1
    2abc:	b2 9f       	mul	r27, r18
    2abe:	70 0d       	add	r23, r0
    2ac0:	81 1d       	adc	r24, r1
    2ac2:	11 24       	eor	r1, r1
    2ac4:	91 1d       	adc	r25, r1
    2ac6:	08 95       	ret

00002ac8 <_exit>:
    2ac8:	f8 94       	cli

00002aca <__stop_program>:
    2aca:	ff cf       	rjmp	.-2      	; 0x2aca <__stop_program>
