
TimerADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000850  000008e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000850  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000410  00800112  00800112  000008f6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000954  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003b9  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001ec  00000000  00000000  00000da9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002a6  00000000  00000000  00000f95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000025c  00000000  00000000  00001344  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000023e  00000000  00000000  000015a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000017de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e5       	ldi	r30, 0x50	; 80
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 32       	cpi	r26, 0x22	; 34
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 08 01 	call	0x210	; 0x210 <main>
  9e:	0c 94 26 04 	jmp	0x84c	; 0x84c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART0SendByte>:
	//single conversion mode
	ADCSRA |= (1<<ADSC);
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
	return ADC;
}
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <USART0SendByte+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <USART0SendByte>
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	90 81       	ld	r25, Z
  ba:	95 ff       	sbrs	r25, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <USART0SendByte+0x12>
  be:	c0 93 c6 00 	sts	0x00C6, r28
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <USART0Init>:
  ca:	10 92 c5 00 	sts	0x00C5, r1
  ce:	80 e1       	ldi	r24, 0x10	; 16
  d0:	80 93 c4 00 	sts	0x00C4, r24
  d4:	e2 ec       	ldi	r30, 0xC2	; 194
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	86 60       	ori	r24, 0x06	; 6
  dc:	80 83       	st	Z, r24
  de:	e1 ec       	ldi	r30, 0xC1	; 193
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	88 61       	ori	r24, 0x18	; 24
  e6:	80 83       	st	Z, r24
  e8:	08 95       	ret

000000ea <InitADC>:
  ea:	ec e7       	ldi	r30, 0x7C	; 124
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 64       	ori	r24, 0x40	; 64
  f2:	80 83       	st	Z, r24
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	87 68       	ori	r24, 0x87	; 135
  fc:	80 83       	st	Z, r24
  fe:	80 81       	ld	r24, Z
 100:	88 60       	ori	r24, 0x08	; 8
 102:	80 83       	st	Z, r24
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	08 95       	ret

0000010c <ioinit>:
void ioinit(void)
{
	DDRB = 0b00000001; //All inputs except PB0 which is the LED output
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	84 b9       	out	0x04, r24	; 4
	
	PORTB = 0b11111111; //Set to high (for power consumption purposes)
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	85 b9       	out	0x05, r24	; 5
 114:	08 95       	ret

00000116 <__vector_21>:
}
ISR(ADC_vect)
{
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	ef 93       	push	r30
 132:	ff 93       	push	r31
	// Assign contents of ADC buffer to databuffer,
	// we know the data is ready because of the interrupt
	// (storing 10 bits in 16 bit space for now)
	 //Determine the time interval since last ADC call 
	 
	currenttime = TCNT0;
 134:	86 b5       	in	r24, 0x26	; 38
 136:	80 93 1b 01 	sts	0x011B, r24
	if (currenttime > lasttime)
 13a:	90 91 17 01 	lds	r25, 0x0117
 13e:	98 17       	cp	r25, r24
 140:	28 f4       	brcc	.+10     	; 0x14c <__vector_21+0x36>
	{
		TIMEDIFF = currenttime - lasttime;
 142:	28 2f       	mov	r18, r24
 144:	29 1b       	sub	r18, r25
 146:	20 93 1a 01 	sts	0x011A, r18
 14a:	04 c0       	rjmp	.+8      	; 0x154 <__vector_21+0x3e>
	}
	else
	{
		TIMEDIFF = 256 - (lasttime - currenttime);
 14c:	28 2f       	mov	r18, r24
 14e:	29 1b       	sub	r18, r25
 150:	20 93 1a 01 	sts	0x011A, r18
	}

	TIME = TIME + TIMEDIFF; //Add the elapsed time to total time
 154:	90 91 1a 01 	lds	r25, 0x011A
 158:	40 91 12 01 	lds	r20, 0x0112
 15c:	50 91 13 01 	lds	r21, 0x0113
 160:	60 91 14 01 	lds	r22, 0x0114
 164:	70 91 15 01 	lds	r23, 0x0115
 168:	49 0f       	add	r20, r25
 16a:	51 1d       	adc	r21, r1
 16c:	61 1d       	adc	r22, r1
 16e:	71 1d       	adc	r23, r1
 170:	40 93 12 01 	sts	0x0112, r20
 174:	50 93 13 01 	sts	0x0113, r21
 178:	60 93 14 01 	sts	0x0114, r22
 17c:	70 93 15 01 	sts	0x0115, r23
	TOT_OVERFLOW = 0; // Reset overflow counter
 180:	10 92 16 01 	sts	0x0116, r1
	//TCNT0 = 0;
	lasttime = currenttime;
 184:	80 93 17 01 	sts	0x0117, r24
	
	
	DATABUFFER[BUFFERINDEX] = ADC;
 188:	80 91 18 01 	lds	r24, 0x0118
 18c:	90 91 19 01 	lds	r25, 0x0119
 190:	20 91 78 00 	lds	r18, 0x0078
 194:	30 91 79 00 	lds	r19, 0x0079
 198:	fc 01       	movw	r30, r24
 19a:	ee 0f       	add	r30, r30
 19c:	ff 1f       	adc	r31, r31
 19e:	e4 5e       	subi	r30, 0xE4	; 228
 1a0:	fe 4f       	sbci	r31, 0xFE	; 254
 1a2:	31 83       	std	Z+1, r19	; 0x01
 1a4:	20 83       	st	Z, r18
	BUFFERINDEX++;
 1a6:	01 96       	adiw	r24, 0x01	; 1
	
	if (BUFFERINDEX==DATABUFFERSIZE)
 1a8:	81 15       	cp	r24, r1
 1aa:	22 e0       	ldi	r18, 0x02	; 2
 1ac:	92 07       	cpc	r25, r18
 1ae:	29 f0       	breq	.+10     	; 0x1ba <__vector_21+0xa4>
	//TCNT0 = 0;
	lasttime = currenttime;
	
	
	DATABUFFER[BUFFERINDEX] = ADC;
	BUFFERINDEX++;
 1b0:	90 93 19 01 	sts	0x0119, r25
 1b4:	80 93 18 01 	sts	0x0118, r24
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <__vector_21+0xac>
	
	if (BUFFERINDEX==DATABUFFERSIZE)
	{
		BUFFERINDEX=0;
 1ba:	10 92 19 01 	sts	0x0119, r1
 1be:	10 92 18 01 	sts	0x0118, r1
	}
	
}
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	7f 91       	pop	r23
 1cc:	6f 91       	pop	r22
 1ce:	5f 91       	pop	r21
 1d0:	4f 91       	pop	r20
 1d2:	3f 91       	pop	r19
 1d4:	2f 91       	pop	r18
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	0f 90       	pop	r0
 1dc:	1f 90       	pop	r1
 1de:	18 95       	reti

000001e0 <timer0_init>:
void timer0_init()
{
	
	// set up timer with prescaler = 64
	TCCR0B |= (1 << CS01)|(1 << CS00);
 1e0:	85 b5       	in	r24, 0x25	; 37
 1e2:	83 60       	ori	r24, 0x03	; 3
 1e4:	85 bd       	out	0x25, r24	; 37
	//TCCR0B |= (1 << CS02);
	// set up timer with no prescaling
	//TCCR0B |= (1 << CS00);
	
	//Initialize overflow counter variable
	TOT_OVERFLOW = 0;
 1e6:	10 92 16 01 	sts	0x0116, r1
	
	// initialize counter
	TCNT0 = 0;
 1ea:	16 bc       	out	0x26, r1	; 38
 1ec:	08 95       	ret

000001ee <__vector_16>:
}

// TIMER0 overflow interrupt service routine
// called whenever TCNT0 overflows
ISR(TIMER0_OVF_vect)
{
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	8f 93       	push	r24
	// keep a track of number of overflows
	TOT_OVERFLOW++;
 1fa:	80 91 16 01 	lds	r24, 0x0116
 1fe:	8f 5f       	subi	r24, 0xFF	; 255
 200:	80 93 16 01 	sts	0x0116, r24
}
 204:	8f 91       	pop	r24
 206:	0f 90       	pop	r0
 208:	0f be       	out	0x3f, r0	; 63
 20a:	0f 90       	pop	r0
 20c:	1f 90       	pop	r1
 20e:	18 95       	reti

00000210 <main>:
{
	
	uint16_t sensorval = 0;
	
	//Initialize IO
	ioinit();
 210:	0e 94 86 00 	call	0x10c	; 0x10c <ioinit>
	//initialize ADC
	InitADC();
 214:	0e 94 75 00 	call	0xea	; 0xea <InitADC>
	//Initialize USART0
	USART0Init();
 218:	0e 94 65 00 	call	0xca	; 0xca <USART0Init>
	// initialize timer
	timer0_init();
 21c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <timer0_init>

	//Set buffer index to zero before enabling interrupts
	BUFFERINDEX = 0;
 220:	10 92 19 01 	sts	0x0119, r1
 224:	10 92 18 01 	sts	0x0118, r1
	TIME = 0;
 228:	10 92 12 01 	sts	0x0112, r1
 22c:	10 92 13 01 	sts	0x0113, r1
 230:	10 92 14 01 	sts	0x0114, r1
 234:	10 92 15 01 	sts	0x0115, r1
	TIMEDIFF = 0;
 238:	10 92 1a 01 	sts	0x011A, r1
	lasttime = 0;
 23c:	10 92 17 01 	sts	0x0117, r1
	currenttime = 0;
 240:	10 92 1b 01 	sts	0x011B, r1
	PORTB &= ~(1<<PORTB0); //Turn off led
 244:	28 98       	cbi	0x05, 0	; 5
	//Enable global interrupt flag (tell CPU)
	sei();
 246:	78 94       	sei
	//assign our stream to standart I/O streams
	stdout=&usart0_str;
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	90 93 1f 05 	sts	0x051F, r25
 250:	80 93 1e 05 	sts	0x051E, r24
	
	uint16_t localbufferindex=0;
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	90 e0       	ldi	r25, 0x00	; 0
		}
		while(localbufferindex != BUFFERINDEX)
		{
			sensorval = DATABUFFER[localbufferindex];
			//Start conversion NO THIS MESSES UP TIMING
			ADCSRA |= (1<<ADSC);
 258:	0f 2e       	mov	r0, r31
 25a:	fa e7       	ldi	r31, 0x7A	; 122
 25c:	ef 2e       	mov	r14, r31
 25e:	f1 2c       	mov	r15, r1
 260:	f0 2d       	mov	r31, r0

			//sending sensor value to terminal
			printf("%u\n", (uint16_t)sensorval);
 262:	0e e0       	ldi	r16, 0x0E	; 14
 264:	11 e0       	ldi	r17, 0x01	; 1
			//Increment local buffer index
			localbufferindex++;
			if (localbufferindex==DATABUFFERSIZE)
			{
				localbufferindex=0;
 266:	c1 2c       	mov	r12, r1
 268:	d1 2c       	mov	r13, r1
//printf("%u\n", (uint16_t)TIMEDIFF);
		//This is needed for some reason for the code to work
		if(BUFFERINDEX==0)
		{
		}
		while(localbufferindex != BUFFERINDEX)
 26a:	ec 01       	movw	r28, r24
 26c:	1c c0       	rjmp	.+56     	; 0x2a6 <main+0x96>
		{
			sensorval = DATABUFFER[localbufferindex];
 26e:	fe 01       	movw	r30, r28
 270:	ee 0f       	add	r30, r30
 272:	ff 1f       	adc	r31, r31
 274:	e4 5e       	subi	r30, 0xE4	; 228
 276:	fe 4f       	sbci	r31, 0xFE	; 254
 278:	90 81       	ld	r25, Z
 27a:	21 81       	ldd	r18, Z+1	; 0x01
			//Start conversion NO THIS MESSES UP TIMING
			ADCSRA |= (1<<ADSC);
 27c:	f7 01       	movw	r30, r14
 27e:	80 81       	ld	r24, Z
 280:	80 64       	ori	r24, 0x40	; 64
 282:	80 83       	st	Z, r24

			//sending sensor value to terminal
			printf("%u\n", (uint16_t)sensorval);
 284:	2f 93       	push	r18
 286:	9f 93       	push	r25
 288:	1f 93       	push	r17
 28a:	0f 93       	push	r16
 28c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <printf>
			//Increment local buffer index
			localbufferindex++;
 290:	21 96       	adiw	r28, 0x01	; 1
			if (localbufferindex==DATABUFFERSIZE)
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	c1 15       	cp	r28, r1
 29c:	f2 e0       	ldi	r31, 0x02	; 2
 29e:	df 07       	cpc	r29, r31
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <main+0x96>
			{
				localbufferindex=0;
 2a2:	cc 2d       	mov	r28, r12
 2a4:	dd 2d       	mov	r29, r13
//printf("%u\n", (uint16_t)TIMEDIFF);
		//This is needed for some reason for the code to work
		if(BUFFERINDEX==0)
		{
		}
		while(localbufferindex != BUFFERINDEX)
 2a6:	80 91 18 01 	lds	r24, 0x0118
 2aa:	90 91 19 01 	lds	r25, 0x0119
 2ae:	c8 17       	cp	r28, r24
 2b0:	d9 07       	cpc	r29, r25
 2b2:	e9 f6       	brne	.-70     	; 0x26e <main+0x5e>
 2b4:	da cf       	rjmp	.-76     	; 0x26a <main+0x5a>

000002b6 <printf>:
 2b6:	a0 e0       	ldi	r26, 0x00	; 0
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	e1 e6       	ldi	r30, 0x61	; 97
 2bc:	f1 e0       	ldi	r31, 0x01	; 1
 2be:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__prologue_saves__+0x20>
 2c2:	ae 01       	movw	r20, r28
 2c4:	4b 5f       	subi	r20, 0xFB	; 251
 2c6:	5f 4f       	sbci	r21, 0xFF	; 255
 2c8:	fa 01       	movw	r30, r20
 2ca:	61 91       	ld	r22, Z+
 2cc:	71 91       	ld	r23, Z+
 2ce:	af 01       	movw	r20, r30
 2d0:	80 91 1e 05 	lds	r24, 0x051E
 2d4:	90 91 1f 05 	lds	r25, 0x051F
 2d8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <vfprintf>
 2dc:	e2 e0       	ldi	r30, 0x02	; 2
 2de:	0c 94 1b 04 	jmp	0x836	; 0x836 <__epilogue_restores__+0x20>

000002e2 <vfprintf>:
 2e2:	ac e0       	ldi	r26, 0x0C	; 12
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	e7 e7       	ldi	r30, 0x77	; 119
 2e8:	f1 e0       	ldi	r31, 0x01	; 1
 2ea:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__prologue_saves__>
 2ee:	7c 01       	movw	r14, r24
 2f0:	6b 01       	movw	r12, r22
 2f2:	8a 01       	movw	r16, r20
 2f4:	fc 01       	movw	r30, r24
 2f6:	17 82       	std	Z+7, r1	; 0x07
 2f8:	16 82       	std	Z+6, r1	; 0x06
 2fa:	83 81       	ldd	r24, Z+3	; 0x03
 2fc:	81 ff       	sbrs	r24, 1
 2fe:	bd c1       	rjmp	.+890    	; 0x67a <__FUSE_REGION_LENGTH__+0x27a>
 300:	ce 01       	movw	r24, r28
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	4c 01       	movw	r8, r24
 306:	f7 01       	movw	r30, r14
 308:	93 81       	ldd	r25, Z+3	; 0x03
 30a:	f6 01       	movw	r30, r12
 30c:	93 fd       	sbrc	r25, 3
 30e:	85 91       	lpm	r24, Z+
 310:	93 ff       	sbrs	r25, 3
 312:	81 91       	ld	r24, Z+
 314:	6f 01       	movw	r12, r30
 316:	88 23       	and	r24, r24
 318:	09 f4       	brne	.+2      	; 0x31c <vfprintf+0x3a>
 31a:	ab c1       	rjmp	.+854    	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
 31c:	85 32       	cpi	r24, 0x25	; 37
 31e:	39 f4       	brne	.+14     	; 0x32e <vfprintf+0x4c>
 320:	93 fd       	sbrc	r25, 3
 322:	85 91       	lpm	r24, Z+
 324:	93 ff       	sbrs	r25, 3
 326:	81 91       	ld	r24, Z+
 328:	6f 01       	movw	r12, r30
 32a:	85 32       	cpi	r24, 0x25	; 37
 32c:	29 f4       	brne	.+10     	; 0x338 <vfprintf+0x56>
 32e:	b7 01       	movw	r22, r14
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 336:	e7 cf       	rjmp	.-50     	; 0x306 <vfprintf+0x24>
 338:	51 2c       	mov	r5, r1
 33a:	31 2c       	mov	r3, r1
 33c:	20 e0       	ldi	r18, 0x00	; 0
 33e:	20 32       	cpi	r18, 0x20	; 32
 340:	a0 f4       	brcc	.+40     	; 0x36a <vfprintf+0x88>
 342:	8b 32       	cpi	r24, 0x2B	; 43
 344:	69 f0       	breq	.+26     	; 0x360 <vfprintf+0x7e>
 346:	30 f4       	brcc	.+12     	; 0x354 <vfprintf+0x72>
 348:	80 32       	cpi	r24, 0x20	; 32
 34a:	59 f0       	breq	.+22     	; 0x362 <vfprintf+0x80>
 34c:	83 32       	cpi	r24, 0x23	; 35
 34e:	69 f4       	brne	.+26     	; 0x36a <vfprintf+0x88>
 350:	20 61       	ori	r18, 0x10	; 16
 352:	2c c0       	rjmp	.+88     	; 0x3ac <vfprintf+0xca>
 354:	8d 32       	cpi	r24, 0x2D	; 45
 356:	39 f0       	breq	.+14     	; 0x366 <vfprintf+0x84>
 358:	80 33       	cpi	r24, 0x30	; 48
 35a:	39 f4       	brne	.+14     	; 0x36a <vfprintf+0x88>
 35c:	21 60       	ori	r18, 0x01	; 1
 35e:	26 c0       	rjmp	.+76     	; 0x3ac <vfprintf+0xca>
 360:	22 60       	ori	r18, 0x02	; 2
 362:	24 60       	ori	r18, 0x04	; 4
 364:	23 c0       	rjmp	.+70     	; 0x3ac <vfprintf+0xca>
 366:	28 60       	ori	r18, 0x08	; 8
 368:	21 c0       	rjmp	.+66     	; 0x3ac <vfprintf+0xca>
 36a:	27 fd       	sbrc	r18, 7
 36c:	27 c0       	rjmp	.+78     	; 0x3bc <vfprintf+0xda>
 36e:	30 ed       	ldi	r19, 0xD0	; 208
 370:	38 0f       	add	r19, r24
 372:	3a 30       	cpi	r19, 0x0A	; 10
 374:	78 f4       	brcc	.+30     	; 0x394 <vfprintf+0xb2>
 376:	26 ff       	sbrs	r18, 6
 378:	06 c0       	rjmp	.+12     	; 0x386 <vfprintf+0xa4>
 37a:	fa e0       	ldi	r31, 0x0A	; 10
 37c:	5f 9e       	mul	r5, r31
 37e:	30 0d       	add	r19, r0
 380:	11 24       	eor	r1, r1
 382:	53 2e       	mov	r5, r19
 384:	13 c0       	rjmp	.+38     	; 0x3ac <vfprintf+0xca>
 386:	8a e0       	ldi	r24, 0x0A	; 10
 388:	38 9e       	mul	r3, r24
 38a:	30 0d       	add	r19, r0
 38c:	11 24       	eor	r1, r1
 38e:	33 2e       	mov	r3, r19
 390:	20 62       	ori	r18, 0x20	; 32
 392:	0c c0       	rjmp	.+24     	; 0x3ac <vfprintf+0xca>
 394:	8e 32       	cpi	r24, 0x2E	; 46
 396:	21 f4       	brne	.+8      	; 0x3a0 <vfprintf+0xbe>
 398:	26 fd       	sbrc	r18, 6
 39a:	6b c1       	rjmp	.+726    	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
 39c:	20 64       	ori	r18, 0x40	; 64
 39e:	06 c0       	rjmp	.+12     	; 0x3ac <vfprintf+0xca>
 3a0:	8c 36       	cpi	r24, 0x6C	; 108
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <vfprintf+0xc6>
 3a4:	20 68       	ori	r18, 0x80	; 128
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <vfprintf+0xca>
 3a8:	88 36       	cpi	r24, 0x68	; 104
 3aa:	41 f4       	brne	.+16     	; 0x3bc <vfprintf+0xda>
 3ac:	f6 01       	movw	r30, r12
 3ae:	93 fd       	sbrc	r25, 3
 3b0:	85 91       	lpm	r24, Z+
 3b2:	93 ff       	sbrs	r25, 3
 3b4:	81 91       	ld	r24, Z+
 3b6:	6f 01       	movw	r12, r30
 3b8:	81 11       	cpse	r24, r1
 3ba:	c1 cf       	rjmp	.-126    	; 0x33e <vfprintf+0x5c>
 3bc:	98 2f       	mov	r25, r24
 3be:	9f 7d       	andi	r25, 0xDF	; 223
 3c0:	95 54       	subi	r25, 0x45	; 69
 3c2:	93 30       	cpi	r25, 0x03	; 3
 3c4:	28 f4       	brcc	.+10     	; 0x3d0 <vfprintf+0xee>
 3c6:	0c 5f       	subi	r16, 0xFC	; 252
 3c8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ca:	ff e3       	ldi	r31, 0x3F	; 63
 3cc:	f9 83       	std	Y+1, r31	; 0x01
 3ce:	0d c0       	rjmp	.+26     	; 0x3ea <vfprintf+0x108>
 3d0:	83 36       	cpi	r24, 0x63	; 99
 3d2:	31 f0       	breq	.+12     	; 0x3e0 <vfprintf+0xfe>
 3d4:	83 37       	cpi	r24, 0x73	; 115
 3d6:	71 f0       	breq	.+28     	; 0x3f4 <vfprintf+0x112>
 3d8:	83 35       	cpi	r24, 0x53	; 83
 3da:	09 f0       	breq	.+2      	; 0x3de <vfprintf+0xfc>
 3dc:	5b c0       	rjmp	.+182    	; 0x494 <__FUSE_REGION_LENGTH__+0x94>
 3de:	22 c0       	rjmp	.+68     	; 0x424 <__FUSE_REGION_LENGTH__+0x24>
 3e0:	f8 01       	movw	r30, r16
 3e2:	80 81       	ld	r24, Z
 3e4:	89 83       	std	Y+1, r24	; 0x01
 3e6:	0e 5f       	subi	r16, 0xFE	; 254
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	44 24       	eor	r4, r4
 3ec:	43 94       	inc	r4
 3ee:	51 2c       	mov	r5, r1
 3f0:	54 01       	movw	r10, r8
 3f2:	15 c0       	rjmp	.+42     	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 3f4:	38 01       	movw	r6, r16
 3f6:	f2 e0       	ldi	r31, 0x02	; 2
 3f8:	6f 0e       	add	r6, r31
 3fa:	71 1c       	adc	r7, r1
 3fc:	f8 01       	movw	r30, r16
 3fe:	a0 80       	ld	r10, Z
 400:	b1 80       	ldd	r11, Z+1	; 0x01
 402:	26 ff       	sbrs	r18, 6
 404:	03 c0       	rjmp	.+6      	; 0x40c <__FUSE_REGION_LENGTH__+0xc>
 406:	65 2d       	mov	r22, r5
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__FUSE_REGION_LENGTH__+0x10>
 40c:	6f ef       	ldi	r22, 0xFF	; 255
 40e:	7f ef       	ldi	r23, 0xFF	; 255
 410:	c5 01       	movw	r24, r10
 412:	2c 87       	std	Y+12, r18	; 0x0c
 414:	0e 94 4e 03 	call	0x69c	; 0x69c <strnlen>
 418:	2c 01       	movw	r4, r24
 41a:	83 01       	movw	r16, r6
 41c:	2c 85       	ldd	r18, Y+12	; 0x0c
 41e:	2f 77       	andi	r18, 0x7F	; 127
 420:	22 2e       	mov	r2, r18
 422:	17 c0       	rjmp	.+46     	; 0x452 <__FUSE_REGION_LENGTH__+0x52>
 424:	38 01       	movw	r6, r16
 426:	f2 e0       	ldi	r31, 0x02	; 2
 428:	6f 0e       	add	r6, r31
 42a:	71 1c       	adc	r7, r1
 42c:	f8 01       	movw	r30, r16
 42e:	a0 80       	ld	r10, Z
 430:	b1 80       	ldd	r11, Z+1	; 0x01
 432:	26 ff       	sbrs	r18, 6
 434:	03 c0       	rjmp	.+6      	; 0x43c <__FUSE_REGION_LENGTH__+0x3c>
 436:	65 2d       	mov	r22, r5
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 43c:	6f ef       	ldi	r22, 0xFF	; 255
 43e:	7f ef       	ldi	r23, 0xFF	; 255
 440:	c5 01       	movw	r24, r10
 442:	2c 87       	std	Y+12, r18	; 0x0c
 444:	0e 94 43 03 	call	0x686	; 0x686 <strnlen_P>
 448:	2c 01       	movw	r4, r24
 44a:	2c 85       	ldd	r18, Y+12	; 0x0c
 44c:	20 68       	ori	r18, 0x80	; 128
 44e:	22 2e       	mov	r2, r18
 450:	83 01       	movw	r16, r6
 452:	23 fc       	sbrc	r2, 3
 454:	1b c0       	rjmp	.+54     	; 0x48c <__FUSE_REGION_LENGTH__+0x8c>
 456:	83 2d       	mov	r24, r3
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	48 16       	cp	r4, r24
 45c:	59 06       	cpc	r5, r25
 45e:	b0 f4       	brcc	.+44     	; 0x48c <__FUSE_REGION_LENGTH__+0x8c>
 460:	b7 01       	movw	r22, r14
 462:	80 e2       	ldi	r24, 0x20	; 32
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 46a:	3a 94       	dec	r3
 46c:	f4 cf       	rjmp	.-24     	; 0x456 <__FUSE_REGION_LENGTH__+0x56>
 46e:	f5 01       	movw	r30, r10
 470:	27 fc       	sbrc	r2, 7
 472:	85 91       	lpm	r24, Z+
 474:	27 fe       	sbrs	r2, 7
 476:	81 91       	ld	r24, Z+
 478:	5f 01       	movw	r10, r30
 47a:	b7 01       	movw	r22, r14
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 482:	31 10       	cpse	r3, r1
 484:	3a 94       	dec	r3
 486:	f1 e0       	ldi	r31, 0x01	; 1
 488:	4f 1a       	sub	r4, r31
 48a:	51 08       	sbc	r5, r1
 48c:	41 14       	cp	r4, r1
 48e:	51 04       	cpc	r5, r1
 490:	71 f7       	brne	.-36     	; 0x46e <__FUSE_REGION_LENGTH__+0x6e>
 492:	e5 c0       	rjmp	.+458    	; 0x65e <__FUSE_REGION_LENGTH__+0x25e>
 494:	84 36       	cpi	r24, 0x64	; 100
 496:	11 f0       	breq	.+4      	; 0x49c <__FUSE_REGION_LENGTH__+0x9c>
 498:	89 36       	cpi	r24, 0x69	; 105
 49a:	39 f5       	brne	.+78     	; 0x4ea <__FUSE_REGION_LENGTH__+0xea>
 49c:	f8 01       	movw	r30, r16
 49e:	27 ff       	sbrs	r18, 7
 4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <__FUSE_REGION_LENGTH__+0xb0>
 4a2:	60 81       	ld	r22, Z
 4a4:	71 81       	ldd	r23, Z+1	; 0x01
 4a6:	82 81       	ldd	r24, Z+2	; 0x02
 4a8:	93 81       	ldd	r25, Z+3	; 0x03
 4aa:	0c 5f       	subi	r16, 0xFC	; 252
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	08 c0       	rjmp	.+16     	; 0x4c0 <__FUSE_REGION_LENGTH__+0xc0>
 4b0:	60 81       	ld	r22, Z
 4b2:	71 81       	ldd	r23, Z+1	; 0x01
 4b4:	07 2e       	mov	r0, r23
 4b6:	00 0c       	add	r0, r0
 4b8:	88 0b       	sbc	r24, r24
 4ba:	99 0b       	sbc	r25, r25
 4bc:	0e 5f       	subi	r16, 0xFE	; 254
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	2f 76       	andi	r18, 0x6F	; 111
 4c2:	72 2e       	mov	r7, r18
 4c4:	97 ff       	sbrs	r25, 7
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__FUSE_REGION_LENGTH__+0xda>
 4c8:	90 95       	com	r25
 4ca:	80 95       	com	r24
 4cc:	70 95       	com	r23
 4ce:	61 95       	neg	r22
 4d0:	7f 4f       	sbci	r23, 0xFF	; 255
 4d2:	8f 4f       	sbci	r24, 0xFF	; 255
 4d4:	9f 4f       	sbci	r25, 0xFF	; 255
 4d6:	20 68       	ori	r18, 0x80	; 128
 4d8:	72 2e       	mov	r7, r18
 4da:	2a e0       	ldi	r18, 0x0A	; 10
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	a4 01       	movw	r20, r8
 4e0:	0e 94 91 03 	call	0x722	; 0x722 <__ultoa_invert>
 4e4:	a8 2e       	mov	r10, r24
 4e6:	a8 18       	sub	r10, r8
 4e8:	44 c0       	rjmp	.+136    	; 0x572 <__FUSE_REGION_LENGTH__+0x172>
 4ea:	85 37       	cpi	r24, 0x75	; 117
 4ec:	29 f4       	brne	.+10     	; 0x4f8 <__FUSE_REGION_LENGTH__+0xf8>
 4ee:	2f 7e       	andi	r18, 0xEF	; 239
 4f0:	b2 2e       	mov	r11, r18
 4f2:	2a e0       	ldi	r18, 0x0A	; 10
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	25 c0       	rjmp	.+74     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
 4f8:	f2 2f       	mov	r31, r18
 4fa:	f9 7f       	andi	r31, 0xF9	; 249
 4fc:	bf 2e       	mov	r11, r31
 4fe:	8f 36       	cpi	r24, 0x6F	; 111
 500:	c1 f0       	breq	.+48     	; 0x532 <__FUSE_REGION_LENGTH__+0x132>
 502:	18 f4       	brcc	.+6      	; 0x50a <__FUSE_REGION_LENGTH__+0x10a>
 504:	88 35       	cpi	r24, 0x58	; 88
 506:	79 f0       	breq	.+30     	; 0x526 <__FUSE_REGION_LENGTH__+0x126>
 508:	b4 c0       	rjmp	.+360    	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
 50a:	80 37       	cpi	r24, 0x70	; 112
 50c:	19 f0       	breq	.+6      	; 0x514 <__FUSE_REGION_LENGTH__+0x114>
 50e:	88 37       	cpi	r24, 0x78	; 120
 510:	21 f0       	breq	.+8      	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
 512:	af c0       	rjmp	.+350    	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
 514:	2f 2f       	mov	r18, r31
 516:	20 61       	ori	r18, 0x10	; 16
 518:	b2 2e       	mov	r11, r18
 51a:	b4 fe       	sbrs	r11, 4
 51c:	0d c0       	rjmp	.+26     	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
 51e:	8b 2d       	mov	r24, r11
 520:	84 60       	ori	r24, 0x04	; 4
 522:	b8 2e       	mov	r11, r24
 524:	09 c0       	rjmp	.+18     	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
 526:	24 ff       	sbrs	r18, 4
 528:	0a c0       	rjmp	.+20     	; 0x53e <__FUSE_REGION_LENGTH__+0x13e>
 52a:	9f 2f       	mov	r25, r31
 52c:	96 60       	ori	r25, 0x06	; 6
 52e:	b9 2e       	mov	r11, r25
 530:	06 c0       	rjmp	.+12     	; 0x53e <__FUSE_REGION_LENGTH__+0x13e>
 532:	28 e0       	ldi	r18, 0x08	; 8
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	05 c0       	rjmp	.+10     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
 538:	20 e1       	ldi	r18, 0x10	; 16
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
 53e:	20 e1       	ldi	r18, 0x10	; 16
 540:	32 e0       	ldi	r19, 0x02	; 2
 542:	f8 01       	movw	r30, r16
 544:	b7 fe       	sbrs	r11, 7
 546:	07 c0       	rjmp	.+14     	; 0x556 <__FUSE_REGION_LENGTH__+0x156>
 548:	60 81       	ld	r22, Z
 54a:	71 81       	ldd	r23, Z+1	; 0x01
 54c:	82 81       	ldd	r24, Z+2	; 0x02
 54e:	93 81       	ldd	r25, Z+3	; 0x03
 550:	0c 5f       	subi	r16, 0xFC	; 252
 552:	1f 4f       	sbci	r17, 0xFF	; 255
 554:	06 c0       	rjmp	.+12     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
 556:	60 81       	ld	r22, Z
 558:	71 81       	ldd	r23, Z+1	; 0x01
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 5f       	subi	r16, 0xFE	; 254
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	a4 01       	movw	r20, r8
 564:	0e 94 91 03 	call	0x722	; 0x722 <__ultoa_invert>
 568:	a8 2e       	mov	r10, r24
 56a:	a8 18       	sub	r10, r8
 56c:	fb 2d       	mov	r31, r11
 56e:	ff 77       	andi	r31, 0x7F	; 127
 570:	7f 2e       	mov	r7, r31
 572:	76 fe       	sbrs	r7, 6
 574:	0b c0       	rjmp	.+22     	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
 576:	37 2d       	mov	r19, r7
 578:	3e 7f       	andi	r19, 0xFE	; 254
 57a:	a5 14       	cp	r10, r5
 57c:	50 f4       	brcc	.+20     	; 0x592 <__FUSE_REGION_LENGTH__+0x192>
 57e:	74 fe       	sbrs	r7, 4
 580:	0a c0       	rjmp	.+20     	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 582:	72 fc       	sbrc	r7, 2
 584:	08 c0       	rjmp	.+16     	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 586:	37 2d       	mov	r19, r7
 588:	3e 7e       	andi	r19, 0xEE	; 238
 58a:	05 c0       	rjmp	.+10     	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 58c:	ba 2c       	mov	r11, r10
 58e:	37 2d       	mov	r19, r7
 590:	03 c0       	rjmp	.+6      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
 592:	ba 2c       	mov	r11, r10
 594:	01 c0       	rjmp	.+2      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
 596:	b5 2c       	mov	r11, r5
 598:	34 ff       	sbrs	r19, 4
 59a:	0d c0       	rjmp	.+26     	; 0x5b6 <__FUSE_REGION_LENGTH__+0x1b6>
 59c:	fe 01       	movw	r30, r28
 59e:	ea 0d       	add	r30, r10
 5a0:	f1 1d       	adc	r31, r1
 5a2:	80 81       	ld	r24, Z
 5a4:	80 33       	cpi	r24, 0x30	; 48
 5a6:	11 f4       	brne	.+4      	; 0x5ac <__FUSE_REGION_LENGTH__+0x1ac>
 5a8:	39 7e       	andi	r19, 0xE9	; 233
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <__FUSE_REGION_LENGTH__+0x1be>
 5ac:	32 ff       	sbrs	r19, 2
 5ae:	06 c0       	rjmp	.+12     	; 0x5bc <__FUSE_REGION_LENGTH__+0x1bc>
 5b0:	b3 94       	inc	r11
 5b2:	b3 94       	inc	r11
 5b4:	04 c0       	rjmp	.+8      	; 0x5be <__FUSE_REGION_LENGTH__+0x1be>
 5b6:	83 2f       	mov	r24, r19
 5b8:	86 78       	andi	r24, 0x86	; 134
 5ba:	09 f0       	breq	.+2      	; 0x5be <__FUSE_REGION_LENGTH__+0x1be>
 5bc:	b3 94       	inc	r11
 5be:	33 fd       	sbrc	r19, 3
 5c0:	13 c0       	rjmp	.+38     	; 0x5e8 <__FUSE_REGION_LENGTH__+0x1e8>
 5c2:	30 ff       	sbrs	r19, 0
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
 5c6:	5a 2c       	mov	r5, r10
 5c8:	b3 14       	cp	r11, r3
 5ca:	18 f4       	brcc	.+6      	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
 5cc:	53 0c       	add	r5, r3
 5ce:	5b 18       	sub	r5, r11
 5d0:	b3 2c       	mov	r11, r3
 5d2:	b3 14       	cp	r11, r3
 5d4:	68 f4       	brcc	.+26     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
 5d6:	b7 01       	movw	r22, r14
 5d8:	80 e2       	ldi	r24, 0x20	; 32
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	3c 87       	std	Y+12, r19	; 0x0c
 5de:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 5e2:	b3 94       	inc	r11
 5e4:	3c 85       	ldd	r19, Y+12	; 0x0c
 5e6:	f5 cf       	rjmp	.-22     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
 5e8:	b3 14       	cp	r11, r3
 5ea:	10 f4       	brcc	.+4      	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
 5ec:	3b 18       	sub	r3, r11
 5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <__FUSE_REGION_LENGTH__+0x1f2>
 5f0:	31 2c       	mov	r3, r1
 5f2:	34 ff       	sbrs	r19, 4
 5f4:	12 c0       	rjmp	.+36     	; 0x61a <__FUSE_REGION_LENGTH__+0x21a>
 5f6:	b7 01       	movw	r22, r14
 5f8:	80 e3       	ldi	r24, 0x30	; 48
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	3c 87       	std	Y+12, r19	; 0x0c
 5fe:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 602:	3c 85       	ldd	r19, Y+12	; 0x0c
 604:	32 ff       	sbrs	r19, 2
 606:	17 c0       	rjmp	.+46     	; 0x636 <__FUSE_REGION_LENGTH__+0x236>
 608:	31 fd       	sbrc	r19, 1
 60a:	03 c0       	rjmp	.+6      	; 0x612 <__FUSE_REGION_LENGTH__+0x212>
 60c:	88 e7       	ldi	r24, 0x78	; 120
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <__FUSE_REGION_LENGTH__+0x216>
 612:	88 e5       	ldi	r24, 0x58	; 88
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	b7 01       	movw	r22, r14
 618:	0c c0       	rjmp	.+24     	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
 61a:	83 2f       	mov	r24, r19
 61c:	86 78       	andi	r24, 0x86	; 134
 61e:	59 f0       	breq	.+22     	; 0x636 <__FUSE_REGION_LENGTH__+0x236>
 620:	31 ff       	sbrs	r19, 1
 622:	02 c0       	rjmp	.+4      	; 0x628 <__FUSE_REGION_LENGTH__+0x228>
 624:	8b e2       	ldi	r24, 0x2B	; 43
 626:	01 c0       	rjmp	.+2      	; 0x62a <__FUSE_REGION_LENGTH__+0x22a>
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	37 fd       	sbrc	r19, 7
 62c:	8d e2       	ldi	r24, 0x2D	; 45
 62e:	b7 01       	movw	r22, r14
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 636:	a5 14       	cp	r10, r5
 638:	38 f4       	brcc	.+14     	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
 63a:	b7 01       	movw	r22, r14
 63c:	80 e3       	ldi	r24, 0x30	; 48
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 644:	5a 94       	dec	r5
 646:	f7 cf       	rjmp	.-18     	; 0x636 <__FUSE_REGION_LENGTH__+0x236>
 648:	aa 94       	dec	r10
 64a:	f4 01       	movw	r30, r8
 64c:	ea 0d       	add	r30, r10
 64e:	f1 1d       	adc	r31, r1
 650:	80 81       	ld	r24, Z
 652:	b7 01       	movw	r22, r14
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 65a:	a1 10       	cpse	r10, r1
 65c:	f5 cf       	rjmp	.-22     	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
 65e:	33 20       	and	r3, r3
 660:	09 f4       	brne	.+2      	; 0x664 <__FUSE_REGION_LENGTH__+0x264>
 662:	51 ce       	rjmp	.-862    	; 0x306 <vfprintf+0x24>
 664:	b7 01       	movw	r22, r14
 666:	80 e2       	ldi	r24, 0x20	; 32
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 66e:	3a 94       	dec	r3
 670:	f6 cf       	rjmp	.-20     	; 0x65e <__FUSE_REGION_LENGTH__+0x25e>
 672:	f7 01       	movw	r30, r14
 674:	86 81       	ldd	r24, Z+6	; 0x06
 676:	97 81       	ldd	r25, Z+7	; 0x07
 678:	02 c0       	rjmp	.+4      	; 0x67e <__FUSE_REGION_LENGTH__+0x27e>
 67a:	8f ef       	ldi	r24, 0xFF	; 255
 67c:	9f ef       	ldi	r25, 0xFF	; 255
 67e:	2c 96       	adiw	r28, 0x0c	; 12
 680:	e2 e1       	ldi	r30, 0x12	; 18
 682:	0c 94 0b 04 	jmp	0x816	; 0x816 <__epilogue_restores__>

00000686 <strnlen_P>:
 686:	fc 01       	movw	r30, r24
 688:	05 90       	lpm	r0, Z+
 68a:	61 50       	subi	r22, 0x01	; 1
 68c:	70 40       	sbci	r23, 0x00	; 0
 68e:	01 10       	cpse	r0, r1
 690:	d8 f7       	brcc	.-10     	; 0x688 <strnlen_P+0x2>
 692:	80 95       	com	r24
 694:	90 95       	com	r25
 696:	8e 0f       	add	r24, r30
 698:	9f 1f       	adc	r25, r31
 69a:	08 95       	ret

0000069c <strnlen>:
 69c:	fc 01       	movw	r30, r24
 69e:	61 50       	subi	r22, 0x01	; 1
 6a0:	70 40       	sbci	r23, 0x00	; 0
 6a2:	01 90       	ld	r0, Z+
 6a4:	01 10       	cpse	r0, r1
 6a6:	d8 f7       	brcc	.-10     	; 0x69e <strnlen+0x2>
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	8e 0f       	add	r24, r30
 6ae:	9f 1f       	adc	r25, r31
 6b0:	08 95       	ret

000006b2 <fputc>:
 6b2:	0f 93       	push	r16
 6b4:	1f 93       	push	r17
 6b6:	cf 93       	push	r28
 6b8:	df 93       	push	r29
 6ba:	fb 01       	movw	r30, r22
 6bc:	23 81       	ldd	r18, Z+3	; 0x03
 6be:	21 fd       	sbrc	r18, 1
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <fputc+0x16>
 6c2:	8f ef       	ldi	r24, 0xFF	; 255
 6c4:	9f ef       	ldi	r25, 0xFF	; 255
 6c6:	28 c0       	rjmp	.+80     	; 0x718 <fputc+0x66>
 6c8:	22 ff       	sbrs	r18, 2
 6ca:	16 c0       	rjmp	.+44     	; 0x6f8 <fputc+0x46>
 6cc:	46 81       	ldd	r20, Z+6	; 0x06
 6ce:	57 81       	ldd	r21, Z+7	; 0x07
 6d0:	24 81       	ldd	r18, Z+4	; 0x04
 6d2:	35 81       	ldd	r19, Z+5	; 0x05
 6d4:	42 17       	cp	r20, r18
 6d6:	53 07       	cpc	r21, r19
 6d8:	44 f4       	brge	.+16     	; 0x6ea <fputc+0x38>
 6da:	a0 81       	ld	r26, Z
 6dc:	b1 81       	ldd	r27, Z+1	; 0x01
 6de:	9d 01       	movw	r18, r26
 6e0:	2f 5f       	subi	r18, 0xFF	; 255
 6e2:	3f 4f       	sbci	r19, 0xFF	; 255
 6e4:	31 83       	std	Z+1, r19	; 0x01
 6e6:	20 83       	st	Z, r18
 6e8:	8c 93       	st	X, r24
 6ea:	26 81       	ldd	r18, Z+6	; 0x06
 6ec:	37 81       	ldd	r19, Z+7	; 0x07
 6ee:	2f 5f       	subi	r18, 0xFF	; 255
 6f0:	3f 4f       	sbci	r19, 0xFF	; 255
 6f2:	37 83       	std	Z+7, r19	; 0x07
 6f4:	26 83       	std	Z+6, r18	; 0x06
 6f6:	10 c0       	rjmp	.+32     	; 0x718 <fputc+0x66>
 6f8:	eb 01       	movw	r28, r22
 6fa:	09 2f       	mov	r16, r25
 6fc:	18 2f       	mov	r17, r24
 6fe:	00 84       	ldd	r0, Z+8	; 0x08
 700:	f1 85       	ldd	r31, Z+9	; 0x09
 702:	e0 2d       	mov	r30, r0
 704:	09 95       	icall
 706:	89 2b       	or	r24, r25
 708:	e1 f6       	brne	.-72     	; 0x6c2 <fputc+0x10>
 70a:	8e 81       	ldd	r24, Y+6	; 0x06
 70c:	9f 81       	ldd	r25, Y+7	; 0x07
 70e:	01 96       	adiw	r24, 0x01	; 1
 710:	9f 83       	std	Y+7, r25	; 0x07
 712:	8e 83       	std	Y+6, r24	; 0x06
 714:	81 2f       	mov	r24, r17
 716:	90 2f       	mov	r25, r16
 718:	df 91       	pop	r29
 71a:	cf 91       	pop	r28
 71c:	1f 91       	pop	r17
 71e:	0f 91       	pop	r16
 720:	08 95       	ret

00000722 <__ultoa_invert>:
 722:	fa 01       	movw	r30, r20
 724:	aa 27       	eor	r26, r26
 726:	28 30       	cpi	r18, 0x08	; 8
 728:	51 f1       	breq	.+84     	; 0x77e <__ultoa_invert+0x5c>
 72a:	20 31       	cpi	r18, 0x10	; 16
 72c:	81 f1       	breq	.+96     	; 0x78e <__ultoa_invert+0x6c>
 72e:	e8 94       	clt
 730:	6f 93       	push	r22
 732:	6e 7f       	andi	r22, 0xFE	; 254
 734:	6e 5f       	subi	r22, 0xFE	; 254
 736:	7f 4f       	sbci	r23, 0xFF	; 255
 738:	8f 4f       	sbci	r24, 0xFF	; 255
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	af 4f       	sbci	r26, 0xFF	; 255
 73e:	b1 e0       	ldi	r27, 0x01	; 1
 740:	3e d0       	rcall	.+124    	; 0x7be <__ultoa_invert+0x9c>
 742:	b4 e0       	ldi	r27, 0x04	; 4
 744:	3c d0       	rcall	.+120    	; 0x7be <__ultoa_invert+0x9c>
 746:	67 0f       	add	r22, r23
 748:	78 1f       	adc	r23, r24
 74a:	89 1f       	adc	r24, r25
 74c:	9a 1f       	adc	r25, r26
 74e:	a1 1d       	adc	r26, r1
 750:	68 0f       	add	r22, r24
 752:	79 1f       	adc	r23, r25
 754:	8a 1f       	adc	r24, r26
 756:	91 1d       	adc	r25, r1
 758:	a1 1d       	adc	r26, r1
 75a:	6a 0f       	add	r22, r26
 75c:	71 1d       	adc	r23, r1
 75e:	81 1d       	adc	r24, r1
 760:	91 1d       	adc	r25, r1
 762:	a1 1d       	adc	r26, r1
 764:	20 d0       	rcall	.+64     	; 0x7a6 <__ultoa_invert+0x84>
 766:	09 f4       	brne	.+2      	; 0x76a <__ultoa_invert+0x48>
 768:	68 94       	set
 76a:	3f 91       	pop	r19
 76c:	2a e0       	ldi	r18, 0x0A	; 10
 76e:	26 9f       	mul	r18, r22
 770:	11 24       	eor	r1, r1
 772:	30 19       	sub	r19, r0
 774:	30 5d       	subi	r19, 0xD0	; 208
 776:	31 93       	st	Z+, r19
 778:	de f6       	brtc	.-74     	; 0x730 <__ultoa_invert+0xe>
 77a:	cf 01       	movw	r24, r30
 77c:	08 95       	ret
 77e:	46 2f       	mov	r20, r22
 780:	47 70       	andi	r20, 0x07	; 7
 782:	40 5d       	subi	r20, 0xD0	; 208
 784:	41 93       	st	Z+, r20
 786:	b3 e0       	ldi	r27, 0x03	; 3
 788:	0f d0       	rcall	.+30     	; 0x7a8 <__ultoa_invert+0x86>
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0x5c>
 78c:	f6 cf       	rjmp	.-20     	; 0x77a <__ultoa_invert+0x58>
 78e:	46 2f       	mov	r20, r22
 790:	4f 70       	andi	r20, 0x0F	; 15
 792:	40 5d       	subi	r20, 0xD0	; 208
 794:	4a 33       	cpi	r20, 0x3A	; 58
 796:	18 f0       	brcs	.+6      	; 0x79e <__ultoa_invert+0x7c>
 798:	49 5d       	subi	r20, 0xD9	; 217
 79a:	31 fd       	sbrc	r19, 1
 79c:	40 52       	subi	r20, 0x20	; 32
 79e:	41 93       	st	Z+, r20
 7a0:	02 d0       	rcall	.+4      	; 0x7a6 <__ultoa_invert+0x84>
 7a2:	a9 f7       	brne	.-22     	; 0x78e <__ultoa_invert+0x6c>
 7a4:	ea cf       	rjmp	.-44     	; 0x77a <__ultoa_invert+0x58>
 7a6:	b4 e0       	ldi	r27, 0x04	; 4
 7a8:	a6 95       	lsr	r26
 7aa:	97 95       	ror	r25
 7ac:	87 95       	ror	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	ba 95       	dec	r27
 7b4:	c9 f7       	brne	.-14     	; 0x7a8 <__ultoa_invert+0x86>
 7b6:	00 97       	sbiw	r24, 0x00	; 0
 7b8:	61 05       	cpc	r22, r1
 7ba:	71 05       	cpc	r23, r1
 7bc:	08 95       	ret
 7be:	9b 01       	movw	r18, r22
 7c0:	ac 01       	movw	r20, r24
 7c2:	0a 2e       	mov	r0, r26
 7c4:	06 94       	lsr	r0
 7c6:	57 95       	ror	r21
 7c8:	47 95       	ror	r20
 7ca:	37 95       	ror	r19
 7cc:	27 95       	ror	r18
 7ce:	ba 95       	dec	r27
 7d0:	c9 f7       	brne	.-14     	; 0x7c4 <__ultoa_invert+0xa2>
 7d2:	62 0f       	add	r22, r18
 7d4:	73 1f       	adc	r23, r19
 7d6:	84 1f       	adc	r24, r20
 7d8:	95 1f       	adc	r25, r21
 7da:	a0 1d       	adc	r26, r0
 7dc:	08 95       	ret

000007de <__prologue_saves__>:
 7de:	2f 92       	push	r2
 7e0:	3f 92       	push	r3
 7e2:	4f 92       	push	r4
 7e4:	5f 92       	push	r5
 7e6:	6f 92       	push	r6
 7e8:	7f 92       	push	r7
 7ea:	8f 92       	push	r8
 7ec:	9f 92       	push	r9
 7ee:	af 92       	push	r10
 7f0:	bf 92       	push	r11
 7f2:	cf 92       	push	r12
 7f4:	df 92       	push	r13
 7f6:	ef 92       	push	r14
 7f8:	ff 92       	push	r15
 7fa:	0f 93       	push	r16
 7fc:	1f 93       	push	r17
 7fe:	cf 93       	push	r28
 800:	df 93       	push	r29
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	ca 1b       	sub	r28, r26
 808:	db 0b       	sbc	r29, r27
 80a:	0f b6       	in	r0, 0x3f	; 63
 80c:	f8 94       	cli
 80e:	de bf       	out	0x3e, r29	; 62
 810:	0f be       	out	0x3f, r0	; 63
 812:	cd bf       	out	0x3d, r28	; 61
 814:	09 94       	ijmp

00000816 <__epilogue_restores__>:
 816:	2a 88       	ldd	r2, Y+18	; 0x12
 818:	39 88       	ldd	r3, Y+17	; 0x11
 81a:	48 88       	ldd	r4, Y+16	; 0x10
 81c:	5f 84       	ldd	r5, Y+15	; 0x0f
 81e:	6e 84       	ldd	r6, Y+14	; 0x0e
 820:	7d 84       	ldd	r7, Y+13	; 0x0d
 822:	8c 84       	ldd	r8, Y+12	; 0x0c
 824:	9b 84       	ldd	r9, Y+11	; 0x0b
 826:	aa 84       	ldd	r10, Y+10	; 0x0a
 828:	b9 84       	ldd	r11, Y+9	; 0x09
 82a:	c8 84       	ldd	r12, Y+8	; 0x08
 82c:	df 80       	ldd	r13, Y+7	; 0x07
 82e:	ee 80       	ldd	r14, Y+6	; 0x06
 830:	fd 80       	ldd	r15, Y+5	; 0x05
 832:	0c 81       	ldd	r16, Y+4	; 0x04
 834:	1b 81       	ldd	r17, Y+3	; 0x03
 836:	aa 81       	ldd	r26, Y+2	; 0x02
 838:	b9 81       	ldd	r27, Y+1	; 0x01
 83a:	ce 0f       	add	r28, r30
 83c:	d1 1d       	adc	r29, r1
 83e:	0f b6       	in	r0, 0x3f	; 63
 840:	f8 94       	cli
 842:	de bf       	out	0x3e, r29	; 62
 844:	0f be       	out	0x3f, r0	; 63
 846:	cd bf       	out	0x3d, r28	; 61
 848:	ed 01       	movw	r28, r26
 84a:	08 95       	ret

0000084c <_exit>:
 84c:	f8 94       	cli

0000084e <__stop_program>:
 84e:	ff cf       	rjmp	.-2      	; 0x84e <__stop_program>
